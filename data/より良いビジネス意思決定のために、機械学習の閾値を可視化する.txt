<p><a href="http://blog.insightdatalabs.com/visualizing-classifier-thresholds/" rel="nofollow" title="" class="ext-link">Visualizing Machine Learning Thresholds to Make Better Business Decisions</a> （2015-10-09） by <a href="http://www.slaterstich.com/" rel="nofollow" title="" class="ext-link">Slater Stich</a><br>
posted on <a href="http://insightdatalabs.com/" rel="nofollow" title="" class="ext-link">Insight Data Lab</a> blog</p><p>Slater StichはInsight Data Labのメンターであり、前職はSquareのデータサイエンティストでした。最近、スタンフォード大学ビジネス課程の大学院へ通っています。</p><p>機械学習のモデルを構築した際、データサイエンティストとしての私たちの最終的なゴールは価値の創造でした。モデルが無かった(あっても今より原始的だった)頃よりも、何かしら良いものを生み出すためにモデルによる予測を活用したいのです。結果に焦点を当てるということはつまり、私たちのモデルのパフォーマンスの最終的な評価は、その有効性によって為されるということです。それは、モデルを利用したアプリケーションが生み出した価値の量として計測されます。この投稿では、ビジネスの価値を最大限にするモデル構築による意思決定を、選択したり理解したりする際の強力なツールとして、データの可視化を活用したいと思います。</p><p>分類アルゴリズムにおいて、最も一般的な利用パターンの1つが<strong>閾値（しきいち）</strong>です。閾値以上のスコアを持つ全てのケースに対して、何らかの特別な処置を行うのです。以下に例を挙げます。</p><p>閾値の算出はシンプルで実装が楽なのでよく利用されます。私たちは連続的なスコアをイエス／ノーの二者択一に変換します。そして所定の方法で、その結果に対処します。</p><p>閾値の算出パターンにおける最大の問題は、<strong>閾値をどの位置に設定すべきか、ということです。</strong>これは予測の問題というよりも、ビジネス上の決断なので、あらゆるケースに当てはまるような答えはありません。しかしこの投稿では、自分自身で正しい決断を下すのに役立つ、可視化の方法をご紹介したいと思います。</p><p>閾値の位置を決める際に、考慮すべき要素が3つあります。</p><p>これら全ての要素を一度に理解するために、分類器の閾値の関数としてキュー率、適合率、再現率を表すグラフを描いてみたいと思います。そうすれば異なる閾値に直面した時に、トレードオフが簡単に分かりますし、自分の個別の状況に応じて最適な選択ができます。</p><p>これを実例で見るために、かの有名な<a href="https://bigml.com/user/francisco/gallery/dataset/5163ad540c0b5e5b22000383" rel="nofollow" title="" class="ext-link">通信事業者のチャーンデータセット</a>を見てみましょう。このデータセットには契約者の電話のプランに関する情報が含まれています。最終目標は、どのユーザが次回の契約期間の前に解約するかを予測することです（その前に考えておくことがあります。解約を予測できることの価値は何でしょうか。この予測を基にどんな行動ができるでしょうか。その答えは、企業の優先度と解約を防止することの価値によりますが、いくつかアイデアはあります。つまり、10ドルの割引クーポンを解約の危険性の高いユーザに送り、もし今、新たに12か月の契約をしてくれたら割引をしますと提案します。または、さらに契約を12か月延長してくれるようなユーザには、新たな電話購入に対して補助金を出すように提案します。他にもいろいろあります）。</p><p>それではこの問題を解決する分類器を構築しましょう。独自のランダムフォレストモデルを使用します。</p><p>では、閾値の関数としての、このモデルのパフォーマンスを見てみましょう。<code>sklearn</code>の便利な関数、<code>precision_recall_curve</code>を使います。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2015/11/HLYU9Sh.png"><img src="http://postd.cc/wp/wp-content/uploads/2015/11/HLYU9Sh.png" alt="HLYU9Sh" width="502" height="356" class="alignnone size-full wp-image-5094"></a><br>
このグラフの読み方をご説明します。x軸の閾値に対して、キュー率、適合率、再現率の割合がy軸に表されています。例えば、0.4の閾値を選択します（スコア0.4以上の全てのケースに対して、調査や送付や提案など、近いうちに何らかの対処を行うということです）。すると、</p><p>もちろんこの会社にとって、0.4は最適な閾値ではないかもしれません。例えば、期間内に500ケースしか対処できないとします（この仮説の10,000ケースの5％です）。すると、閾値は0.8のあたりを選択しなければなりません。その場合、適合率は100％に跳ね上がりますが、再現率は35％程度にまで落ちます。重要なのは、このグラフによって、十分な情報を得た上で閾値を決められるようになったということです。</p><p>上で作成したグラフは、トレーニングとテストのデータ分割1セットのみでのパフォーマンスを示しています。このサンプルがモデルのパフォーマンスをほぼ忠実に示していることを期待したいのですが、起こりうるパフォーマンスの幅を知るためにもデータの分割を行ったサンプルをいくつも作成し可視化するべきでしょう。最も簡単なのは、何度もランダムにデータを分割し、分割のたびに曲線をプロットする方法です。以下は、通信事業のチャーンモデルについてランダムに50回分割を行った場合の結果を示したものです。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2015/11/e3g3Ec1.png"><img src="http://postd.cc/wp/wp-content/uploads/2015/11/e3g3Ec1.png" alt="e3g3Ec1" width="502" height="356" class="alignnone size-full wp-image-5097"></a><br>
予想通り、いくつかのバリエーションが確認できました。先ほどは、トレーニングとテストのデータに分割したサンプルを1つだけ見て、閾値が0.4の場合の見解を次のように説明しました。</p><p>新しいグラフでは値にもっと幅ができます。50回分割を行った結果を示す新しいグラフを確認してください。閾値0.4の場合に次のことが言えます。</p><p>統計的に可視化することで、更に正確に説明することもできます。それぞれの閾値に対して90％の中央区間と共に中央値の曲線をプロットしてみましょう。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2015/11/xKHb6c0.png"><img src="http://postd.cc/wp/wp-content/uploads/2015/11/xKHb6c0.png" alt="xKHb6c0" width="502" height="356" class="alignnone size-full wp-image-5095"></a><br>
これで、閾値0.4に対して、ずっと正確な説明ができるようになりました。</p><p>このグラフを使うと、実際の状況で異なる閾値の結果を比べるのと同じように、多くのことが分かります。</p><p>最後に説明したグラフについて、私が特に気に入っているところは、機械学習の結果に基づき、ビジネス上の決定力を与えてくれる点です。モデルを構築するという技術的な役割を超え、このモデルを使って実際に何を行うかを決定する役割が与えられるのです。上のグラフと、簡単なコストや利益の分析が少しだけあれば、すぐに始められます。</p><p>簡単な例を挙げてみましょう。皆さんの会社で、顧客が他社のサービスに乗り換えるのを防ぐための対策として、乗り換える危険の高い顧客に個別にダイレクトコールをかけるとします（設定した閾値以上のチャーンスコアのユーザを対象とします）。説明を分かりやすくするために、非現実的ですがこの対策はいつも効果的に機能していると仮定しましょう。つまり他社に乗り換えようとしていたユーザは、電話をもらうと乗り換えをしないと仮定します。この対策チームには3人のメンバーがいて、期限内にかけられる電話の回数は、それぞれ333回だとします。すると、期限内に合計で1,000回の電話をかけられることになります。さらに、各期限に10,000のケースが存在し、電話を1回かけるごとにメンバーに支払う金額を20ドル、ユーザが1人乗り換えると失う金額が100ドルだとします。私たちの目的に対して、この見積りが完璧である必要はありません。簡単な計算方法が好ましいです。</p><p>では、グラフを見てみましょう。閾値を0.57に設定したとします。するとキュー率は10.03％＝1,003ケースとなり、これが扱える全てのケースとなります。そしてグラフでは不確定な要素も示されます。お分かりかと思いますが、閾値0.57の場合、キュー率には8.4％=840ケースから11.4％=1,140ケースまで変化する可能性があります。あらかじめ皆さんのチームが絶対に1,000ケース以上扱えないと分かっている場合は、閾値を変更することもできます。90％の区間が1,000ケースの制限を超えないように低めの閾値（例えば0.65など）を選んでください。</p><p>更にもう少し重要な話をします。グラフを確認していただくと、上限が1,000コールという処理能力は、皆さんのビジネスにとって最適ではないことが分かるはずです。なぜなら再現率が非常に低くなっているからです。では、総費用が20ドル×1,000＝20,000ドルで適合率が96％とすると、0.96×100ドル×1,000＝96,000ドルの売り上げとなり、このオペレーションで得られる総利益は76,000ドルとなります。しかし、もし予算が2倍あったらどうでしょう？　20,000ケースのレビューが可能となり、かかる費用は4万ドル、適合率は61％で売り上げは0.61×100ドル×2,000＝122,000ドル、利益は約82,000ドルとなります。このグラフは、<em>毎期</em>6,000ドルを稼ぎ出す手助けとなるのです。</p><p>これは、より良い閾値を選ぶための知識に基づく推論です。もう少し、色々と調べてみると、この見積りに対して最適な閾値は0.33であることが分かりました。これを中央値で計算すると約90,700ドルが得られることとなります。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2015/11/zcFEAtV.png"><img src="http://postd.cc/wp/wp-content/uploads/2015/11/zcFEAtV.png" alt="zcFEAtV" width="527" height="365" class="alignnone size-full wp-image-5096"></a><br>
オペレーションの利益性には多くの不確定要素があることも既に分かっています。前もってこれを想定し、自然に起こりうるケースが起こった場合に自信を持って対処できるようにしましょう。</p><p>（追記として、説明した方がいいことがあります。分類器の一般的なデフォルト値である0.5をそのまま使った場合（例：チャーンスコアが0.5以上のケースはキューに入れ、0.5未満は無視する）、閾値のグラフで可能とされる値よりも、ずっと低い利益しか得られません。閾値が0.5で、それに合う処理能力の場合、89,200ドルではなく、得られるのは約84,000ドルで、毎期5,000ドル以上も違うのです！　）</p><p>一般的に、キュー率／適合率／再現率のグラフを使うと、オペレーションやモデルの最善の使い方を戦略的に決める際、”条件を変えたらどうなるか？　”という分析が簡単になります。</p><p>閾値は、機械学習を用いた分類器から価値を導き出す簡単で効果的な方法です。閾値を用いる場合は、本稿でご紹介したようにデータを可視化する技術を使うと、選択可能な閾値のトレードオフを、それぞれ知ることができます。それが、皆さんの個々のビジネスアプリケーションが最高の価値を創出するため、閾値を選ぶ時の一助となるのです。</p><p><em>本稿用のIPython notebookは<a href="https://github.com/InsightDataLabs/ipython-notebooks/blob/master/classifier_thresholds.ipynb" rel="nofollow" title="" class="ext-link">こちらからご利用できます</a>。</em></p>
