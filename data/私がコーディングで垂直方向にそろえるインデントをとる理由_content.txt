Why I vertically align my code (and you should too!) （2014/11/29） by Terence Eden先週、Hacker News上で興味深い議論が行われました。テーマはLinux Kernelのコーディングスタイルについてです。議論の中で私は、コーディングで垂直方向にそろえるインデントをとるべきかというささやかな聖戦を仕掛けました。私は全面的に賛成です。理由を説明しましょう。簡単な例を挙げてみます。次のようにすると、もっと読みやすくなります。ちょっと見ただけで、「bob_age」がおかしいと分かるでしょう。また、目視であちこち探さなくても、全ての値が整数であることが簡単に確認できます。この考え方は一般的に共有されているわけではありません。ですので、なぜ多くの人たちがこれを有効なスタイルガイドと考えるのか私なりに説明してみようと思います。プログラミング作業の90％は問題の解決に費やされ、残りの90％はその解決方法の理解に費やされます。コードを読むことは散文を読むこととさほど違いはありません。どちらの場合も書き手に期待するのは、選んだ言語を主題と無関係に使って冗長にせずに、論旨を明確に説明し、ごく一般的な文法スタイルを順守することです。実際に、Kernelのコーディングスタイルは、このことを重視しています。変数の名付け方は、コーディングで何を実現するのかと同じくらい重要です。次のコードについて考えてみましょう。もしコードベースを深く理解していたとしても、さほど読みやすいとは言えないコードですね。名前の付け方やスペースの入れ方、さらにキャピタライゼーションルールをよく考えて適用することで、私たちのコードはかなり読みやすくなりました。つまり、私たちのコードを引き継ぐ人がいたとしても、解読作業にあまり時間をとられることなく、内容の理解に時間をかけられるでしょう。昔からよくある炎上と同じように、等幅フォントとプロポーショナルフォントの間には、どちらも同じくらい情熱的な支持者がいます。コーディングにはプロポーショナルフォントが最適だと言う愚かな人もいるでしょう。しかしそんな野蛮人たちは相手にしないでください。
また、等幅フォントに違和感を与えようとする人もいるでしょう。彼らはプロポーショナルフォントが優れたコードを作ると純粋に主張しているからです。しかしそれも、軽薄で哀れな精神です。結局のところ、読みやすさに行き着きます。どんな表現なら、コードを最も理解しやすいでしょうか？　それは、IDEの文字のカラー定義です。つまりあなたは一目で「foo」が関数なのか、定数なのか、変数なのか、もしくはコメントなのか分かります。コードの中でそのブロックが何なのかをすぐに理解できることは、どんなことでも素晴らしいことなのです！スプレッドシートの人気が高いのはそれが理由です。列によってそろっているので、読みやすくなります。上から下へ列に沿って素早く目視で見ても、もし他と著しく異なる行があれば、気づくことができるでしょう。興味深いことに、Hacker Newsでの議論で私が直面した大きな批判は、垂直方向にそろえるインデントが有用かどうかではありませんでした。私たちが普段使っているツールがいかに貧弱かについてだったのです。そして…上記に挙げた意見は、ある状況においては正当だと言えますが、言いかえると、より良いツールが必要だということを示しているのではないでしょうか。今、私は、Elastic Tabstopsという、コードブロックのインデントを自動的にとるアイデアを思い出しました。Nick Gravgaard作ツールでは簡単にこの方法を適用することができます。このような退屈で反復的な仕事をするためにコンピュータが存在しているのであり、コードが更に読みやすくなることを考えれば、そこでCPUサイクルをどんなに”浪費”したとしても安いものでしょう。垂直方向にインデントをそろえて、コードを読みやすくすることについてはLinux Kernelを参照すると多数の例を見つけることができます。垂直方向にそろえるインデントは、あらゆる状況で有効なわけではありませんが、データの評価を迅速に行う上での可読性は、そろえない場合からすると比較にならないほど高くなります。コーディングは、自分自身の考えを表現する創造的な方法です。表現したアイデアを難しく見せてしまうようなツールであるのなら、インデントではなく、ツール自体を改善すべきでしょう。
