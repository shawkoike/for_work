<p><a href="http://jamie-wong.com/post/bezier-curves/" rel="nofollow" title="" class="ext-link">Bezier Curves from the Ground Up</a> （2016-12-29） by <a href="http://jamie-wong.com/" rel="nofollow" title="" class="ext-link">Jamie Wong</a></p><p><em>(編注：SVGアニメーションについては<a href="http://jamie-wong.com/post/bezier-curves/" rel="nofollow" title="" class="ext-link">元記事</a>で動作をご確認ください。)</em></p><p>皆さんは線分のことをどう表現しますか？　線分は、端点によって考えられるかもしれません。その端点を<em><strong>P0</strong></em>、<em><strong>P1</strong></em>と呼ぶことにしましょう。<br>
<img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier1-1024x357.png" alt="d_bezier1" width="770" height="268" class="alignnone size-large wp-image-9362"></p><p>線分を厳密に定義するならば、「<em><strong>P0</strong></em>と<em><strong>P1</strong></em>を結ぶ直線において、<em><strong>P0</strong></em>と<em><strong>P1</strong></em>の間にある全ての点の集合」と言えるかもしれません。これは以下のように表せるでしょう。<br>
<img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier2-1024x115.png" alt="d_bezier2" width="770" height="86" class="alignnone size-large wp-image-9364"></p><p>便利なことに、上記の定義から、その線分上のどこにある点の座標でも簡単に求めることができます。例えば、中点は<em><strong>L(0.5)</strong></em>にあります。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier3.jpg" alt="d_bezier3" width="1015" height="541" class="alignleft size-full wp-image-9317"></p><p>実は、2点間のどんな値でも、任意の精度で<em>線形補間する</em>ことが可能です。そのため、時間関数<em><strong>L(t)</strong></em>の<em><strong>t</strong></em>で線をたどるといった、より複雑なことができるのです。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier12-1024x418.png" alt="d_bezier12" width="770" height="314" class="alignnone size-large wp-image-9365"></p><p>ここまで来ると、「それが曲線と何の関係があるのか？」と不思議に思うかもしれません。2つの点だけで正確に線分を描けるということは、かなり直感的に理解できそうです。では、以下の曲線を正確に描くにはどうすればよいでしょうか？</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier4.jpg" alt="d_bezier4" width="995" height="203" class="alignleft size-full wp-image-9320"></p><p>このような<em>独特な</em>曲線も、3つの点だけで描くことができるとわかります！</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier5.jpg" alt="d_bezier5" width="990" height="275" class="alignleft size-full wp-image-9321"></p><p>これは2次ベジェ曲線と呼ばれます。この複雑な帽子をかぶっているかのような曲線を得るための線分は1次ベジェ曲線と言えるかもしれません。その理由を見てみましょう。</p><p>まず、<em><strong>P0</strong></em>と<em><strong>P1</strong></em>を補間すると同時に<em><strong>P1</strong></em>と<em><strong>P2</strong></em>を補間するとどんな形になるか考えてみましょう。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier13-1024x546.png" alt="d_bezier13" width="770" height="411" class="alignnone size-large wp-image-9368"></p><p>それでは、<em><strong>B0,1(t)</strong></em>と<em><strong>B1,2(t)</strong></em>の線形補間を行ってみると…</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier14-1024x478.png" alt="d_bezier14" width="770" height="359" class="alignnone size-large wp-image-9367"></p><p><em><strong>B0,1,2(t)</strong></em>の等式は<em><strong>B0,1</strong></em>と<em><strong>B1,2</strong></em>の等式にそっくりなことに注目してください。<em><strong>B0,1,2(t)</strong></em>のパスをたどるとどうなるか見てみましょう。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier15-1024x329.png" alt="d_bezier15" width="770" height="247" class="alignnone size-large wp-image-9372"></p><p>先ほどの曲線になりました！</p><p><a href="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier6.jpg"><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier6.jpg" alt="d_bezier6" width="999" height="295" class="alignleft size-full wp-image-9322"></a></p><p>2本の1次ベジェ曲線を補間すると2次ベジェ曲線が得られるのと同様に、2本の<span style="color:#2F80ED">2次ベジェ曲線</span>を補間すると<span style="color:#9B51E0">3次ベジェ曲線</span>が得られます。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier16-1024x458.png" alt="d_bezier16" width="770" height="344" class="alignnone size-large wp-image-9370"></p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier7.jpg" alt="d_bezier7" width="1019" height="293" class="alignleft size-full wp-image-9323"></p><p>ここで、厄介な再帰的定義が含まれているのではないかと内心疑問が湧くかもしれません。実は、そのとおりなのです。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier17-1024x131.png" alt="d_bezier17" width="770" height="99" class="alignnone size-large wp-image-9371"></p><p>TypeScriptで（簡潔ですが効率の悪い形で）表すと、以下のようになるでしょう。</p><p>偶然にも3次ベジェ曲線は、単純さと正確さのバランスがうまく取れているので、様々な用途に役立つようです。<a href="https://www.figma.com/" rel="nofollow" title="" class="ext-link">Figma</a>のようなベクタ編集ツールで最もよく使われるタイプの曲線です。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier8.jpg" alt="d_bezier8" width="767" height="430" class="alignleft size-full wp-image-9324"><br>
<em><a href="https://www.figma.com/" rel="nofollow" title="" class="ext-link">Figma</a>での3次ベジェ曲線</em></p><p>2つの塗り潰された丸<span style="color: #2EC1FF">●</span>は<em><strong>P0</strong></em>と<em><strong>P3</strong></em>、2つのひし形<span style="color: #2EC1FF">◇</span>は<em><strong>P1</strong></em>と<em><strong>P2</strong></em>だと考えてください。これらは、さらに複雑な曲線ベクタを構成する基本要素です。</p><p>フォントグリフは、TrueType（.ttf）フォントのベジェ曲線によって指定されます。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier9.jpg" alt="d_bezier9" width="589" height="675" class="alignnone size-full wp-image-9325"><br>
<em>3次ベジェ曲線の<a href="https://medium.com/figma-design/introducing-vector-networks-3b877d2b864f#.95e6iz9he" rel="nofollow" title="" class="ext-link">vector network</a>として表現された、<a href="http://ja.fonts2u.com/free-serif-italic.%E3%83%95%E3%82%A9%E3%83%B3%E3%83%88" rel="nofollow" title="" class="ext-link">Free Serif Italic</a>の小文字の「e」</em></p><p>Scalable Vector Graphics（.svg）ファイルのフォーマットは、ベジェ曲線を2つの<a href="https://developer.mozilla.org/ja/docs/Web/SVG/Tutorial/Paths#.E3.83.99.E3.82.B8.E3.82.A7.E6.9B.B2.E7.B7.9A" rel="nofollow" title="" class="ext-link">曲線プリミティブ</a>の1つとして使います。曲線プリミティブは、以下の画像の広範囲で使われています。</p><p><img src="http://jamie-wong.com/images/ghostscripttiger.svg" style="width: 400px"><br>
<em>SVGフォーマットの<a href="https://en.wikipedia.org/wiki/Talk%3AGhostscript#Origin_of_tiger.eps.3F_.28aka_.22cubic_spline_tiger.22.29" rel="nofollow" title="" class="ext-link">3次スプラインの虎</a></em></p><p>ベジェ曲線は、空間的曲線の表現に使われるのはもちろんですが、量間の曲線的関係の表現に使われても何ら不思議はありません。例えば、<em><strong>x</strong></em>と<em><strong>y</strong></em>の関係を示すのではなく、<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/single-transition-timing-function#Keywords_for_common_timing-functions" rel="nofollow" title="" class="ext-link">CSSのトランジションタイミング関数</a>は時間の割合が出力値の割合と関連しています。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier18-1024x282.png" alt="d_bezier18" width="770" height="212" class="alignnone size-large wp-image-9376"><br>
<em>ベジェ曲線で定義されたトランジションタイミング関数</em></p><p>3次ベジェ曲線は、CSSでタイミング関数を表現する2つの方法のうちの1つです（もう1つは<a href="https://developer.mozilla.org/en-US/docs/Web/CSS/single-transition-timing-function#The_steps()_class_of_timing-functions" rel="nofollow" title="" class="ext-link">steps()</a>）。CSSのタイミング関数における<code>cubic-bezier(x1, y1, x2, y2)</code>の記法は、3次ベジェ曲線の<em><strong>P1</strong></em>と<em><strong>P2</strong></em>の座標を指定するものです。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier10.jpg" alt="d_bezier10" width="619" height="520" class="alignnone size-full wp-image-9326"><br>
<code>transition-timing-function: cubic-bezier(x1, y1, x2, y2)</code>のグラフ<br>
Portion of CSS Property Value：CSSプロパティ値の割合<br>
Portion of Time：時間の割合</p><p>オレンジ色のボールが動いているアニメーションを作成したいとしましょう。以下全てのグラフにおいて、<span style="color: #EB5757">赤色の線</span>は一定速度での時間の動きを表しています。<br>
<img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier19-1024x632.png" alt="d_bezier19" width="770" height="475" class="alignnone size-large wp-image-9377"></p><p>ベジェ曲線は、曲線を描くのに役立つ美しい抽象概念です。最もよく使われる形態である3次ベジェ曲線は、曲線を描いて格納するという問題を4つの座標を格納するという問題に変えます。</p><p>効率面での利点の他に、4つの制御点を曲線形の上に移すと直感的に理解しやすくなり、直接操作エディタに適したものとなります。</p><p>点の2つは曲線の端点となっているので、多くのベジェ曲線を使ってさらに複雑な構造を正確に作り上げることが容易になります。端点が正確に指定されることは、アニメーションの場合は常に大変便利です。イージング関数では、<em><strong>t=0%</strong></em>の時は初期値、<em><strong>t=100%</strong></em>の時は最終値なのです。</p><p>少し気づきにくい利点は、<em><strong>P0</strong></em>と<em><strong>P1</strong></em>を結ぶ線が、<em><strong>P0</strong></em>から出る曲線の接線になっているということです。このため、点対称の制御点を持つ2本の接続した曲線がある場合、接続点の傾きは両側で同じになることが保証されます。</p><p><img src="http://postd.cc/wp/wp-content/uploads/2017/02/d_bezier11.jpg" alt="d_bezier11" width="693" height="365" class="alignleft size-full wp-image-9327"><br>
<em>左：点対称の制御点を持つ2本の接続した3次ベジェ曲線。<br>
右：制御点が点対称でない場合。</em></p><p>ベジェ曲線のような数学的概念を扱う主な利点は、自分の問題領域の他の部分では全く認識できない問題に突き当たっても、何十年にもわたる数学研究を利用すれば大抵解決できるということです。</p><p>例えば、私は本記事を書くに当たって、上掲の曲線をアニメーション化するため、指定値<em><strong>t</strong></em>でベジェ曲線を分割する方法を学ばなければなりませんでした。ですが、それに関してうまく説明されている記事「<a href="https://pomax.github.io/bezierinfo/#splitting" rel="nofollow" title="" class="ext-link">A Primer on Bézier Curves: Splitting Curves</a>」（ベジェ曲線入門：曲線を分割する）をすぐに見つけることができたのです。</p><p>また、Dudley Storeyの記事「<a href="http://thenewcode.com/744/Make-SVG-Responsive" rel="nofollow" title="" class="ext-link">Make SVG Responsive</a>」（SVGをレスポンシブに）のおかげで、本記事で使ったインラインSVGの全てについて、モバイル環境でもうまく動作するようにできました。</p>
