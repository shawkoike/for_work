Original article: The shodan programmer （2013-04-22）by Michael O. Church武道で用いられる色付きの帯の歴史は比較的新しく、19世紀の後半に始まった伝統です。そもそも指導者（先生）が自分と生徒との差別化の為に、白い胴着の上に黒い細布を巻いた非公式な習慣が始まりでした。これが後に嘉納氏により、段位級として形式化されます。当初は黒い布（白帯で胴着を押さえた上に巻かれていた）だったものも黒帯に代わりました。初心者はまず、数字が小さくなっていく級位（もともとは6級から1級まで）を与えられます。上級者になると段位（1段から10段まで）が与えられます。段位を得た人には黒帯を締める権利が与えられ、これは世界中どこに行っても、その道での師であるという証しになります。しかし世間での見方とは違って、黒帯はその競技を完全に極めたという意味ではありません。例えば「初段」は、乱暴に言えば、「新米の達人」というような意味を持ちます。何年も修行し鍛錬することにより到達できるものですが、まだ学ぶべきことはたくさんあるのです。そのうち白と黒の中間に色付きの帯が導入されるようになりました。黒帯レベルの熟達度に近づいたことを示す茶帯。そして緑帯は素晴らしい進歩を表します。時と共に、白帯の上位は黄帯、緑帯の上位は青または紫帯との認識が浸透してきました。標準とまでは言えませんが、大体のところ帯の色は一般に次のように理解されています。こういう色付きの帯による位の分けかたは武道にとっていいことなのか、多くの議論が交わされています。武道というのは本来「道」であるので、単に力の優位性というより、知識と熟練の完成度が真価として問われます。柔道8段が意味するのは、最も強い格闘家ということではないのです。大抵その域に達する頃には60代になっていますし、手強いとは言ってもオリンピックで勝てるということとは意味が違います。そこは重要なポイントではないのです。帯の色は格闘家としてだけではなく、指導者としての資質をも表します。そのレベルになると、知識やコミュニティへの貢献や尽力も昇段の基準として考慮されます。さて、定期的にスケジュールされている私たちのプログラミングへと戻りましょう。（しゃれが入っています）色付きの帯（純粋に概念として）はプログラム開発においても使えるでしょうか。このような思いつきは馬鹿げていますよね。でもソフトウェアエンジニア向けの段位級を定義するにはどうしたらいいでしょう。そうですね、私自身は自分のプログラム開発の能力レベルを、1.8くらいで1級（1級は茶帯）かな、と自負しています。一般的なペースでいくと1.8から2.0（初段）に到達するのには4年から6年くらいかかると思いますが、私はあと2、3年でそこまで到達できたらいいなと思っています。まあどうなるか分かりませんが。プログラマの経験則を評価するための、計測可能で普遍的に応用できる方法はあるのでしょうか。正直私にも分かりません。プログラマを評価するのに私が開発した0.0から3.0の尺度を次にまとめ、重要な点を説明したいと思います。技術や熟達度の評価にことのほか心を注ぐ武道や囲碁と同様に、プログラミングもスキルの幅が非常に広い分野です。2.0のレベルは明らかに初段（1段）の候補です。初段とは何を意味するのでしょう？　これは、あなたが優秀であり、かつ初心者であるということです。つまり優秀な初心者です。また大抵の場合、あなたは今、教育する側にいます。でもこれは学ぶことをもう止めてしまったという意味ではありません。実際、相手があなたから学ぶのと同じくらい、あなたが相手から学ぶことも多いでしょう。そう頻繁に公認することはできないでしょうけどね（相手がうぬぼれるといけないですから）。乗算的（レベル2）なプログラミングの貢献とは、基本的に教育に関わるものです。あなたがLispのマクロや、問題に対しての適切な（解決するための）考え方を人に教えるDSLを構築している時、あなたは教師なのです。もしこのように考えられないなら、プログラミングの本質を分かっていないということです。プログラミングは、システムがどのように機能するかを人に教えることであると同時に、コンピュータに指示を出すことでもあるのです。実際に、0.0から3.0のプログラマの能力レベルと、それに見合った段/級のランクには、だいたい以下のような相関関係があると思います。プログラマとしての習熟度を、定められた級と帯の色で公式に認識する必要はあるでしょうか？　いいアイデアだと思いますか？　誰かを”緑帯のエンジニア”だと純粋に評価するような基盤を確立し、その人が紫、茶、黒帯のレベルになるように指導するべきなのでしょうか？　以前の私は、これは良くないアイデアだと考えていました。率直に言ってしまうと、私は履歴書を重要視する文化が大嫌いなのです。それは、肩書きや出身校の名声、または信頼できる人々からの推薦かどうかを比較して判断するものだからです。それに入社や退社の日付など、分散した職場の社会的地位の生存権などありません。私は、自分の履歴書に嘘は書きません。30歳にして26歳あたりの経歴しかなくても（パニック障害やスタートアップ時の選択の失敗、Google時代のまったくもって悪質なマネージャなどの要因がありましたからね）、嘘をつけば得るものよりも失うものが多いように思います。だから嘘は書きません。しかし、このシステムを転覆させることに道徳的な呵責もありませんし、恐ろしい環境の中で、ためらいなく”創造的なキャリア修復”をするよう人々に勧めています。ところで、職業上の偽装（能力があるふりをすること）は受け入れられないもので、非倫理的で、一般的に違法（詐欺）とみなされます。それは違います。私が言っているのはそういうことではありません。社会的地位の誇張です。”日付をごまかして”失業歴を隠したり、肩書きを上げてみたり、経歴照会の間、友人にマネージャーのふりをさせるのですか？　正々堂々と勝負すべきです。基本的に、名声、肩書き、推薦状、日付などは、職場における分散した社会的地位を生み出してしまうと考えています。それは道徳的に間違っていて，法外に高くなり（そのせいでマネージャが部下の人生や、別れた後の人生も台無しにします）、実に邪悪なものです。それを転覆させ、信用性を薄め、徹底的に偽物を破壊するのです。いい表現が思いつきませんが、”サイコーにイケてる”ことです。私は分散した社会的地位を作り上げてきたもの全てに対して、とてもばかばかしく思っています。このようなアイデアには、理屈抜きでうんざりするのです。プログラマをランク付けすること（私たちがどれだけ評価する力に長けていても、本質的には主観です）は、私には間違っているように思えるので、この概念に心の底から嫌悪を抱いています。また、私はそのような仕事をしたくはありません。それよりも、2.0以上のレベルのプログラミングのスキルを身に付けてから席を立って取り組み、スケーラブルで公正な方法によって個人を評価するやり方を見つけることに数年を費やしたいです。そうですね、機械学習の問題なんかも楽しめるでしょう。でも最終的には、その問題を解決するヒーローは、主に人々の素質に焦点をあてるのです。けれども、私は組織的で独立したソフトウェアエンジニアの階級システムを創造するほかにないと考え始めました。なぜでしょう？私たちが賢明な方法で私たち自身の位置付けをしなければ、バカみたいな企業が割り込んできて、とにかく私たちをランク付けしてしまいます。非常に不愉快な仕事です。私たちはこれが現実だということを知っています。否定できません。日常的に、階級的な仕事の中に見られるものです。典型的なビジネスマンは、2.0レベルのエンジニアと、自分のアイデアを売るのが上手な1.2レベルのエンジニアとの違いを答えることはできないでしょう。私たちはこの事実についてマネージャによく腹を立てます。地球上において最も政治化されたプロフェッショナルな環境の一つとして、能力主義（やソフトウェア産業）がどうあるべきかという問題に対してもそうしがちです。しかし、私たちの仕事を理解できない無能さを中傷してしまうと、私たちもまぬけの仲間入りです。彼らが私達を管理し、評価するのは、私たちが自分自身を管理し、評価することができないからです。これは我々で解決する必要がある問題でしょう。プログラミングの黒帯は、どうすれば取得できるのでしょうか？　最も専門的に認定される方法は、商品価値のあるものを次々に生産することです。しかし、最高の条件の下でも2.0以上のレベルの黒帯を取得するには10年ほどかかるので、この方法は使えません。才能を持ち合わせていない人もいます。非常に難しい問題なので、これから取り組んでいくとしましょう。
