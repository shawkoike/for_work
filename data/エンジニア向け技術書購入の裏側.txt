<p><a href="http://blog.jayfields.com/2014/08/the-case-for-buying-technical-books.html" rel="nofollow" title="" class="ext-link">The Case for Buying Technical Books</a> by <a href="https://plus.google.com/+JayFields/posts" rel="nofollow" title="" class="ext-link">Jay Fields</a></p><p>この数ヶ月というもの、プログラマーに本を執筆することを薦めている記事をいくつも見かけてきています。このような記事ではそれぞれ少なくとも少しは役に立つアドバイスを提供しており、最終的には同じようなアイディアへとつながる結論に達していました。</p><p>この結論は私からすると正確で非常に残念なものです。本を執筆するということに対する圧倒的な理由がブランド構築というのであれば、これから著者になるであろう人々はブランド構築をすることで何らかの利得があるという人（そして、時間を無駄遣いする人）だけになってしまいます。</p><p>インターネットが原因だというのは明白です。誰もがといっていいほど多くの人が動画や楽曲、そして書籍を無料でダウンロードできることを知っています。「違法ダウンロード」に関する意見は反対意見からプライドに満ちたものまでと様々です。ここではこのような意見について興味があるわけではなく、むしろ、クリエーターに代償を支払うことなくそのコンテンツを入手できる能力とその欲求の組み合わせの起こす影響を観察することが興味深いと思っています。</p><p>これまでに一度も本を執筆したことのない人は、対して優れたところのない本を書くのでさえ膨大な努力が必要だということをご存知ないかもしれません。実際つきつめてみると、1ページにつき1時間分以上の尽力が必要になります。<a href="http://www.amazon.com/Java-Concurrency-Practice-Brian-Goetz/dp/0321349601" rel="nofollow" title="" class="ext-link">『Java Concurrency in Practice』</a>　のような素晴らしい書籍の場合には、さらに非常に多くの注意を払う必要があり、その本を作るのにはより長い時間が必要となります。もし、この本の著者の印税の詳細と発売部数がわかれば、品質の高い本を書くための時給を計算できると思います。</p><p>結局のところ、<a href="http://blog.obiefernandez.com/content/2014/04/how-to-write-and-publish-a-technical-book-and-make-lots-of-money.html" rel="nofollow" title="" class="ext-link">最近の記事</a>では書籍の執筆から印税を得ることを奨励しており、よい本を書いた場合にどれぐらい販売されるかというヒントについても語っている。</p><p>それではJCiPが手堅い成功以上に成功し、その販売部数が2万部（Obieの言う「手に堅い成功」ベンチマークの倍です。）だったとしましょう。そして、印税交渉もうまくまとめることができたとすると、その場合の印税は4万米ドルになるでしょう。そうすると、JCiPの執筆にかかわる時給は17米ドル以下になります。</p><p>私がいくつかの前提条件を用いたのは明らかですが、これらの前提条件は正当な論理に基づいたものだと思います。毎日8時間、毎週5日間のスケジュールで50週間モダンクラシックを執筆しているとすると、あなたのその執筆活動からの年収は3万4000米ドルになります。私の友人の中にもいる著作業に携わる人々でモダンクラシックを執筆している人からの事例証拠によると、彼らの収入は更に低く、時給換算にすると、最低賃金以下になるのです。</p><p>減っていく販売部数を印税の構造に組み合わせると、営利（印税）目的での書籍の執筆はあなたの時間の使い方としては妥当なものではない環境ができあがります。その結果として、今日の著者の多くはコンサルタントか無名のプログラマーのいずれかなのです。既に世間から認められている、コンサルタントではないプログラマーには執筆活動によるブランド構築から得るものがほとんどなく、またその常勤の仕事での年収が3万4000米ドルよりもずっと多いというとき、実入りの少ない副業に勤しむ理由などないのです。</p><p>2005年ぐらいになると、ほぼほとんどの本を無料でダウンロードしやすくなりました。これは<a href="https://www.wunderlist.com/lists/70326287" rel="nofollow" title="" class="ext-link">絶対読むべき本リスト</a> 13冊のうち10冊が2005年以前に書かれていたというのは偶然なのかもしれませんが、その可能性はさておいて、私はある時点まではベストセラーになる技術書を生み出すのがお金になり、様々な経歴を持つ人々が執筆にトライしたのだと信じています。</p><p>私の言いたいことは比較的シンプルなものです。あなたが私と同様何十年も前に書かれた本と、ちょっとした動機を隠し持っている人に書かれた本との間で迷っている用であれば、とりあえず本を買ってみてください。あなたの会社には図書購入に関する規程などがありますか？もし、その予算に余裕があるようでしたらここで使うのはいかがでしょうか？そうすることで、自分自身のお金をかけることなくチームメイトにも共有することができ、印税の額のすべてが著者に、その本を書く際、書き直すなどのプロセスについて誰かが気にかけているということを想起させるはずです。</p><p>また、あなたの会社に図書予算というものがない場合には、次に買うJavaに関する本が、聞いたこともないようなコンサルタントやJavaのランゲージアーキテクトによるものであってもいいのかどいうことを考えてみてください。平均的な技術書の価格は、人生におけるその他の費用と比べると安いものであり、技術書を購入することは自分の職業に二度投資することになります。それというのも、今日買った書籍からの知識と、将来的に同じ著者からの書籍を買う可能性が高いのです。また昨今の金銭面でのインセンティブを考えると、将来にはかかれることのない可能性のある本もあるからなのです。</p><p>あなたが会社のCTO、役員、またはマネージャーならなぜ開発者向けの本を定期的にもっと買わないのでしょう？あなたのアドバイスが開発者たちのキャリアガイドとなる本を見つけるために役立つのです．</p><p>現在、<a href="http://leanpub.com/" rel="nofollow" title="" class="ext-link">leanpub</a>には、著者が比較的多くの金額を受けとっている優秀な本が何冊か用意されています。著者をサポートしたいのであれば、そこを利用してみることからおすすめします。私ならば、そこからは、少なくともChadの（前述の）絶対に読んでおくべき」リストの中から少なくとも1冊以上を買い、 <a href="http://pragprog.com/book/cfcar2/the-passionate-programmer" rel="nofollow" title="" class="ext-link">Chadの『Passionate Programmer』</a>も購入し、この <a href="http://www.amazon.com/Clojure-Bookshelf/lm/R3LG3ZBZS4GCTH" rel="nofollow" title="" class="ext-link">『Clojure Bookshelf』</a>というリストも間違いがありません。</p>
