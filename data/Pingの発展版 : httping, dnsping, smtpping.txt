<p><a href="http://blog.webernetz.net/2016/05/10/advanced-ping-httping-dnsping-smtpping/" rel="nofollow" title="" class="ext-link">Advanced Ping: httping, dnsping, smtpping</a> (2016-05-10) by <a href="https://twitter.com/webernetz" rel="nofollow" title="" class="ext-link">Johannes Weber</a></p><p><strong>私はpingが大好きです！簡単に使えて、ネットワークが稼働しているかを直接明らかにできます。</strong>「<a href="http://blog.webernetz.net/2014/09/18/why-ping-is-no-security-flaw-but-your-friend/" rel="nofollow" title="" class="ext-link">Pingはセキュリティの欠陥ではない!(むしろ友達である)</a>」、「<a href="http://blog.webernetz.net/2014/09/23/advanced-tracerouting/" rel="nofollow" title="" class="ext-link">Traceroute上級</a>」の記事をご参照ください。少なくとも、外行きのping(trust(=信頼されるゾーン)からunstrust(=そうでないゾーン)へ)はセキュリティ上の心配なしに用いられるべきです。しかし、これらのuntrustからDMZへのICMPエコー・リクエストは多くの会社で拒否されているため、すべてのサーバが起動・稼働しているかをテストするのが困難になっています。</p><p>私は、顧客のサイトのDMZファイアウォールの置き換えに取り組んでいました。当然ながら私は「すべてのサーバが適切に接続されているか(NAT)」「ファイアウォールが接続を許可しているか(ポリシー)」を(外部から)知ろうとしました。<strong>そこで私は、さまざまなレイヤーでの7つのpingツールを使い、(サーバだけでなく)サービスが稼働しているかどうかを明らかにすることができました。これらのツールは、HTTP, DNS, SMTP(ICMPエコー・リクエストの代わり)のセッションを生成するものです。素晴らしいですね！</strong></p><p>この投稿では、Linuxマシン上での<strong>httping, dnsping, smtppingのインストールと使用方法</strong>について示していきます。私のケースでは、キャプチャしたセッションからの<strong>Wireshark</strong>のスクリーンショットと同様に、<a href="http://blog.webernetz.net/2013/05/23/new-linux-server-program-installation/" rel="nofollow" title="" class="ext-link">Ubuntu server</a> 14.04.4 LTSを利用しています。</p><p>その名の通り、<strong>httpingはHTTPリクエストを送ります。</strong>スペルの中に”P”が一つしか含まれていないことの注意してください。このツールは<a href="https://github.com/flok99/httping" rel="nofollow" title="" class="ext-link">GitHub</a>から入手可能です。<a href="https://www.vanheusden.com/httping/" rel="nofollow" title="" class="ext-link">ここ</a>でもこのツールについての情報が得られます。インストールのプロセスは以下のようになります：</p><p>(ただの<code>sudo apt-get install httping</code>ではhttpingの古いバージョンが得られてしまうので、お勧めしません。)</p><p>基本的な機能としては、<code>httping blog.webernetz.net</code>というように、オプションとしてホスト名だけを必要とします。<strong>他にも多くのオプションが利用できて、SSL/TLSでのHTTPSもサポートしています。例：</strong></p><p>以下の画像の1枚目は<strong>color mode (-Y)</strong>、–threshold-red、–threshold-yellowパラメータ(私はこれを好みます)でのhttpingのスクリーンショットです。2,3枚目は<strong>Wireshark</strong>のスクリーンショットで、片方はhttpセッション(SYNパケットとHEADリクエスト、200 OKの返答がありますね)、もう片方はhttpsセッションでのものです。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/06/httping-with-color-mode.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/httping-with-color-mode.png" alt="httping-with-color-mode" width="683" height="728" class="alignnone size-full wp-image-6988"></a><br>
カラーモードでのhttping<br>
<a href="http://postd.cc/wp/wp-content/uploads/2016/06/httping-Wireshark.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/httping-Wireshark.png" alt="httping-Wireshark" width="1366" height="728" class="alignnone size-full wp-image-6981"></a><br>
httpホストへのhttping<br>
<a href="http://postd.cc/wp/wp-content/uploads/2016/06/httping-Wireshark-with-https.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/httping-Wireshark-with-https.png" alt="httping-Wireshark-with-https" width="1366" height="728" class="alignnone size-full wp-image-6982"></a><br>
httpsホストへのhttping</p><p><strong><a href="https://dnsdiag.org/" rel="nofollow" title="" class="ext-link">DNSDiag toolkit</a>の一部であるdnspingは<a href="https://github.com/farrokhi/dnsdiag" rel="nofollow" title="" class="ext-link">GitHub</a>から入手可能で、DNSクエリを送信するものです。</strong>インストールするには以下のコマンドを用います。:</p><p>他に何もオプションをつけなければ、dnspingはデフォルトのDNSサーバ(/etc/resolv.conf)に対してホスト名についてのタイプAのクエリを送信します。<strong>しかし、DNSサーバ(-s SERVER)やクエリのタイプ(-t TYPE)に関するオプションも利用できます。</strong></p><p><strong>Wireshark</strong>では、以下のように見えます。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/06/dnsping-Wireshark.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/dnsping-Wireshark.png" alt="dnsping-Wireshark" width="1366" height="728" class="alignnone size-full wp-image-6983"></a><br>
dnsping Wireshark</p><p>(DNSDiag kitに含まれるほかの2つのツール、<code>dnseval.py</code> と <code>dnstraceroute.py</code>にも注目してみてください。)</p><p>最後に、<strong>smtppingはテストメールを送信します。</strong>. デフォルトでは”無制限に”メールを送信してしまうので、<code>-c</code>オプションを使うのを忘れないように注意しましょう。こちらも<a href="https://github.com/halonsecurity/smtpping" rel="nofollow" title="" class="ext-link">GitHub</a>で入手可能です。インストールのコマンドは以下の通りです。</p><p><strong>Wireshark, Cisco ESA, Thunderbird</strong> でのこれらのテストメールのスクリーンショットが以下です。スクリーンショットの説明をご参照ください：</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Cisco-ESA-SMTP-Ping-to-Quarantine.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Cisco-ESA-SMTP-Ping-to-Quarantine.png" alt="smtpping-Cisco-ESA-SMTP-Ping-to-Quarantine" width="966" height="728" class="alignnone size-full wp-image-6984"></a><br>
もし送信者(-S mail@address.foo)が設定されていないと、メールのゲートウェイがメッセージをスパムと判定することがあります。Cisco ESA アプライアンスの例。<br>
<a href="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Thunderbird-SMTP-Ping-Mail-arrived.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Thunderbird-SMTP-Ping-Mail-arrived.png" alt="smtpping-Thunderbird-SMTP-Ping-Mail-arrived" width="1024" height="613" class="alignnone size-full wp-image-6985"></a><br>
テストメールはThunderbirdではこう表示されます。<br>
<a href="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Wireshark.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Wireshark.png" alt="smtpping-Wireshark" width="1366" height="728" class="alignnone size-full wp-image-6986"></a><br>
Wiresharkがsmtppingをキャプチャしたところ。 SYN, クリアテキストでのメール, FIN。<br>
<a href="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Wireshark-Follow-TCP-Stream-01.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Wireshark-Follow-TCP-Stream-01.png" alt="smtpping-Wireshark-Follow-TCP-Stream-01" width="926" height="728" class="alignnone size-full wp-image-6987"></a><br>
WiresharkのFollow TCP Stream。(1/2)<br>
<a href="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Wireshark-Follow-TCP-Stream-02.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/smtpping-Wireshark-Follow-TCP-Stream-02.png" alt="smtpping-Wireshark-Follow-TCP-Stream-02" width="926" height="728" class="alignnone size-full wp-image-6980"></a><br>
WiresharkのFollow TCP Stream。(2/2)</p><p><strong>私はこれらのツールにとても満足しています。</strong>これらは使いやすく、ネットワークやファイアウォールの設定を変えている間にサービスをモニタリングする助けになります。また、これらのツールは同時に「pingを拒否することがよいセキュリティのアプローチだ」と信じてやまないセキュリティ管理者に対するよい反論にもなるのです。それでは！</p>
