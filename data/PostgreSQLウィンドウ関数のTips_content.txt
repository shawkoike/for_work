Window Functions in PostgreSQL by Gabriel Bordeauxウィンドウ関数はデータを処理する間、データの「ウィンドウ」を見ています。
“現在のクエリ行に関連している行の集合を対象として計算を行う能力”を提供します。簡単に言えば、PostgreSQLには現在11個のウィンドウ関数があります。ウィンドウ関数を使用するためには、OVER()句で”ウィンドウ関数の構文”を用いる必要があります。サンプルテーブルを作成し、それを使って全てのウィンドウ関数に対する例を挙げてみましょう。
この例では、14名の学生が居るクラスを管理しています。これで学生リストのテーブルができました。全てのウィンドウ関数にはOVER句が必要です。
ウィンドウ関数は、クエリによって選択された行の一部（あるいは全ての行）を対象として機能します。OVER句を使って、その対象範囲を指定するのです。
最初は、以下の例のようにOVER句の中でORDER BY句を単純に繰り返すことをお勧めします。ご覧のとおり、このクエリは”a”列の順序で並べ替えられます。同じORDER BYがOVER句でも使われています。ウィンドウ関数を使いこなせるようになったら、少し時間をかけてウィンドウ関数呼び出しに関する公式のドキュメントを読んで、完全なOVER句構文を学んでください。では、ウィンドウ関数をいくつか試してみましょう。例えば、成績で並び替えて各行の数を知ることができます。学生リスト内で、成績に応じて各学生の順位を求めることができます（同じ成績の2名は同じ順位になります）。ご覧のとおり、2名が成績10で1位となり、次の2名が成績9で3位に居ます。dense_rank()はrank()と似ていますが、順位間のギャップがありません（rank()では1位の次は3位でしたが、dense_rank()では2位になります）。percent_rank()では、順位の”位置”ではなく、(rank – 1) / (全行数 – 1)という計算をして順位の割合を出します。下の例では、Christopherは3位に居て14行あるので、percent_rank() = (3 – 2) / (14 – 1) = 2 / 13 = 0.153846153846154です。学生リストは以下のようになります。cume_dist()では(処理する行数) / (総行数)という計算式で相対順位を計算します。ChristopherはJacobと並んで3位です。つまりChristopherと同じ順位、またはそれより上位の学生は4人（Christopher、Jacob、Ashley、Alexander）居て、全体では14行あります。Christopherはcume_dist() = 4 / 14 = 0.285714285714286です。
JacobはChristopherと同じ順位なので、cume_dist()の結果は同じものを得られるはずです。学生リストは以下のようになります。ntile()は行を等しい行数でバケットに分割します。もし10行を2バケットに分ける場合、各バケットには5行ずつとなります。
学生を2つおよび4つのバケットに分割した例を示します。もしntile()を気に入ったのであれば、PostgreSQLの関数であるWeighted_ntileに関する私の記事を読んでみてください。重み付けされたグループでデータに順位を付ける方法を書いています。lag()は現在の行より1つ以上前にある行の値を返します。以下の例では、現在の行よりも1行または2行前にある学生の名前が表示されています。lead()は、lag()の逆で、現在の行よりも1行以上後にある行の値を返します。以下の例では現在行の1行または2行後の学生の名前が表示されています。first_value()はウィンドウフレームの最初の行の値を返します。例えば、クラスの中の最上位を見て現在の順位と最上位との差を計算できます。last_value()はウィンドウフレームの最後の行の値を返します。
公式のドキュメントでは、ウィンドウフレームはデフォルトで”パーティションの先頭から現在の行の最後ピアまで”が含まれるとあります。これではlast_valueとnth_valueでは有用ではない結果が得られがちです。以下の例のようにデータ範囲を指定することでこれを回避できます。クラスの最下位を確認でき、また現在の順位と最下位との差を見ることができます。nth_value()はウィンドウフレーム内のn番目の行を返します。last_value()と同様の制約があるため有用な結果を得るためにはデータの範囲を指定する必要があります。例えば、以下は4位の学生（Jacob）の成績と8位の学生（Emily）の成績が表示されています。ウィンドウ関数についてはPostgreSQLの公式Webページで詳細を読むことができます。
関連ページはこちらです。
・汎用ウィンドウ関数
・ウィンドウ関数呼び出し（クエリによって選択された行部分に対する集約のような機能）
