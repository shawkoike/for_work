<p><a href="http://blog.codinghorror.com/new-programming-jargon/" rel="nofollow" title="" class="ext-link">New Programming Jargon</a>（2012-07-20）by <a href="https://twitter.com/codinghorror" rel="nofollow" title="" class="ext-link">Jeff Atwood</a></p><p>インドア活動に熱中。Stack ExchangeとDiscourseの共同創設者。免責事項：自分の話していることが何なのか分かっていません。<a href="http://twitter.com/codinghorror" rel="nofollow" title="" class="ext-link">twitter</a></p><p>Stack Overflowは、私が学習に役立ててきた多くのオンライン・コミュニティと同じように、自然と厳しくなってきました。第一にこれは、自己防衛機能です。子どもが初めて学校や託児所に入ると広大な世界にさらされて、<a href="http://www.cdc.gov/mmwr/preview/mmwrhtml/mm6113a1.htm" rel="nofollow" title="" class="ext-link">髄膜炎菌症を発症</a>して日々くしゃみやせきを繰り返しながら成長するのと同じような免疫システムです。常に好ましいことだとは言い難いですが、生き残るためには必要なプロセスなのです。</p><p>2年前に投稿された、下記の質問のことを考えてみてください。</p><p>本当にこれは質問と言えるでしょうか？　どれくらいの回答が寄せられたのでしょう？</p><p>その数なんと386です！</p><p>386もの異なる”回答”が集まるなんて、これはもう質問とは言えません。まるで世論調査や選挙、Xリストです。全ての回答を読めばプログラミングについて何かしら学べるに違いないと思うことでしょう。しかし、明らかにこの回答の山は、学習として使うよりもはるかに滑稽で興味深いものでした。それゆえ、経験の長いStack Overflowのコミュニティ・メンバーによって削除されてしまったのです。学習の素材という点ではどうにかボーダーライン上で、削除するという行為には個人的には反対でしたが、正確な方法できちんと削除されたという点には同意します。<a href="http://meta.stackexchange.com/questions/122164/can-we-un-delete-new-programming-jargon-you-coined" rel="nofollow" title="" class="ext-link">意見はさまざま</a>です。</p><p>私たちの<a href="http://blog.stackoverflow.com/2010/01/stack-overflow-where-we-hate-fun/" rel="nofollow" title="" class="ext-link">“愉快な戦い”</a>や、<a href="http://blog.stackoverflow.com/2012/01/the-trouble-with-popularity/" rel="nofollow" title="" class="ext-link">trouble with popularity</a>の流れを全て見せて、退屈させるつもりはありません。結局のところ、Stack Overflowは組合ではなく大学なのです。サイト内の全てのコンテンツは、楽しさよりも学習の役目を果たすために存在しなくてはいけません。つまりそれが、プラスマイナス10％目的を達成できない質問や回答を取り除くという厳しい要求になったとしてもです。</p><p>しかしプログラマの文化には、<a href="http://www.catb.org/jargon/" rel="nofollow" title="" class="ext-link">業界用語ファイル</a>という前例があります。あいにく私たちには、削除されてしまった”愉快すぎる”質問を生かしておくための良い場所はありませんが、Stack Exchangeの全てのコンテンツは永久にCreative Commonsに認可されています。つまり、しかるべき出典を明記すれば、自分個人のブログ内に、永久的に残しておけるのです。というわけで、下記にStack Overflowの新しいプログラミングの業界用語30選を集めてみました。Stack Overflowのコミュニティに判定されたものです。楽しんでください。*</p><p><a href="http://stackoverflow.com/users/251153/zneak" rel="nofollow" title="" class="ext-link">zneak</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176169611b8970c-800wi.png%20" class="aligncenter"></p><p>if(4 == foo)のようにif(variable == constant)の代わりにif(constant == variable)を使う式。ヨーダの”if blue is the sky”や”if tall is the man”という話し方から。</p><p><a href="http://stackoverflow.com/users/205426/woot4moo" rel="nofollow" title="" class="ext-link">woot4moo</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176169669bd970c-800wi.jpg%20" class="aligncenter"></p><p>すべての例外を捕まえようとすること。</p><p><a href="http://stackoverflow.com/users/215403/computronium" rel="nofollow" title="" class="ext-link">computronium</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a17a2a970b-800wi.jpg%20" class="aligncenter "></p><p>下記のように、行の最後でブレースを開く括弧の使い方を知っていますか？</p><p>私たちはこの括弧のつけ方を”エジプト人ブレース”と呼んでいます。なぜでしょう？　コードの括弧と、絵に描かれている手の位置を比べてみてください。<br>
（この括弧はKernighanとRitchieの著書<a href="http://www.amazon.com/dp/0131103628/?tag=codihorr-20" rel="nofollow" title="" class="ext-link">『The C Programming Language』</a>の中で使われており、K&amp;Rスタイルとして広く知られています。）</p><p><a href="http://stackoverflow.com/users/38360/aaronaught" rel="nofollow" title="" class="ext-link">aaronaught</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437c746d970d-800wi.png" class="aligncenter"></p><p>実際に大したことをしているわけではないのに、”自分はシステムデザインについて豊富な知識がある”と思い込んでいるユーザから報告される、バグのレポート。見当違いの技術的な詳細や、問題の原因と解決策に関するいくつかの（そしていつも間違っている）提案で埋められています。</p><p>関連語として、Drug Report（内容が理解できなさすぎて、ドラッグをやっている人が書いたとしか思えないレポート）、Chug Report（提出者が１つの事について、うるさく書きすぎているレポート）、Shrug Report（エラーメッセージや再プログラミングなどの処理もなく、問題点のみが曖昧に書かれているバグのレポート。「動きません」という言葉がよく登場する）があります。</p><p><a href="http://stackoverflow.com/users/129175/kyoryu" rel="nofollow" title="" class="ext-link">kyoryu</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437c7a15970d-800wi.jpg" class="aligncenter"></p><p>経営陣の興味を引く目的以外、特に理由もなく追加される機能。製品の不必要な変更を避けるために、結局は取り除かれる。</p><p>私がこの言葉を最初に作ったのかどうかは分かりませんが、元になった話は別にあります。</p><p>これは協力会社に伝わっている話です。有名なプロデューサたち（PMと同等なゲーム業界の地位）は、完成した作品の全てに変更を加えなければいけませんでした。そうしなければ、価値のある作品にできないという意識が漠然とあったのでしょう。</p><p>Battle Chessのクイーンのアニメーションを制作していたアーティストはその傾向に気付いており、革新的な解決策を考え出しました。彼は自分が最良だと思う方法で、アニメーションにあるものを追加しました。ペットのカモをつけたのです。クイーンのアニメーション全てに同じようにカモを描き、クイーンの近くで羽ばたくようにしました。彼はまた、それが”実際の”アニメーションとは重ならないように、細心の注意を払いました。</p><p>そして、プロデューサによるアニメーションのレビューの日がやってきます。アニメーションを見終えたプロデューサは、アーティストの方を向いてこう言いました。”すばらしいね。ただ、カモだけは取り除いてくれ”。</p><p><a href="http://www.codemanship.co.uk/" rel="nofollow" title="" class="ext-link">Jason Gorman</a><br>
<img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0176169684ae970c-800wi.jpg" class="aligncenter"></p><p>うまく設計されたコードにするため、小さな変更や、いったん変えたコードを戻したりするといったことを繰り返すうちに、自分以外はまったくメンテナンスできないコードにしてしまうこと。</p><p><a href="http://stackoverflow.com/users/83891/mark-simpson" rel="nofollow" title="" class="ext-link">Mark Simpson</a><br>
<img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437c9f53970d-800wi.jpg" class="aligncenter"><br>
strong typied（強い型付け）をもじったもの。プログラマやリファクタリングがうまく使える状態なのに、不必要に文字列を使った実装のことを表わします。</p><p>作者不明<br>
<img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a216ce970b-800wi.png" class="aligncenter"></p><p>検証しようとすると消えてしまったり性質を変えたりするバグ（<a href="http://ja.wikipedia.org/wiki/%E7%89%B9%E7%95%B0%E3%81%AA%E3%83%90%E3%82%B0" rel="nofollow" title="" class="ext-link">Wikipedia</a>）。</p><p><a href="http://stackoverflow.com/users/23666/zurahn" rel="nofollow" title="" class="ext-link">Zurahn</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a199fe970b-800wi.jpg" class="aligncenter"></p><p>WebデザイナがDOCTYPEを宣言したものの、正しいマークアップを書いていないという状態です。</p><p><a href="http://stackoverflow.com/users/12560/gord" rel="nofollow" title="" class="ext-link">Gord</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437cb7eb970d-800wi.png" class="aligncenter"></p><p>何も分からない新人の開発者に対して汎用的に使える名前。</p><p>他の開発者にとっては、仕組みについての最小限の知識さえあれば対応できるフレームワークコンポーネントを開発している時にジミーが登場しました。”ジミーがその属性の更新を忘れたらどうなるかな？”というような形で、常に使ったものです。</p><p>このことから、よくデザインされているフレームワークコードを示す時の用語、”ジミープルーフ（Jimmy-proof）”が生まれました。</p><p><a href="http://stackoverflow.com/users/231999/gingerbreadboy" rel="nofollow" title="" class="ext-link">gingerbreadboy</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437ccbc0970d-800wi.png" class="aligncenter"></p><p>ごく少数しか発生したことがない関連イベントログやユーザが報告してきた曖昧な事例から、存在するであろうと推測されています。本当に存在しているのかどうか、そしてバグが発生した原因も分からないため、デバッグ環境で再現させるのが（再現が可能なのであれば）難しいバグです。（<a href="http://ja.wikipedia.org/wiki/%E3%83%92%E3%83%83%E3%82%B0%E3%82%B9%E7%B2%92%E5%AD%90" rel="nofollow" title="" class="ext-link">ヒッグス粒子</a>参照）。</p><p><a href="http://stackoverflow.com/users/220587/stanislav" rel="nofollow" title="" class="ext-link">Stanislav</a><br>
<img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437cd4ee970d-800wi.jpg" class="aligncenter"></p><p>私はAIの観点から<a href="http://lifeartificial.com/" rel="nofollow" title="" class="ext-link">サイエンスフィクションの小説</a>を書いているのですが、その小説で数多くのプログラミングの業界用語を使っています。その中のひとつに、アセンブラ言語で何もしないことを意味するNOPが語源の”nopping （ノッピング）”という用語があります。”nap （昼寝）”と似ていますが、寝るという意味ではなく、単に意識を失いそうになるという意味です。”スクリーンセーバーを見ながら座っていたスタニラフは、しばらくの間ノッピングした。”</p><p><a href="http://stackoverflow.com/users/122162/yehuda-katz" rel="nofollow" title="" class="ext-link">Yehuda Katz</a><br>
<img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b016768a1adc5970b-800wi.jpg" class="aligncenter"></p><p>かなり初期の計画段階にあるため、まるで空想上の世界のように思える機能を表す形容詞。Yehuda Katzが、昨年の<a href="http://www.windycityrails.org/" rel="nofollow" title="" class="ext-link">Windy City Rails</a>の基調講演を締める時に、Railsに関する将来の機能について説明するために使っていた言葉です。</p><p><a href="http://stackoverflow.com/users/25188/john-d-cook" rel="nofollow" title="" class="ext-link">John D. Cook</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696b5b9970c-800wi.jpg" class="aligncenter"></p><p><a href="http://www.johndcook.com/blog/2009/07/27/baklav-code/" rel="nofollow" title="" class="ext-link">レイヤが多すぎる</a>コードのこと。</p><p>バクラヴァは紙のように薄いフィロ生地のレイヤからなるとてもおいしいお菓子です。お菓子なら薄いレイヤは申し分ないのですが、ソフトウェアにおいて、特にそのようなレイヤが互いに積み重なっている時、薄いレイヤは何の価値もありません。プログラマがコードに没頭している時に、それぞれのレイヤはプログラマのメンタルなスタックにプッシュされます。その上、フィロ生地のレイヤは透けていて、ハチミツがしみ込みやすくなっているものです。しかし、ソフトウェアの抽象化では何も漏らしてはなりません。ところが、ソフトウェアでレイヤの上にさらにレイヤを積み重ねると、レイヤは何かしら漏らしてしまうことになります。</p><p><a href="http://stackoverflow.com/users/43687/mike-robinson" rel="nofollow" title="" class="ext-link">Mike Robinson</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696b949970c-800wi.jpg" class="aligncenter"></p><p>データを破壊する壊滅的なバグ。”何てことだ！”</p><p>この用語はCounterbug （カウンターバグ）（バグを作った人により引き起こされたバグによって現れるバグ）やBloombug （ブルームバグ）（偶然お金を生み出すバグ）にも結びつきます。</p><p><a href="http://stackoverflow.com/users/82062/arnis-l" rel="nofollow" title="" class="ext-link">Arnis L.</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696bdde970c-800wi.jpg" class="aligncenter"></p><p>プロジェクト管理者からプレッシャー（解雇、納期の前倒し、プロジェクトからのリソース削減など）をかけられること。</p><p><a href="http://stackoverflow.com/users/108130/nick-dandoulakis" rel="nofollow" title="" class="ext-link">Nick Dandoulakis</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437cf847970d-800wi.jpg" class="aligncenter"></p><p>修正できないコード。<a href="http://ja.wikipedia.org/wiki/%E3%83%92%E3%83%A5%E3%83%89%E3%83%A9%E3%83%BC" rel="nofollow" title="" class="ext-link">ヒュドラーの神話</a>のように、バグを1件修正するたびに、新たに2件のバグが出現します。そのようなコードは書き直しましょう。</p><p>匿名</p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696d4ab970c-800wi.jpg" class="aligncenter"></p><p>非常に長い間アプリケーションに存在し続けたために、要求機能の一部になってしまったバグ。実際はユーザサポートが調整しなければなりません。</p><p><a href="http://stackoverflow.com/users/109102/russau" rel="nofollow" title="" class="ext-link">russau</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b0177437d0c57970d-pi.jpg" class="aligncenter"></p><p>ネス湖の怪獣バグは、再現性がない、または1人にしか目撃されていないバグのことです。僕のオフィスでは、今や誰もがこの用語を使っています。（同義語：　Bugfoot （バグフット）、Nessiebug （ネッシーバグ））</p><p><a href="http://stackoverflow.com/users/48928/schar" rel="nofollow" title="" class="ext-link">schar</a></p><p><img src="http://blog.codinghorror.com/content/images/uploads/2012/07/6a0120a85dcdae970b01761696ddaf970c-800wi.png" class="aligncenter"></p><p><em>見えないコメント、秘密のコメント、コメントなしとも言います。</em></p><p><a href="http://stackoverflow.com/users/13753/sal" rel="nofollow" title="" class="ext-link">sal</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/brainy-smurf.png" class="aligncenter"></p><p>ほとんど全てのクラスに同じプレフィックスをつけていること。こういった感じです。ユーザがボタンをクリックした時に、SmurfAccountViewがSmurfAccountDTOをSmurfAccountControllerに渡します。SmurfIDがSmurfHistoryReviewViewかSmurfHistoryReportingViewに転送する前にSmurfHistoryMatchに渡されるSmurfOrderHistoryをフェッチします。SmurfErrorEventが発生するとSmurfErrorLoggerによって${app}/smurf/log/smurf/smurflog.logに記録されます。</p><p><a href="http://stackoverflow.com/users/7264/chris-pebble" rel="nofollow" title="" class="ext-link">Chris Pebble</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/protoduction.jpg" class="aligncenter"></p><p>そのまま商品化された試作品のこと。フェルミ研究所の技術者が使っていました。その人が生み出した言葉ではないそうですが、フェルミ研究所では多用されているようです。</p><p><a href="http://stackoverflow.com/users/62140/wesgarrison" rel="nofollow" title="" class="ext-link">wesgarrison</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/rubber-ducky.jpg" class="aligncenter"></p><p>時には、問題をただ口に出して言ってみることが必要です。かつて私はボスの部屋に行って話をしたものでした。ボスはただ私の話を聞き、そうしているうちに私は、自分で自分の疑問の答えが分かり、ボスのアドバイスをもらうことなく彼の部屋を出たのです。アヒルのおもちゃに向かって話しかけられるように、誰かがアヒルのおもちゃをモニタのところに置いたという話を読んだことがあります。アヒルのおもちゃとの語らいは、自分が持っている問題を口に出して言ってみる手段になるのです。</p><p><a href="http://stackoverflow.com/users/40516/juliet" rel="nofollow" title="" class="ext-link">Juliet</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/banana.png" class="aligncenter"></p><p>ドキュメントの作成を進めている時に書いておくプレースホルダテキスト。主にpublic関数がドキュメンテーションされていない時に出てくるFxCopの警告を避けるために使われます。</p><p>食べ物が絡んだ他の用語：　Programmer Fuel （プログラマの燃料）（マウンテンデュー、コーヒー、マテ茶などのカフェインが摂取できるものなら何でも）、Hot Potato （ホットポテト）（httpやhttpsそれぞれ。同じ数の音節だが、口に出すと楽しいもの）、Cake （ケーキ）（Martyのヘタクソなケーキはビルドを破壊した）、Chunky Salsa （実入りのサルサ）（<a href="http://tvtropes.org/pmwiki/pmwiki.php/Main/ChunkySalsaRule" rel="nofollow" title="" class="ext-link">chunky salsa rule （実入りのサルサルール）</a>より。特にプロダクション環境で発生するシステム全体を使えなくしてしまう、1つの重大なエラーやバグ）。</p><p><a href="http://stackoverflow.com/users/7734/evilteach" rel="nofollow" title="" class="ext-link">evilteach</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/plus-two.png" class="aligncenter"></p><p>変数に2を足すこと。</p><p><a href="http://stackoverflow.com/users/10659/loren-pechtel" rel="nofollow" title="" class="ext-link">Loren Pechtel</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/reality-101.jpg" class="aligncenter"></p><p>プログラム（どちらかと言えばプログラムの機能）を言われたとおりに作ったものの、デプロイした時に出題内容を間違って解釈していたために、使えないプログラムを作ってしまったということが判明すること。</p><p><a href="http://stackoverflow.com/users/33560/jeduan-cornejo" rel="nofollow" title="" class="ext-link">Jeduan Cornejo</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/mad-girlfriend.jpg" class="aligncenter"></p><p>明らかに何かおかしなことが起きているのに、ソフトウェア自体は何も起きていないと示すバグのこと。</p><p><a href="http://stackoverflow.com/users/182153/zolomon" rel="nofollow" title="" class="ext-link">zolomon</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/megamoth.jpg" class="aligncenter"></p><p>MEGA MOnolithic meTHod（巨大化したモノリシックメソッド）を表す略語です。多くの場合、<a href="http://en.wikipedia.org/wiki/God_object" rel="nofollow" title="" class="ext-link">神オブジェクト</a>を含み、メソッドの長さは大抵2面以上に渡ります。ソースコードの行数が2,000行を超えたメガモスも確認されているとか。メガモスに気をつけろ！</p><p><a href="http://blog.codinghorror.com/new-programming-jargon/" rel="nofollow" title="" class="ext-link">NullPointerException</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/muppet-pimps.jpg" class="aligncenter"></p><p>アプリケーションにて不安定な状態（アプリケーションの”ダウン”）を引き起こす、問題のあるコードのこと。”またサイトがダウンしたのか？　ああ、ジムのヤツはまだフッカーコードを残しているようだな”。</p><p><a href="http://stackoverflow.com/users/16123/sumit" rel="nofollow" title="" class="ext-link">sumit</a></p><p><img src="http://blog.codinghorror.com/content/images/2014/Jun/jenga-code.jpg" class="aligncenter"></p><p>1ブロック変更するだけで、全てが崩壊してしまうコードのこと。</p><p>ここでご紹介したのは、コミュニティの賛成票を基にして、実際に新たなプログラミングの業界用語になり得ると私が考えた、業界用語30選です。ただ単に”他のプログラマがWebページに載せた面白いもの”を選んだわけではありません。その役目を果たしているのはRedditです。読者の皆さんが、他の業界用語について知りたくてたまらないというのであれば、集まった業界用語は山ほどあります。正確に言えば356個です。Stack Overflowの古株ユーザであるGreg Hewgillは「<a href="http://stackoverflow.hewgill.com/" rel="nofollow" title="" class="ext-link">Stack Overflowから削除された質問アーカイブ</a>」をメンテしていますが、この記事はまだその域には達していません。ですので、とりあえずは、<a href="http://www.stackprinter.com/export?question=2349378&amp;service=stackoverflow" rel="nofollow" title="" class="ext-link">Stack Printer</a>を見てください。またはStack Overflowで1万レピュテーションを得れば、サイトで「<a href="http://stackoverflow.com/questions/2349378/new-programming-jargon-you-coined" rel="nofollow" title="" class="ext-link">削除済みの質問</a>」の完全版を見ることができます。</p><p>*ただし楽しみすぎないでくださいね。あなたの行動はお見通しです。</p>
