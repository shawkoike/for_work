<p><a href="https://hackernoon.com/how-eve-unifies-your-entire-programming-stack-900ca80c58a7#.f8zuqgaea" rel="nofollow" title="" class="ext-link">How Eve unifies your entire programming stack</a> （2016-11-21） by <a href="mailto:wiseguy@gmail.com">Liron Shapira</a></p><p>この投稿では、エキサイティングで魅力的な新しいプログラミング言語、<a href="http://witheve.com/" rel="nofollow" title="" class="ext-link">Eve</a>について紹介していきたいと思います。今回は6パートのシリーズのうち、パート1です。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/800/1*c42MkKUBa0HE3th2MG8pDw.png" src="https://cdn-images-1.medium.com/max/800/1*c42MkKUBa0HE3th2MG8pDw.png"></p><p>Eveは、以前に<a href="http://lighttable.com/" rel="nofollow" title="" class="ext-link">Light Table</a>を設立した先見的なチームによる長年にわたる研究開発の成果で、先月バージョン0.2がリリースされました。私がEveを知ったのは、<a href="https://news.ycombinator.com/item?id=12817468" rel="nofollow" title="" class="ext-link">Hacker News</a>でそのリリースのことが大きな話題になっていたのがきっかけです。</p><p>最新バージョンのEveには、 “<a href="http://play.witheve.com/#/examples/flappy.eve" rel="nofollow" title="" class="ext-link">Flappy Eve</a>” のような素晴らしいライブデモがあります。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/2000/1*iQ-YI93T0NpnhFTbCcq9qw.png" src="https://cdn-images-1.medium.com/max/2000/1*iQ-YI93T0NpnhFTbCcq9qw.png"></p><p><em>flappy.eve</em>のデモを初見でスクロールしていると、いくつかの魅力的な特徴が目を引きます。</p><p>以上が私の第一印象です。そして、その後、数時間をかけて、サンプルや関連文書、テックトークを見たりした後の感想が以下になります。</p><p>Eveには、「そんなソリューションがあったとは」と思わせてくれるような解決策が山ほどあります。まるで自転車社会で育った人間が、自動車の世界を初めて知り、自転車ベースのアーキテクチャの限界を突然理解したような感じです。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/800/1*-WHmnEaiKTSli0TYHqWuVg.png" src="https://cdn-images-1.medium.com/max/800/1*-WHmnEaiKTSli0TYHqWuVg.png"></p><p>Eveを知ることで、主流のプログラミングのスタックアーキテクチャにおける様々な問題を遡及的に診断することができるようになりました。このシリーズでは、それらの問題の性質やその解決法を説明していきたいと思います。</p><p>ソフトウェアスタックには多くの層がありますが、通常、以下の3つの層が “コアシステム” と呼ばれ、大変な作業を受け持ちます。</p><p>しかし、コアシステムとやり取りをする層は他にもたくさんあります。</p><p>高次のレベルでは、これらの層は全て同じこと、つまりデータの処理を行います。入力値を読み取り、他の値を算出し、内部の状態を変更し、値を出力して他の層に渡す、というようなことです。しかし、それぞれの層に注目してみると、データの処理という基本的な役割の同一性が曖昧になるほどに、無数の違いが見えてくると思います。</p><p>1つあるいは複数のオンラインデータベースシステムがあり、それらには、SQLテーブル、Documentコレクション、キー・値マップ/グラフなどのようなデータモデルがあります。</p><p>データをJSONやXMLのチャンクとして、あるいはGraphQLのグラフとしてモデル化するようなリモートAPIがあります。</p><p>スコープチェーン内で、インメモリデータ構造や変数をモデル化するような実行中のアプリケーションがあります。</p><p>データベース層を操作することができるSQLまたはNoSQLクエリには、様々な種類があります。</p><p>API層の操作は、HTTP GET経由でデータを照会したり、HTTP POSTなどからデータを更新したりすることで実行できます。GraphQL APIの場合、GQLのクエリや変更で操作します。</p><p>アプリケーション層の操作には、スコープチェーンから変数を参照したり、インメモリデータ構造をトラバースまたは変更したりします。</p><p>スタックの各層には、それぞれに異なるデータモデルや操作方法があります。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/800/1*5REPO9fgVMpKJVcxiuwyeQ.png" src="https://cdn-images-1.medium.com/max/800/1*5REPO9fgVMpKJVcxiuwyeQ.png"></p><p>各層の差異が摩擦を生み、エラーの余地を作ります。それぞれの層の特性や役割については個別に判断し、別々のプログラミングパターンを使用しなければなりません。また、たくさんの “グルーコード” を書く必要もあります。</p><p>Eveには単一の下層データモデルと単一の操作セットがあり、スタックの全ての層にわたって使うことができます。</p><p>Eveにおいて、データ（または状態）はデータベースのセットの中に存在しています。スタック内のそれぞれの層は別々のデータベースに以下のように対応している場合があります。</p><p>各データベースには<strong>レコード</strong>が含まれています。レコードは他のレコードに対するリファレンスだけでなくプリミティブな値も格納できるキー・値のマッピングです。レコードは括弧で閉じられた単純な構文を保持しています。</p><p><img class="graf-image" data-image-id="1*7y-uSPVDOqEUSVoG18ZQQQ.png" data-width="572" data-height="69" src="https://cdn-images-1.medium.com/max/800/1*7y-uSPVDOqEUSVoG18ZQQQ.png"></p><p>データベース内にはレコードを保持するためのテーブルもコレクションもありません。あるのは、リンクされたレコードの構造体を含んでいるデータベースのみです。</p><p>Eveのリンクされたレコードのユニバーサルデータモデルは、<a href="https://en.wikipedia.org/wiki/Resource_Description_Framewor" rel="nofollow" title="" class="ext-link">RDF</a>や<a href="http://json-ld.org/" rel="nofollow" title="" class="ext-link">JSON-LD</a>などの “セマンティックWeb” のテクノロジに似ています。しかし、Eveの利点は統一データモデルだけではありません。</p><p>Eveは統一の操作セットでもあります。”search”、”commit”、”bind”の3つの操作がEveの全機能を構成しています。</p><p>Eveの統一データモデルにおいて統一の操作セットを使うことによってスタックの異なる層をコントロールできるのは素晴しいことです。例えば、以下のようにして<code>＜div＞</code>をDOMにレンダリングします。</p><p><img class="graf-image" data-image-id="1*4Vvdz7ee4YndJ_ac4m40MA.png" data-width="354" data-height="68" src="https://cdn-images-1.medium.com/max/800/1*4Vvdz7ee4YndJ_ac4m40MA.png"></p><p>DOMツリーが<code>@browser</code>データベース内に存在しているため、<code>＜div＞</code>をレンダリングすることは<code>tag: "div"</code>付きのレコードをコードするという意味しか持ちません。</p><p>ご覧の通り、スタックの各層には、データモデルと操作セットがひとつしかありません。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/800/1*1TvRKiUNEUX7UfgtIlDjpA.png" src="https://cdn-images-1.medium.com/max/800/1*1TvRKiUNEUX7UfgtIlDjpA.png"></p><p>全ての層が同じなので、摩擦が減りエラーを起こす余地はさほどありません。特性や役割についてもっと容易く判断できるようになり、それぞれの層に対して似たようなプログラミングのパターンが使えるようになります。全てが既につながっているので、何も “くっつける” 必要はありません。</p><p>Eveのチームは、アプリケーションスタックの全体にわたって機能する、統一データモデルと統一の操作セットを生み出しました。それを実現するために、私たちの誰もが実現不可能だと思っていた、より高い水準の抽象化を特定しなければなりませんでした。</p><p>あなたが既に、今年リリースされたもうひとつの抽象化飛躍である、<a href="http://graphql.org/" rel="nofollow" title="" class="ext-link">GraphQL</a>の理解に努めていたなら、この偉業を理解するのに役立つことでしょう。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/800/1*49M2kyC4ncD5kc0e4DmVxg.png" src="https://cdn-images-1.medium.com/max/800/1*49M2kyC4ncD5kc0e4DmVxg.png"></p><p>GraphQLがデータベースでもサーバでも無く、むしろグラフのクエリ言語（または、 “GraphQL” ）であるということを理解するには、少々時間がかかります。GraphQLのポイントは、クライアントのAPIビューをRESTエンドポイントの小さな固定セットから<br>
任意のグラフクエリを受け入れる、統一されたリンクデータの構造に変更することです。</p><p>GraphQLと同様に、Eveもデータベースのバックエンドやサーバではなく、私たちが使い慣れているものよりも高い水準で抽象化された言語です。Eveの「単純なモデル、データという世界」というタイトルの<a href="http://witheve.com/" rel="nofollow" title="" class="ext-link">ホームページ</a>のあるページから、以下のコードを例にして考えてみましょう。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/800/1*lYw3w-3whO96J8u7Lw_dpw.png" src="https://cdn-images-1.medium.com/max/800/1*lYw3w-3whO96J8u7Lw_dpw.png"></p><p><code>search @slack block</code>を実行すると、サードパーティのslackアプリケーションとコミュニケーションを取っていることになり、それは当然内部にデータベースを保持しています。<br>
しかし、GraphQLにおいて任意のAPIの呼び出しが大きなグラフ領域の一部であるように見せかけられるのと同様に、Eveにおいても全てがEveのデータ領域の一部であると<em>見せかける</em>ようになります。</p><p>あなたがAPI層に対するGraphQLの動作を気に入り、他の全ての層に対しても一挙に同様の動作をしてくれるものを求めているのであれば、ぜひEveを使ってみてください。</p>
