<p><a href="http://playbook.thoughtbot.com/#production" rel="nofollow" title="" class="ext-link">playbook #production</a> by <a href="http://playbook.thoughtbot.com/" rel="nofollow" title="" class="ext-link">thoughtbot</a></p><p>私たちが生きている現代は、すでに多くの問題が解決されている魔法のような時代です。私たちはできる限りクライアントのプロダクトに注目し、できる限りの業務を外部サービスへ委託しています。</p><p>それは、時間とお金の節約につながります。そしてこれらのサービスはすぐに使い始めることが可能です。私たちのクライアントは、開発者に数千〜数万ドルを支払う代わりに、月額数十〜数百ドルで済むサービスを利用しています。</p><p>私たちはよく、Googleのスプレッドシートを使って、クライアントが使っている各外部サービスの毎月のコスト、説明、そして認証情報をリスト化します。それにはGitHub、Heroku、SendGrid、New Relic、Airbrake、そしてSplunkといった項目も含まれます。</p><p>私たちは、新しいプロダクション環境を整える時や公開の準備をする時に、以下のような短いチェックリストが役に立つことに気付きました。</p><p>利用可能なドメイン名を探すために、<a href="https://domainr.com/" rel="nofollow" title="" class="ext-link">Domainr</a>を使いましょう。</p><p>ドメイン名を買ってドメイン名として持続して使うために、<a href="https://dnsimple.com/" rel="nofollow" title="" class="ext-link">DNSimple</a>を使いましょう。クライアントがすでに、GoDaddyなどの別の場所でドメインを登録していたとしても、DNSimpleは転送サービスを提供しているので簡単に切り替えられます。</p><p>DNSimpleの簡易的な点を気に入っていますが、それに加えて、私たちが最も必要とする以下のテンプレートまで持ち合わせています。</p><p>Herokuでルートとサブドメインを設定するには、<a href="https://devcenter.heroku.com/articles/custom-domains" rel="nofollow" title="" class="ext-link">Custom Domains</a>の指示書に従ってください。</p><p><a href="https://dnsimple.com/ssl-certificate" rel="nofollow" title="" class="ext-link">DNSimpleが提供するワイルドカードの証明書</a>を買いましょう。ワイルドカード（*）を使うと、www.、staging.、api.など、今後に向けた他のどんなサブドメインでも同じ証明書を使うことができます。</p><p>DNSimpleのSSL証明書をHerokuに追加するには、<a href="https://gist.github.com/croaky/e0beb6025d58eeb88db5" rel="nofollow" title="" class="ext-link">この手順</a>に従ってください。</p><p>SSLとDNSは密接に連動しています。SSLを使う場合はどのような作業内容であっても、CNAMEレコードの追加といったDNSの変更を行える状態であることを確認する必要があります。DNSの管理部署があるクライアントと仕事をする場合、DNS担当者がプログラムに集中して作業がうまくいくように、多忙な時間を避けて予定を決めましょう。作業をきちんと行わないと、全てがSSLで作られたサイトをうっかり消してしまうことがあり得るのです。</p><p>私たちは<a href="https://www.heroku.com/" rel="nofollow" title="" class="ext-link">Heroku</a>を使っています。これはAmazonのクラウド・インフラストラクチャ上に構築されたプラットフォームです。アプリが単なる娯楽用であり、高並行処理と高サステンド負荷をスケールアップするために構築されたのであれば、Herokuを使うのは簡単です。</p><p>Herokuは、Railsと同じように規約（convention）に従って決定を行うため、開発者の決定すべき事項を減らし、Webサーバやアプリサーバなどの問題を解決してくれます。このようにアウトソーシングの運営チームのように働いてくれるため、私たちは問題対処ではなく、プロダクトに集中する時間を増やすことができるのです。この時間こそが、Amazon Web Servicesを利用して得られる恩恵の中で何よりも価値のあることです。</p><p>クラウドを利用すると、確実に運営コストが下がります。特に、キャパシティを小さくできる最初の段階のコストを抑えることが可能です。料金の高いサーバの埋没コストについては目をつぶってください。</p><p>以前は巨額の先行投資なしでは不可能だった事業の立ち上げ・運営を、クラウドとそのサービスによってクライアントに実現させることができます。</p><p>ユーザのアバターなど、フィーチャーのファイルをアップロードする場合は、<a href="http://aws.amazon.com/jp/s3/" rel="nofollow" title="" class="ext-link">Amazon S3</a>にアップロードします。</p><p>また、画像、CSS、JavaScriptなどのアセットは<a href="https://www.fastly.com/" rel="nofollow" title="" class="ext-link">Fastly</a>などのCDNから提供しています。</p><p>プロダクション・アプリのモニタリングには、<a href="http://newrelic.com/" rel="nofollow" title="" class="ext-link">New Relic</a>（無料～100ドル／月）を使っています。</p><p>パフォーマンスをデバッギングするのが開発という仕事の醍醐味でしょう。問題は明確に数値化されているため、修正すれば数値に反映され、「175％の改善を施した」などと表現することができます。</p><p>パフォーマンスの問題を修正するために確立された技術はたくさんあります。また、Rails + Herokuで作成したアプリ用の技術には”無料”のものが数多くあります。</p><p>これらの多くで、開発者は以下を考慮する必要があります。</p><p>ページキャッシュは、一番もたついてしまう技術ですが、全ページのキャッシュを取得し、CDNに加えてしまえば、最速のパフォーマンスを期待できるオプションとなります。</p><p>私たちは<a href="https://airbrake.io/" rel="nofollow" title="" class="ext-link">Airbrake Bug Tracker</a>（無料～25ドル／月）を使っています。</p><p>アプリからユーザにメールを送る時は、<a href="http://www.foundrygroup.com/blog/2010/04/foundry-group-invests-in-sendgrid/" rel="nofollow" title="" class="ext-link">トランザクションメール</a>として知られている<a href="https://sendgrid.com/" rel="nofollow" title="" class="ext-link">SendGrid</a>（無料～400ドル／月）を使っています。</p><p>トランザクションメールの例を以下に挙げましょう。</p><p>私たちは、Herokuの他の利用者（非道徳的な行為をしているかもしれない利用者）と同じIPグループとなって一塊にされてしまうことを避けるために、Herokuのアドオン経由ではなく、直接SendGridを使っています。</p><p>クレジットカードまたはデビットカードによるユーザの支払いを回収するために、<a href="https://stripe.com/" rel="nofollow" title="" class="ext-link">Stripe</a>を使っています。これは支払いゲートウェイであり、マーチャントアカウントとなります。また、自動継続請求にも利用できます。</p><p>Stripeの使用料金は、扱う金額によって異なる仕組みで、決済額の2.9％+30セント（約36円）が課金されます。セットアップ料や月額料金、カード保管料などの費用はかかりません。</p><p>ユーザの銀行口座にACH経由で送金する際は、<a href="https://www.balancedpayments.com/" rel="nofollow" title="" class="ext-link">Balanced</a>を使っています。</p>
