<p><a href="http://www.davidboyne.co.uk/2016/05/30/react-exercise-for-components.html" rel="nofollow" title="" class="ext-link">Developing components as a team</a>（2016-05-30） by <a href="https://twitter.com/boyney123" rel="nofollow" title="" class="ext-link">David Boyne</a></p><p>コンポーネントは<strong>素晴らしい</strong>ものです。<strong>HTML</strong>と<strong>JavaScript</strong>と<strong>CSS</strong>を、再利用もテストも可能なコードのパッケージとしてカプセル化できます。</p><p>コンポーネントにまつわる一つの問題として、<strong>独断的</strong>になりうる、ということが挙げられます。私が「これはコンポーネントだ」と分類するものが他の人にとっては違うこともありますし、逆もまた然りです。</p><p>チームで仕事をするときは、<strong>意見</strong>と<strong>知識</strong>を共有することが大事です。それでは、チームでコンポーネントを構築する場合、意見が一致しているかを確認するためにはどうすればよいでしょうか？</p><p>この投稿では、私たちがアプリケーションをコンポーネントに分解するときの思考プロセスを辿り、自分たちの考えと周囲の開発者たちの考えのギャップをどのように埋めているのかを見ていきます。</p><p>それでは始めていきましょう。</p><p>どんなアプリケーションを構築するときでも、「アプリケーションを小さなパーツに分解する」というのは普遍的なプラクティスです。これにより、自分たちのアプリがどのように構築されるのかを理解できるようになります。</p><p><code>React</code>のおかげでコンポーネントを作ることができますし、コンポーネントのおかげでアプリケーションを分解するのは容易になります。</p><p>私の<a href="https://twitter.com/boyney123" rel="nofollow" title="" class="ext-link">Twitterのプロフィールページ</a>を、私たちがどのようにコンポーネントに分解していったかを見ていきましょう。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/06/profile-1.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/profile-1.png" alt="profile (1)" width="2544" height="1386" class="alignnone size-full wp-image-7034"></a></p><p>1分間考えてみてください。このページをコンポーネントから構築するとしたら、<strong>あなたなら</strong>どうしますか？</p><p>私が最初に考えたのはこちらです。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/06/profile-components-1.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/06/profile-components-1.png" alt="profile-components (1)" width="2543" height="1386" class="alignnone size-full wp-image-7033"></a></p><p>コンポーネント:</p><p>私のコンポーネントを見たとき、あなたの頭には確実に次のうちどちらかの考えがよぎったことでしょう。</p><p>あなたが<strong>賛成</strong>/<strong>反対</strong>かはともかく、この問題は、他人とコンポーネントを設計・構築する際に抱える面白い問題を浮かび上がらせると思います。</p><p>コンポーネントは<strong>独断的</strong>なのです。</p><p>賛成/反対が分かれてしまうというのは、チームで行うあらゆる仕事で共通するものです。しかしそこでカギとなるのは、協力し、チームとして意見を合わせて一緒に前進することです。</p><p>私は<code>React</code>のトレーニング講座に取り組んできましたが、そこでの練習問題はあなたやチームが「コンポーネントを一緒に/共同的に考える」というのを始める手助けになります。</p><p>そのシンプルな練習問題の内容を見ていきましょう。</p><p>以上です。</p><p><em>言った通り、非常にシンプルでしょう？ ;)</em></p><p>この練習問題で、いくらかの成果が得られるはずです。</p><p><strong>芸術</strong>を鑑賞するとき、我々はみんな<strong>違う</strong>ものを見ています。</p><p><strong>アプリケーション</strong>を構築するとき、我々はみんな少し<strong>違う</strong>ものを構築しています。</p><p><strong>コンポーネント</strong>を構築するとき、我々はやはり、みんな少し<strong>違う</strong>ものを構築してしまうでしょう。</p><p>チームの共同作業は、うまくいくチームのカギです。チームが共同作業できていて同じ意見を持てていれば、かつてないぐらい高速に仕事が進むことでしょう。</p><p>この投稿ですでに触れたとおりです。コンポーネントは<strong>素晴らしい</strong>ものです。しかし、チームとの共同作業や基本的なドキュメンテーションなしに個々が独立してコンポーネントを構築すると、それは苦痛にもなりうるのです。</p><p><em><a href="http://davidboyne.co.uk/2016/05/26/automating-react-documentation.html" rel="nofollow" title="" class="ext-link">Reactコンポーネントのドキュメンテーションの自動化</a>に関する私の投稿も是非見てみてください。</em></p><p>この投稿で示した練習問題は十分ではないでしょうが、良いスタートにはなります。</p><p>アプリケーションとコンポーネントを定義するために<strong>関係</strong>を作り上げて<strong>一緒に</strong>働くかどうかは、あなたとそのチーム次第です。</p><p>チームにおいてあなたがどのように<code>React</code>で仕事をしているのか、是非とも聞いてみたいですね？</p><p>質問などがあれば、<a href="https://twitter.com/boyney123" rel="nofollow" title="" class="ext-link">私にツイートする</a>か、コメントを書き込んでいってください。</p>
