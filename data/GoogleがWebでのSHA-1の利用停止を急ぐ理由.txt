<p><a href="https://konklone.com/post/why-google-is-hurrying-the-web-to-kill-sha-1" rel="nofollow" title="" class="ext-link">Why Google is Hurrying the Web to Kill SHA-1</a> by <a href="https://twitter.com/konklone" rel="nofollow" title="" class="ext-link">Eric Mill</a></p><p><img title="hilbert map of hashing algorithms" src="https://konklone.com/assets/images/blog/sha-1/hashing-650.png"></p><p><span style="text-align: center; color:#666666; font-size:0.7em;">Hilbertのハッシュアルゴリズムマップ（<a href="http://programmers.stackexchange.com/questions/49550/which-hashing-algorithm-is-best-for-uniqueness-and-speed" rel="nofollow" title="" class="ext-link">Ian Boyd</a>）</span></p><p>
</p>
<p>信用されているWebのほとんどで安全性の低いアルゴリズムが使われている中、Googleが不急の緊急事態を宣言しました。</p><p><a href="http://news.netcraft.com/archives/2014/05/05/sha-2-very-cryptographic-so-secure-such-growth-wow.html" rel="nofollow" title="" class="ext-link">Webサイトの約90%</a>は、なりすましを防ぐために<a href="https://ja.wikipedia.org/wiki/SHA-1" rel="nofollow" title="" class="ext-link">SHA-1</a>というアルゴリズムを使ったSSL暗号化<img style="margin-bottom: -3px" src="https://konklone.com/assets/images/blog/sha-1/green-lock.png" title="green lock">を使用しています。この暗号化により、例えば<img style="margin-bottom: -6px" src="https://konklone.com/assets/images/blog/sha-1/facebook-green.png" title="green lock for facebook.com">にアクセスした場合、そのサイトが本物のFacebookであること、そしてパスワードが攻撃者に漏洩しないことが保証されます。</p><p>残念ながら、<a href="http://arstechnica.com/security/2012/10/sha1-crypto-algorithm-could-fall-by-2018/" rel="nofollow" title="" class="ext-link">SHA-1には危険な脆弱性</a>が<a href="https://www.schneier.com/blog/archives/2005/02/sha1_broken.html" rel="nofollow" title="" class="ext-link">長い</a><a href="https://www.schneier.com/blog/archives/2005/02/cryptanalysis_o.html" rel="nofollow" title="" class="ext-link">間</a>存在していました。この危険性は年々高まっていますが、インターネット上では今も広く利用されています。この代替となる<a href="https://ja.wikipedia.org/wiki/SHA-2" rel="nofollow" title="" class="ext-link">SHA-2</a>は安全性が高く、<a href="https://support.globalsign.com/customer/portal/articles/1499561-sha-256-compatibility" rel="nofollow" title="" class="ext-link">多くの製品</a>でサポートされています。</p><p>Googleが<a href="http://googleonlinesecurity.blogspot.com/2014/09/gradually-sunsetting-sha-1.html" rel="nofollow" title="" class="ext-link">最近発表した</a>ところによると、Chromeでは今後、信用されている多くのWebサイトに対する警告が段階的に表示されるようになります。</p><p><img class="border" title="browser warning progression" src="https://konklone.com/assets/images/blog/sha-1/chrome-warnings.png"></p><p><span style="text-align: center; color:#666666; font-size:0.7em;">2017年に有効期限が切れるSHA-1証明書を利用した場合にChromeで起こる<a href="http://googleonlinesecurity.blogspot.jp/2014/09/gradually-sunsetting-sha-1.html" rel="nofollow" title="" class="ext-link">Webサイトの表示の変化</a></span></p><p>一連の警告はクリスマス前から始まり、その後6か月の間にさらに厳格なものになります。最終的には、SHA-1証明書の有効期限が2016年に切れるサイトでも黄色の警告が表示されるようになります。</p><p>一連の警告を段階的に実施することで、Googleは不急の緊急事態を宣言しています。そして状況が悪化する前に、Webサイトのアップデートを急ぐよう勧めています。これはいいことです。<strong>SHA-1は廃止されることが決まっています</strong>が、このことを誰も真剣に考えていないからです。</p><p>もしあなたがSSLを利用してWebサイトを運営しているなら、私が作った<a href="https://shaaaaaaaaaaaaa.com/" rel="nofollow" title="" class="ext-link">簡単なSHA-1テストツール</a>を使って自分のWebサイトをテストしてみてください。そうすれば、<a href="https://konklone.com/post/why-google-is-hurrying-the-web-to-kill-sha-1#what-you-can-do" rel="nofollow" title="" class="ext-link">取るべき対策</a>が分かります。</p><p>このテストを行わない人も、この記事を読み進めることをお勧めします。この記事では、Webで<a href="https://konklone.com/post/why-google-is-hurrying-the-web-to-kill-sha-1#sha-what?" rel="nofollow" title="" class="ext-link">SSLとSHA-1が連携する仕組み</a>や、Googleが言うように<a href="https://konklone.com/post/why-google-is-hurrying-the-web-to-kill-sha-1#an-attack-on-sha-1-feels-plenty-viable-to-me" rel="nofollow" title="" class="ext-link">急務である理由</a>、<a href="https://konklone.com/post/why-google-is-hurrying-the-web-to-kill-sha-1#what-browsers-are-doing" rel="nofollow" title="" class="ext-link">各Webブラウザの対応</a>について説明します。</p><p>重要なのは、セキュリティコミュニティが<a href="https://konklone.com/post/why-google-is-hurrying-the-web-to-kill-sha-1#changing-certificates-shouldn't-be-this-hard" rel="nofollow" title="" class="ext-link">証明書の変更に伴う煩わしさを大幅に軽減させる</a>べきだということです。なぜなら、緊急事態だと感じてWebのセキュリティ対策を実施しなければならないのはおかしいからです。</p><p>SHA-1を置き換えることがなぜそれほど重要なのかを理解するには、ブラウザの身になって考える必要があります。</p><p><img style="margin-bottom: -3px" src="https://konklone.com/assets/images/blog/sha-1/green-lock.png" title="green lock">を利用しているWebサイトを表示する場合、Webサイトはブラウザにファイル（SSL”証明書”）を渡します。この証明書は2つの処理に使用されます。Webサイトへの接続を暗号化する処理と、本物のWebサイトに接続したことを確認する処理です。</p><p>どんな証明書でも接続を暗号化できます。ただし、本物のFacebookにアクセスしたことを確認できるように、ブラウザは証明書が信頼できるかどうかを判断して、ユーザに緑色の鍵を表示する必要があります。</p><p>ブラウザは、Webサイトの証明書ファイルが”認証局”（CA）によって発行されたものかどうかを判断することでこの表示を行います。一般に、CAからこのファイルの交付を受けるときはWebサイトの所有者が費用を支払います。ブラウザは、VerisignやGoDaddyを含む50以上のさまざまな機関を、証明書の作成や保証を行うCAとして信頼しています。また、<a href="https://www.eff.org/files/colour_map_of_CAs.pdf" rel="nofollow" title="" class="ext-link">数百の中間CA</a>がその50以上のCAに認証を受けています。ご想像のとおり、<a href="https://konklone.com/post/certificate-authorities-are-actually-a-tremendous-problem" rel="nofollow" title="" class="ext-link">大変な欠陥がある制度</a>ですが、これが現行の制度なのです。</p><p>当面、このWebサイトのCAは<a href="https://www.comodo.com/" rel="nofollow" title="" class="ext-link">Comodo</a>です。証明書は<a href="https://www.namecheap.com/security/ssl-certificates/domain-validation.aspx" rel="nofollow" title="" class="ext-link">Namecheap</a>から購入しました。</p><p><img title="screengrab of certificate information for konklone.com" class="border" src="https://konklone.com/assets/images/blog/sha-1/certificate-connection.png"></p><p><span style="text-align: center; color:#666666; font-size:0.7em;">Chromeでこのサイトの緑色の鍵をクリックした場合の表示</span></p><p>ブラウザには他に極めて重大な試練があります。特定のCAがWebサイトのSSL証明書を発行したときに<strong>その証明書でそれを証明できるかどうか</strong>ということです。</p><p>インターネットの世界では、計算によって証明を行います。証明書を発行する際、CAは秘密鍵を使って暗号化した”署名”を証明書に付けます。これは本物のCAにしかできない方法で、またブラウザに確認できる方法でもあります。</p><p>ただし、CAは加工されていない証明書に署名するわけではありません。署名の前に、MD5、SHA-1、SHA-256などの”一方向のハッシュ”アルゴリズムを実行し、証明書をユニークなスラグに要約します。</p><p><img title="screengrab of more certificate information for konklone.com" class="border" src="https://konklone.com/assets/images/blog/sha-1/certificate-detail.png"><br>
<span style="text-align: center; color:#666666; font-size:0.7em;">Chromeで証明書情報の詳細を表示した場合の抜粋</span></p><p>一方向のハッシュを使用すると、小さいサイズを維持できます。例えば、<a href="https://konklone.com/assets/images/blog/sha-1/war-and-peace.txt" rel="nofollow" title="" class="ext-link">3.2MBの『戦争と平和』</a>にSHA-1を使用すると、<code>baeb2c3a70c85d44947c1b92b448655273ce22bb</code>という結果が得られます。</p><p><img title="War and Peace run through several one-way hash algorithms" class="border" src="https://konklone.com/assets/images/blog/sha-1/war-and-peace-results.png"><br>
<span style="text-align: center; color:#666666; font-size:0.7em;"><a href="https://md5file.com/calculator" rel="nofollow" title="" class="ext-link">MD5file.com</a>（オンラインハッシュ計算機）を使った計算結果。</span></p><p>SHA-1のような一方向のハッシュアルゴリズムは、不可逆性を持つユニークなスラグを生成するように設計されています。<code>baeb2c3a70c85d44947c1b92b448655273ce22bb</code>を逆方向に計算して、元の『戦争と平和』に戻せるべきではありません。<strong>別のファイルが同じスラグを生成することはありません。</strong>たとえピリオドを1つ変更しただけだとしても、SHA-1の使用結果は大幅に変わるはずです。</p><p>SHA-1のような一方向のハッシュを使用するとき、2つのファイルが同じスラグを生成した場合、これを”衝突”といいます。衝突は、理論上はいつでも起こりますが、実際に起こる可能性はほぼないと考えられています。</p><p>ブラウザは証明書を確認するときに、その証明書の情報をSHA-1で計算した値と、証明書に証拠として付いているSHA-1の署名を比較します。SHA-1がユニークなスラグを保証することから、ブラウザはそれらの値が一致すれば、提示された証明書がCAによって署名されていると信頼します。</p><p>もし、本物の証明書と”衝突”する証明書を作成してその証明書をCAに発行させることができれば、証明書の偽造が可能になり、ブラウザが本物と区別することはできないでしょう。</p><p>2005年に、暗号研究者のグループが<a href="https://www.schneier.com/blog/archives/2005/02/cryptanalysis_o.html" rel="nofollow" title="" class="ext-link">SHA-1の解読は従来の予測よりも2,000倍の速度で可能</a>であることを証明しました。実際にはまだ時間も費用もかかりますが、コンピュータは日々高速化し、安価になっているため、SHA-1をインターネットで使用するのをやめるいい機会でした。</p><p>しかし、インターネットではSHA-1の使用が続きました。Bruce Schneierは2012年、Jesse Walkerが以前出した<a href="https://www.schneier.com/blog/archives/2012/10/when_will_we_se.html" rel="nofollow" title="" class="ext-link">SHA-1証明書の偽造にかかるコスト</a>の推定値を転載しました。この推定値はAmazon Web Servicesの価格とムーアの法則を基に算出されたものです。</p><p>Walkerは、SHA-1の衝突にかかるコストは、2012年に<strong>約2億円</strong>、2015年に<strong>約8,000万円</strong>、2018年に<strong>約2,000万円</strong>、2021年には<strong>約500万円</strong>と推定しました。Schneierはこれらの金額に基づいて、”犯罪組織”は2018年に、大学は2021年に証明書の偽造が可能になることを示唆しました。</p><p>Walkerの推定値とSchneierの解釈は、SHA-1からの移行に関する計画や議論において<a href="http://arstechnica.com/security/2012/10/sha1-crypto-algorithm-could-fall-by-2018/" rel="nofollow" title="" class="ext-link">広く引用</a>されるようになりました。最近、主要なCAのグループである<a href="https://en.wikipedia.org/wiki/Certificate_Authority_Security_Council" rel="nofollow" title="" class="ext-link">CA Security Council</a>は<a href="https://casecurity.org/2014/08/28/google-plans-to-deprecate-sha-1-certificates/" rel="nofollow" title="" class="ext-link">Googleのスケジュールに抗議</a>するためにこれを引用しました。グループはその抗議文でこれらの推定値を用いて、”2018年までは実際に攻撃されることはない”としています。</p><p>私は、CA Security Councilのこの姿勢が2014年のうちに非現実的なものになることは間違いないと思います。彼らは、早期の移行は都合が悪いという考えに基づき、明らかにこの議論を正当化しています。</p><p>WalkerとSchneierが推定値を発表したのは、スノーデンが告発する前で、<a href="http://www.nytimes.com/interactive/2013/09/05/us/documents-reveal-nsa-campaign-against-encryption.html?_r=0" rel="nofollow" title="" class="ext-link">関連機関も敵対者である</a>ということを国民が正しく理解していなかった時でした。彼らの推定によれば、2014年のうちに2億円よりも少ないコストで証明書の偽造が可能になり、それは実行を決意した多くの人たちがおそらく支払う金額です。</p><p>なぜ彼らが支払うと思うのでしょうか？　<strong>彼らにはそれだけの資金があるからです。</strong></p><p><img title="Flame-infected computers, by Kaspersky Labs" src="https://konklone.com/assets/images/blog/sha-1/kaspersky-flame.png"><br>
<span style="text-align: center; color:#666666; font-size:0.7em;">Flameの影響を受けたコンピュータの数（<a href="http://securelist.com/blog/incidents/34344/the-flame-questions-and-answers-51/" rel="nofollow" title="" class="ext-link">Kaspersky Labが分析</a>）<span></span></span></p><p>2012年、研究者たちは<a href="https://en.wikipedia.org/wiki/Flame_(malware)" rel="nofollow" title="" class="ext-link">Flame</a>と呼ばれるマルウェアを発見しました。<a href="http://www.washingtonpost.com/world/national-security/us-israel-developed-computer-virus-to-slow-iranian-nuclear-efforts-officials-say/2012/06/19/gJQA6xBPoV_story.html" rel="nofollow" title="" class="ext-link">Washington Postの報道</a>によると、これはイランの核開発を妨害するために機密情報を入手する目的で、アメリカとイスラエルが協力して開発したものでした。さらに、これを裏付けるような<a href="https://s3.amazonaws.com/s3.documentcloud.org/documents/1150433/lobban-nsa-visit-precis.pdf#page=3" rel="nofollow" title="" class="ext-link">NSAの文書も流出しました</a>。</p><p>Flameは、SHA-1の前身とも言えるMD5で衝突を起こして偽造したSSL証明書を使用していました。不気味なことに、長年のMD5に関する合同研究にもかかわらず、当時は一般に知られていなかった手法でした。このニュースは、最悪の脆弱性は公表されないということを私たちに気付かせました。</p><p>また、このMD5の話は不思議な話です。SHA-1と同様に随分前から脆弱性が発見されていたのに、SHA-1と同様にインターネットから排除するまでに恐ろしく長い年月がかかったからです。</p><p>MD5に理論上の脆弱性があることが初めて指摘されたのは1995年で、長い間にさらなる脆弱性も指摘されました。しかし一部のCAは2008年までMD5の使用を続け、これは研究者たちが<a href="http://www.win.tue.nl/hashclash/rogue-ca/" rel="nofollow" title="" class="ext-link">衝突を起こすことに成功</a>し、偽造証明書の発行に成功した時でした。”MD5 Collisions, Inc.”に発行されたこの証明書は、ブラックリストに載せられるように<a href="http://www.csoonline.com/article/2136863/core-javasl-hackers-immortalized-by-firefox/core-java/ssl-hackers-immortalized-by-firefox.html" rel="nofollow" title="" class="ext-link">ブラウザ内部で無効化</a>されています。</p><p><img title="screengrab of MD5 Collisions Inc. certificate in Chrome" class="border" src="https://konklone.com/assets/images/blog/sha-1/md5-collisions-inc.png"><br>
<span style="text-align: center; color:#666666; font-size:0.7em;">Chromeで<a href="chrome://settings/certificates">chrome://settings/certificates</a>にアクセスすると表示できます。</span></p><p>それは緊急事態でしたが、ChromeはMD5のサポートを<a href="https://code.google.com/p/chromium/issues/detail?id=101123" rel="nofollow" title="" class="ext-link">2011年まで</a>廃止できませんでした。MD5の信頼性が低いことが最初に指摘されてから<strong>16年</strong>経っていました。</p><p>その理由は、現在のインターネット上の署名アルゴリズムをアップデートするにあたって特殊な問題があるからです。利用者のためにブラウザでSHA-1をサポートする必要がある限り、<a href="https://github.com/konklone/shaaaaaaaaaaaaa/issues/25" rel="nofollow" title="" class="ext-link">証明書がSHA-1で偽造される可能性がある</a>のです。<strong>SHA-1で署名を偽造して、SHA-2の署名付き証明書に見せかけることができます。</strong>ブラウザは偽造された証明書しか調べないので、”本物の”証明書が存在することやその証明書がSHA-2で署名されている”はずだ”ということは分からないからです。</p><p>つまり、SHA-1を使った証明書の偽造を防ぐには、SHA-1のサポートを廃止するしか方法がありません。腫瘍と同じで、すべて取り除かなければならないのです。</p><p>Microsoftは<a href="http://blogs.technet.com/b/pki/archive/2013/11/12/sha1-deprecation-policy.aspx" rel="nofollow" title="" class="ext-link">SHA-1の廃止予定</a>を最初に発表しました。2016年以降、WindowsとInternet ExplorerでSHA-1証明書を信頼しないという内容でした。Mozillaも<a href="https://wiki.mozilla.org/CA:Problematic_Practices#SHA-1_Certificates" rel="nofollow" title="" class="ext-link">同様の決定をしました</a>。MicrosoftとMozillaの両者は、ユーザインターフェースを変更してユーザに問題があることを知らせる計画については言及していません。</p><p>一方、Googleは最近、<a href="http://googleonlinesecurity.blogspot.com/2014/09/gradually-sunsetting-sha-1.html" rel="nofollow" title="" class="ext-link">Chromeユーザへの警告の表示ををすぐに開始することを発表</a>して、衝撃を与えました。理由はSHA-1の脆弱性が高いためだとしています。</p><p>GoogleのRyan SleeviがChromeの今後のポリシーを初めて公表したのは2、3週間前のことですが、<a href="https://groups.google.com/a/chromium.org/d/msg/security-dev/2-R4XziFc7A/NDI8cOwMGRQJ" rel="nofollow" title="" class="ext-link">ディスカッションの内容をすべて読むこと</a>を強くお勧めします。CAや大規模サイトの運営者たちが、脆弱性の高い証明書の発行を来年の後半ではなく<strong>今すぐ</strong>停止するよう求めるような無謀な彼を、イライラしながら説得しようとしているのが分かります。</p><p>これはGoogleの精力的な動きですが、かなりのリスクでもあります。ブラウザにとって署名アルゴリズムの移行がこれほど難しい大きな理由の1つは、信用されているサイトの暗号が破られているとユーザに知らせることになるからです。ユーザは、ブラウザの暗号が破られているのだと判断し、別のブラウザに乗り換えます。Googleにとって、Chromeのセキュリティが十分に信頼されること、そして最初に移行することによるデメリットを我慢してくれるユーザに好まれることは、賭けのようなものなのです。</p><p>Operaも<a href="https://groups.google.com/a/chromium.org/d/msg/security-dev/2-R4XziFc7A/-DyHwJRR7-AJ" rel="nofollow" title="" class="ext-link">Googleの計画を支持</a>しています。Safariチームは<a href="https://cabforum.org/pipermail/public/2014-August/003769.html" rel="nofollow" title="" class="ext-link">成り行きを見守っている</a>として、計画は発表していません。</p><p>移行を支援するために、あなたのサイトがSHA-1を使用しているかどうか、アップデートの必要があるかどうかをチェックする簡単なWebサイト（<a href="https://shaaaaaaaaaaaaa.com/" rel="nofollow" title="" class="ext-link">shaaaaaaaaaaaaa.com</a>）を作りました。</p><p><img title="SHAAAAAAAAAAAAA" class="border" src="https://konklone.com/assets/images/blog/sha-1/shaaaaa-site.png"><br>
<span style="text-align: center; color:#666666; font-size:0.7em;">Aの数は推測されにくい大きな素数にしました。</span></p><p>各自で<a href="https://konklone.com/post/switch-to-https-now-for-free#generating-the-certificate" rel="nofollow" title="" class="ext-link">新しい証明書のリクエストを生成</a>して、SHA-2を使用した新しい証明書をCAに発行してもらう必要があります。</p><p>既存の秘密鍵を使用する方法は以下のとおりです。</p><p><code>-sha256</code>フラグはCSR自体にSHA-2で署名しますが、SHA-2で署名した証明書を発行するかどうはCAによって異なります。証明書のプロセスの間に、CAのWebサイトでコントロールを探してください。</p><p>私は、さまざまなCAからSHA-2証明書を取得する場合に備えて<a href="https://shaaaaaaaaaaaaa.com/#sha2-certificate" rel="nofollow" title="" class="ext-link">問題と対処法の追跡を続けて</a>います。もしここに記載されていない問題に遭遇した場合は、<a href="https://github.com/konklone/shaaaaaaaaaaaaa/issues/24" rel="nofollow" title="" class="ext-link">こちらでお知らせいただければ</a>後でサイトを更新します。</p><p>また、SHA-1中間証明書も、デジタル署名を使用して検証されるのでアップデートする必要があるかもしれません。これは、CAがSHA-2中間証明書を発行しているかどうか、またその発行場所を特定するということです。私はさまざまなCAの<a href="https://shaaaaaaaaaaaaa.com/#sha2-intermediate" rel="nofollow" title="" class="ext-link">SHA-2中間証明書の発行場所の調査を続けて</a>います。ここに記載がないものがある場合や、利用しているCAの記載がない場合は、<a href="https://github.com/konklone/shaaaaaaaaaaaaa/issues/36" rel="nofollow" title="" class="ext-link">こちらでお知らせください</a>。</p><p>あなたが所有しているサイトの証明書管理を別の企業が行っている場合は、カスタマーサポートにメールで連絡して、ツイートしましょう。<a href="http://googleonlinesecurity.blogspot.com/2014/09/gradually-sunsetting-sha-1.html" rel="nofollow" title="" class="ext-link">Googleの発表</a>にリンクを貼った上で、その企業のスケジュールを確認します。</p><p>また、<a href="https://shaaaaaaaaaaaaa.com/" rel="nofollow" title="" class="ext-link">shaaaaaaaaaaaaa.com</a>がいくらか助けになるかもしれません。もしあなたの力を借りられる場合は、<a href="https://github.com/konklone/shaaaaaaaaaaaaa/issues" rel="nofollow" title="" class="ext-link">未解決の問題</a>をチェックして、手を貸してください。</p><p>ここにさらに大きな問題があります。セキュリティの問題を修正することが状況をさらに悪化させる訳がありません。WebサイトやCAがSHA-2へのアップデートを進めない大きな理由は、それが証明書の再発行を意味し、皆がSSL証明書の置き換えを嫌がっているからです。</p><p>個人の場合、証明書のプロセスというのは<a href="https://konklone.com/post/switch-to-https-now-for-free#register-with-startssl" rel="nofollow" title="" class="ext-link">慣れていない</a>し、難解な用語がたくさんあり、ユーザインターフェースも分かりにくいのです。</p><p>企業の場合、一般に証明書というのはできるだけ長期にわたって取得するもの、どこででも繰り返し利用するもの、そして本当に困ったことになるまで忘れられているものです。証明書の管理は外部に委託されることが多く、手が届きません。</p><p>Chromeの新しいポリシーに関する議論で、GoogleのRyan Sleeviが強調した点は、現在のセキュリティで<a href="https://groups.google.com/a/chromium.org/d/msg/security-dev/2-R4XziFc7A/ef18BfCysgkJ" rel="nofollow" title="" class="ext-link">証明書の変更がそれだけ面倒なのはおかしい</a>ということです。</p><p><a href="https://www.ssllabs.com/ssltest/analyze.html?d=google.com" rel="nofollow" title="" class="ext-link">GoogleのSSL構成</a>を調べてみれば、SHA-1で署名した証明書を利用していることが分かります。ただし、それぞれの証明書の有効期間は3か月で、この短い有効期間によって証明書が偽造される可能性が低くなる上に、<a href="https://twitter.com/agl__/status/503694839481761792" rel="nofollow" title="" class="ext-link">2015年にはSHA-2に移行します</a>。</p><p>重要なのは、3か月という期間によって<strong>Googleが行う証明書の一連の作業がシンプルになるということです</strong>。これは<a href="http://blog.codinghorror.com/working-with-the-chaos-monkey/" rel="nofollow" title="" class="ext-link">NetflixのChaos Monkey</a>と同じで、わざと無秩序な状態を起こして緊急事態が日常的になるようにすることで、深刻な状況を変えています。</p><p>Googleは、GeoTrustから認証を受けて<a href="https://pki.google.com/" rel="nofollow" title="" class="ext-link">自分たちのプライベート中間CA</a>をセットアップすることで、簡単に証明書を作成できるようにし、また必要に応じて証明書を再発行できるようにしました。だからと言って、業務プロセスの一部である証明書の一連の作業を頻繁に行うために、あなたが中間CAを所有する必要はありません。必要なのはその作業を優先させることです。それはGoogleが実行していることであり、また私たち皆が行うべきだとGoogleは主張しています。</p><p>SHA-1の移行は何年も前に始めるべきでした。Googleへのプレッシャーを高めるための不快感は、むしろ長年何も行っていないCAに対して向けられるべきです。</p><p>個人の場合、証明書の取得はドメイン名を買うのと同じように、証明書のインストールはWebサイトを始めるのと同じように簡単であるべきです。証明書の置き換えは自動で行われるべきです。この分野にかなりのビジネス機会が存在していることは明らかですが、オープンソースのツールとのギャップも存在しています。</p><p>組織の場合、頻繁に行う証明書の一連の作業を、組織のインフラストラクチャ設計やアップデートプロセスで優先させる必要があります。既にこの取り組みに成功している組織は、その話を公表するべきです。</p><p>一方、サイトの運営者は証明書をアップデートする必要があります。Heartbleedなどの脅威を、SSL構成を再検討するきっかけにするべきです。さらに<a href="https://community.qualys.com/blogs/securitylabs/2013/08/05/configuring-apache-nginx-and-openssl-for-forward-secrecy" rel="nofollow" title="" class="ext-link">Forward Secrecy</a>なども実装するべきです。</p>
