<p><a href="http://tburette.github.io/blog/2014/05/25/so-you-want-to-write-your-own-CSV-code/" rel="nofollow" title="" class="ext-link">So You Want To Write Your Own CSV code?</a>（2014-05-25）by <a href="http://tburette.github.io/blog/" rel="nofollow" title="" class="ext-link">Thomas Burette</a></p><p><em>一部誤訳の指摘があったため、修正しました！ご迷惑おかけして申し訳ございません！</em></p><p>あなたは自分でCSVを書いてみたいですか？　フィールドはコンマで区切り、行は改行で分けます。簡単ですよね。数行書けば勝手が分かるというものです。</p><p>でも、ちょっと待ってください。</p><p>ダブルクォート（”）で、該当のフィールドを囲みましょう。簡単ですね。</p><p>では、ダブルクォートで囲めるフィールドに例外はあるのでしょうか？</p><p>フィールド内の各ダブルクォートに対して、ダブルクォートを二重化して適用しましょう。そうすれば元のダブルクォートをエスケープすることができます。</p><p>なお、二重化したダブルクォートと空フィールドを囲んでいるダブルクォート（<code>...,"",...</code>）を勘違いしないように気を付けてください。</p><p>その場合も、ダブルクォートで該当のフィールドを囲む必要があります。</p><p>CRLF、CR、それともLF？　複数の改行がある時は？</p><p>例えば、フィールド内の改行は、行の最後尾の改行とは違うものです。</p><p>ここまでは大丈夫ですか？</p><p>最後尾に空フィールドがありますか？　それともただの不必要なコンマでしょうか？</p><p>それはEOFですか？　それとも1つの空フィールド？　またはフィールドが全くない状態でしょうか？</p><p>フィールド内の先頭/末尾に空白がある場合は、どうしますか？</p><p>入手したCSVで、コンマの後に全てスペースが入っていて、それがデータの一部でない場合は、どうしますか？</p><p>冗談を言っているわけではありませんよ。</p><p>小数点の記号として、コロンではなくコンマを使う国もあります。そういった国では、Excelはセミコロンを区切り文字としてCSVファイルを出力します。この問題を回避するために<a href="https://en.wikipedia.org/wiki/Tab-separated_values" rel="nofollow" title="" class="ext-link">コンマの代わりにタブ</a>を使うファイルもあります。他にも<a href="https://ronaldduncan.wordpress.com/2009/10/31/text-file-formats-ascii-delimited-text-not-csv-or-tab-delimited-text/" rel="nofollow" title="" class="ext-link">非表示のASCII文字</a>を使うファイルさえあります。</p><p>任意のCSVファイルを読み込む時は、その点を考慮しなければなりません。ファイルの中でどの記号が区切り文字として使用されているか示すものはありませんからね。</p><p>Excelのように、ファイルをディスクやWebから読み込む際に、様々な区切り文字に対応するアプリケーションもあります。適切な区切り文字が設定されているか確認してください。</p><p>UTF-8を使えばいいだけじゃないでしょうか？　でも、待ってください。</p><p>ファイルがどのエンコードを使っているのかプログラムが自動的に判別できるわけではありません。ファイルによっては、コンピュータのロケールに依存したエンコードを使っているものもあります。</p><p>つまり、CSVを保存したコンピュータと違うコンピュータでファイルを開くと、気付かないうちにデータが破損する恐れがあるということです。</p><p><a href="https://ja.wikipedia.org/wiki/%E3%83%90%E3%82%A4%E3%83%88%E3%82%AA%E3%83%BC%E3%83%80%E3%83%BC%E3%83%9E%E3%83%BC%E3%82%AF" rel="nofollow" title="" class="ext-link">BOM（バイトオーダーマーク）</a>が、使用されているUnicodeエンコーディングを判別してくれるものですよね。そういう役割でしょう（実際はエンディアンを判別する役割ですが、今回そこまでは触れません）。</p><p>でもBOMを挿入すると、ExcelがCSVをテキストファイルと見なし、CSVとしては扱ってくれません。つまり指定した改行は処理されないということです。</p><p>CSVというのはあまりよく定義されたファイルフォーマットとは言えません。<a href="http://tools.ietf.org/html/rfc4180" rel="nofollow" title="" class="ext-link">RFC4180</a>は実情とはかけ離れています。全てのプログラムが少しずつ違うやり方でCSVを処理しているように思えます。更にこれ以上のバリエーションは不要です。どうぞ既存のライブラリを使ってください。</p><p>CSVのプロバイダやサプライヤ、そこから発信されるデータを完全に掌握できるというのなら、信頼できる自動化システムを構築できるでしょうけれどね。</p><p>手にしたCSVが任意のものなら、データが正しいことを保証する方法はただ一つ、ユーザが調査するということです。そして区切り文字や、クォートの規則などを最終的に特定しなくてはなりません。そうしなければエラーになってしまうか、気付かないうちにデータが破損するという事態になりかねません。</p><p>今、世の中に出回っているファイルをうまく処理できるようにCSVコードを書くのは至難の業です。泥沼にはまることになるかもしれません。RubyのCSVライブラリは2321行あるんですよ。</p><p>ご意見は<a href="https://news.ycombinator.com/item?id=7796268" rel="nofollow" title="" class="ext-link">Hacker News</a>と<a href="http://www.reddit.com/r/programming/comments/26g24y/so_you_want_to_write_your_own_csv_code/" rel="nofollow" title="" class="ext-link">Reddit</a>までどうぞ。</p>
