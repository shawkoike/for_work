<p><a href="https://certsimple.com/blog/obsolete-cipher-suite-and-things-web-developers-should-know-about-ssl">What web developers should know about SSL but probably don't.</a> （2015-12-21） by <a href="https://twitter.com/mikemaccana" rel="nofollow" title="" class="ext-link">Mike MacCana</a><br>
この記事は、高速な<a href="https://certsimple.com/">EV SSL</a>プロバイダである<a href="https://certsimple.com/">CertSimple</a>によるものです。</p><p>2015年、Web開発者は以前よりもSSLに関する理解を深めています。そうしたWeb開発者たちがHacker Newsを読むなら知っておくべきことを以下に挙げてみます。</p><p>その他はどうでしょうか。我々の顧客から寄せられる最も多い質問について、回答を紹介していきましょう。</p><p><a href="https://certsimple.com/blog/chrome-outdated-cryptography">SSL Labsには表示されない</a>ため、これが最も多く出てきます。例えばChromeで次のようなメッセージが出されるのです。</p><p>“接続は古い暗号スイートにより暗号化されています”</p><p>この場合は、WebサーバのconfigファイルにCBCではなくGCMを設定する必要があります。</p><p>これは非常に簡単です。ほとんどのWebサーバに最適な設定を<a href="https://mozilla.github.io/server-side-tls/ssl-config-generator/" rel="nofollow" title="" class="ext-link">Mozilla SSL Config Generator</a>が教えてくれます。configファイルをアップデートし、Webサーバを再起動すれば、問題は解決されるでしょう。</p><p>以下のことを行った場合を考えてみましょう。</p><p>こうして、異なる鍵ペアに属しながら同じ名前がついた大量のファイルを持つことになります。すると、Webサーバが何か以下のような内容のメッセージを発します。</p><p>“エラー：公開鍵証明書と秘密鍵が合致しません”</p><p>これは、あなたが複数の鍵ペアを作り、そのうちのある一つの鍵ペアの秘密鍵を、また別の鍵ペアの証明書と合わせようとしている、ということを意味しているのです。</p><p>証明書ファイルが秘密鍵と一致するかどうかを確認するには、modulusをチェックすればよいでしょう。</p><p>modulusが同じであれば、秘密鍵と証明書が一致するということになります。つまり、それらがペアになっているということです。</p><p>modulusが異なっていれば、ファイルはペアではなく、それぞれ別に作られたものということです。</p><p>ジオロケーションを使いますか？　WebRTCは？　最近のブラウザでは、<a href="https://sites.google.com/a/chromium.org/dev/Home/chromium-security/deprecating-powerful-features-on-insecure-origins" rel="nofollow" title="" class="ext-link">セキュリティに敏感なHTML5の機能のためSSLを必要として</a>います。</p><p>ローカルホストに無効なhttps://を設定している場合、SSLの警告を介してクリックばかりすることに大変な時間を費やすことになるでしょう。でも、そんなことをしなくてもよくなる、いいニュースがあります。<a href="https://certsimple.com/blog/localhost-ssl-fix">お使いのMacに信頼できるローカルホストをセットアップするだけなら数分でできます</a>。</p><p>1024ビットのRSAは安全でないと考えられています。あなたが見るほぼ全てのWebサイトは2048ビットのRSAを使用しています。では、なぜもうひと頑張りして4096ビットのRSA証明書を取得しないのでしょうか。</p><p>その答えは、余計な負荷がかかるため、ブラウザとあなたのサイト間でのSSLの応答確認が遅くなることがあるからです。<a href="https://certsimple.com/blog/measuring-ssl-rsa-keys">この計測は、Chromeのデベロッパーツールを使えば簡単に</a>行うことができます。</p><p>さらに、<a href="https://twitter.com/geofft" rel="nofollow" title="" class="ext-link">Geoffrey Thomas</a>がHacker Newsで指摘しているように、あなたの中間CA証明書は2048ビットのRSA証明書である可能性が高いです。「2048ビットのRSAは、十分に暗号強度が高いとはいえない」と考えるならば、2048ビットの中間CA証明書も攻撃され、偽の証明書を発行するために利用される可能性があります（<a href="https://developer.mozilla.org/en-US/docs/Web/Security/Public_Key_Pinning" rel="nofollow" title="" class="ext-link">HPKP</a>は別として）。</p><p>暗号強度を懸念するならば、RSAではなくECDSA証明書を試してみてください。ECDSAはRSAよりもCPU使用率を抑えながら、非常に高い強度を持っています。256ビットのECCが3072ビットのRSAと同等なのです。</p><p>ECCのサポートについて見ても、2015年にはWindows Vista以降、OS X 10.9、Android 3、iOS 7のブラウザがECCに対応しているという、驚くほど良いものです。問題としては、残念ながらHeroku、AWS CloudFrontがまだECCに対応していません。</p><p>PKIとSSLに関しては多くのファイル形式がありますが、今日、ほとんどのサーバソフトウェアは以下の2つだけを使用しています。</p><p><strong>PEM</strong></p><p><strong>PKCS12</strong></p><p>以下の方法により、これらの形式は互いに簡単に変換することができます。</p>
