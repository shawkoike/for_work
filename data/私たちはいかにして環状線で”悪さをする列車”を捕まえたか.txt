<p><a href="https://blog.data.gov.sg/how-we-caught-the-circle-line-rogue-train-with-data-79405c86ab6a#.n5zzzaim7" rel="nofollow" title="" class="ext-link">How the Circle Line rogue train was caught with data</a> （2016-12-01） by <a href="http://twitter.com/lukasaoz" rel="nofollow" title="" class="ext-link">Data.gov.sg team members</a></p><p><em>文：Daniel Sim　分析：Lee Shangqian、Daniel Sim、Clarence Ng</em></p><p>ここ数ヶ月、シンガポールのMRT環状線では列車が何度も止まるものの、その原因が分からないため、通勤客の大きな混乱や心配の種となっていました。</p><p>私も多くの同僚と同じように環状線を使ってワンノースのオフィスに通っています。そのため、11月5日に列車が止まる原因を調査する依頼がチームに来た時は、ためらうことなく業務に携わることを志願しました。</p><p>鉄道運営会社SMRTと陸上交通庁（LTA）による事前調査から、いくつかの電車の信号を消失させる信号の干渉があり、それがインシデントを引き起こすことが既に分かっていました。信号が消失すると列車の安全機能である緊急ブレーキが作動するため、不規則に電車が止まる原因となります。</p><p>しかし8月に初めて発生した今回のインシデントは、不規則に起こっているように見えるため、調査チームが正確な原因を指定することは困難でした。</p><p>私たちには、以下の情報を含むSMRTのまとめたデータセットが提供されました。</p><p>私たちはデータのクリーニングから始めました。使ったツールは、Pythonコードのプログラミングや文書化によく使われる<a href="http://jupyter.org/" rel="nofollow" title="" class="ext-link">Jupyter Notebook</a>です。</p><p>いつもと同じように、最初に便利なPythonライブラリをいくつかインポートしました。</p><p><strong>スニペット1</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/3c63b09a8b3374a5e27eea3d3a80ff21/raw/fd7f04322c9a69b91b5c2932249b3143461e37f2/ccl1.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>次に、生データから使える部分を抜き出しました。</p><p><strong>スニペット2</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/c1ca2b72d93f7f2cadb6c95f812ed38e/raw/36c7357de76e8961499cac6a57742409ef99d312/ccl2.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>日付と時間の列を1つの列にまとめ、データを可視化しやすくしました。</p><p><strong>スニペット3</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/d6cf7a8de449a437807e8933ffe2ab4e/raw/d40a630fe13d0a04230bf89cd1801a889f2c9c9b/ccl3.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>以下のようになりました。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*Z6u8o3FiIH7kUEuJxY-4xQ.png" src="https://cdn-images-1.medium.com/max/1200/1*Z6u8o3FiIH7kUEuJxY-4xQ.png"><br>
<strong>スクリーンショット1：最初の処理で得られた表</strong></p><p>下のグラフからも分かる通り、最初の予備解析では、はっきりとした答えを確認できませんでした。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*KX-DNuL7rcE-to9chy0m1g.png" src="https://cdn-images-1.medium.com/max/1200/1*KX-DNuL7rcE-to9chy0m1g.png"><br>
<strong>図1：発生件数は利用動向のピークとオフピークを反映</strong></p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*oLktbZBwhnI31V86FL6ddw.png" src="https://cdn-images-1.medium.com/max/1200/1*oLktbZBwhnI31V86FL6ddw.png"><br>
<strong>図2：干渉の原因は地域的な要因ではないと予想される</strong></p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*sBb2G__IrdgBeGHe1rH65w.png" src="https://cdn-images-1.medium.com/max/1200/1*sBb2G__IrdgBeGHe1rH65w.png"><br>
<strong>図3：異なる60の車両が信号干渉の影響を受けた</strong></p><p>私たちの次の試みは、複数の特性を取り入れて予備解析を行うことでした。</p><p>私たちが影響を受けたマレーチャートは、Edward Tufteが1983年に書いた『<a href="https://www.goodreads.com/book/show/17744.The_Visual_Display_of_Quantitative_Information" rel="nofollow" title="" class="ext-link">The Visual Display of Quantitative Information（定量的な情報の可視化）</a>』の中で取り上げられています。また最近では、Mike BarryとBrian Cardがボストンの地下鉄のシステムを<a href="http://mbtaviz.github.io/" rel="nofollow" title="" class="ext-link">広範囲に渡って可視化したプロジェクト</a>にも使われていました。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*9C1XujvFQXwCmAK-JnA00g.png" src="https://cdn-images-1.medium.com/max/1200/1*9C1XujvFQXwCmAK-JnA00g.png"><br>
<strong>スクリーンショット2：http://mbtaviz.github.io/から引用</strong></p><p>この表では縦軸が時間を表し、上から下へと時間が進んでいきます。また横軸は路線の駅を、斜めに横切る線は列車の動きを示します。</p><p>MRT環状線バージョンのマレーチャートを作るために、まず軸を描いてみました。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*uspR3Ymc1d1HA-hTVfa3tg.png" src="https://cdn-images-1.medium.com/max/1200/1*uspR3Ymc1d1HA-hTVfa3tg.png"><br>
<strong>図4：環状線バージョンの未記入のマレーチャート</strong></p><p>ハーバーフロント駅とドビー・ゴート駅の間を走る列車は、通常、下の表のように直線的な変位で移動し、片道を走るのに1時間と少しかかります。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*h1cQmc6XzuYtcCjk0-5Fhw.png" src="https://cdn-images-1.medium.com/max/1200/1*h1cQmc6XzuYtcCjk0-5Fhw.png"><br>
<strong>図5：定型化された環状線の列車の反復的な動き</strong></p><p>私たちはインシデントを線で表現せず、点でグラフ上に書き込もうと考えました。</p><p>まず、駅を示す3文字のコードを数字に変換しました。</p><p>インシデントが駅と駅の間で発生した場合は、2つの駅の内、数字の小さい方に0.5を加えて示します。例えば、ハーバーフロント駅（数字は29）とテロック・ブランガ駅（数字は28）の間でインシデントが発生した場合、位置は”28.5″となります。こうすることで、水平軸に沿って点をプロットすることが容易になります。</p><p><strong>スニペット4</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/cbd213d708eb755226ec47eb8967987a/raw/9b62a81fd9c577f8d862ddc6841cfa34f471ca70/ccl4.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>そして、数値的な位置IDを計算しました。</p><p><strong>スニペット5</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/4ecff2dc9f6cf78471b10871339124cf/raw/04690453ff01957cb3b0051d7be71d6c884a6aee/ccl5.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>それから、以下をデータセットに追加しました。</p><p><strong>スニペット6</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/fca2dd5bf6b9c69a08e99f8ecad1399e/raw/def49b7af486a9494cb7feb5c9186959381d4ee6/ccl6.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>その結果が下の表です。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*sdWUDnDhDHM4oFxgH0lG6w.png" src="https://cdn-images-1.medium.com/max/1200/1*sdWUDnDhDHM4oFxgH0lG6w.png"><br>
<strong>スクリーンショット3：位置IDを加えた後に出力された表</strong></p><p>データ処理をすることで、緊急ブレーキが作動するインシデントを全てプロットした散布図を作ることができました。それぞれの点がインシデントを示しています。しかし、この方法でもインシデントが発生するパターンを明らかにすることはできませんでした。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*AXOCrqn4S6FXA-paleLmWg.png" src="https://cdn-images-1.medium.com/max/1200/1*AXOCrqn4S6FXA-paleLmWg.png"><br>
<strong>図6：散布図で示された信号干渉のインシデント</strong></p><p>次に、点ではなく左向きと右向きの三角形を使ってインシデントの位置を示すことで、列車の進行方向をグラフに加えました。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*kjjC7lGxIpB1eHNQlFSm6A.png" src="https://cdn-images-1.medium.com/max/1200/1*kjjC7lGxIpB1eHNQlFSm6A.png"><br>
<strong>図7：列車の進行方向を矢印と色で示す</strong></p><p>非常に不規則に見えますが、グラフを拡大するとパターンが浮き上ってくるように見えます。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*o0RN9Ry04fheqDaqgejtHA.png" src="https://cdn-images-1.medium.com/max/1200/1*o0RN9Ry04fheqDaqgejtHA.png"><br>
<strong>図8：午前6時から午前10時の間に発生したインシデント</strong></p><p>グラフを注意深く観察すると、<em>順番に</em>インシデントが発生していることに気が付くでしょう。ある列車が信号干渉の影響を受けると、同じ進行方向の<em>後続</em>列車も、少し経ってから干渉の影響を受けています。</p><p>この段階では1台の列車が犯人なのかどうかは、はっきりと分かっていませんでした。</p><p>私たちが立証したのは、時間と場所でパターンがあるようだということです。インシデントが発生すると、次のインシデントは逆の進行方向で続けて発生しています。まるで”破壊の跡”があるかのようでした。<strong>インシデントの原因は、私たちのデータセットに含まれない何かなのでしょうか？</strong></p><p>実際、インシデント同士をつなぐ架空の線は、不気味なほどマレーチャートの線と似ています（スクリーンショット2）。<strong>信号の干渉を起こす原因は、逆方向に走る列車なのでしょうか？</strong></p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*TgghmP2ljL1tOeDKu8WP6Q.png" src="https://cdn-images-1.medium.com/max/1200/1*TgghmP2ljL1tOeDKu8WP6Q.png"><br>
<strong>図9：逆方向に走る列車が原因か？</strong></p><p>私たちは、この”悪さをする列車”の仮説について検証することにしました。</p><p>環状線の駅間の走行時間は2～4分だと分かっていたので、4分以内に作動した緊急ブレーキは全て同じグループにまとめることができました。</p><p><strong>スニペット7</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/d81d32d6129f948fe6eaa7254ab158d2/raw/a2c3e64b55a8f58b2b7f36094a622120b981c2f4/ccl7.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>この条件を満たす全てのインシデントの組み合わせを探しました。</p><p><strong>スニペット8</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/0e30b64d4a4ee1b0e8fb917bef240d14/raw/05dfb6cd2ae39bb5fcf633e95e94c28ee676d5c3/ccl8.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>それから、<a href="https://ja.wikipedia.org/wiki/%E7%B4%A0%E9%9B%86%E5%90%88%E3%83%87%E3%83%BC%E3%82%BF%E6%A7%8B%E9%80%A0" rel="nofollow" title="" class="ext-link">素集合データ構造</a>を使い、関連する全てのインシデントの組み合わせを、大きなセットにグループ分けしました。これにより、同じ”悪さをする列車”に関係するインシデントをひとまとめにすることができました。</p><p><strong>スニペット9</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/74bd2c4935a83866eba34d36ecf2fcd1/raw/ce0a90136b0c8a3c930dae247e68377703a06ae5/ccl9.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>そして、私たちのアルゴリズムをデータに適用しました。</p><p><strong>スニペット10</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/40d614b8aba9d5846fe24a21a13c50b0/raw/328ddbbdbd698f80f893efd2cbbdb315fc659016/ccl10.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>以下は、私たちが確認したクラスタの例です。</p><p>次に、私たちのクラスタリングのアルゴリズムで説明可能なインシデントが発生する確率を計算しました。</p><p><strong>スニペット11</strong> <a href="https://gist.githubusercontent.com/datagovsg-blog/9f59dfe548876d34ccedb299059b42d2/raw/a4b40880ba54a9d844c149d3f5eecb9f54356782/ccl11.py" rel="nofollow" title="" class="ext-link">Gist</a></p><p>結果は以下となりました。</p><p>これは、<strong>データセットに含まれる259件の緊急ブレーキが作動したインシデントの内、189ケース、もしくは73パーセントが”悪さをする列車”の仮説で説明できる</strong>ということです。私たちは、正しい方向に分析を進めていると思いました。</p><p>クラスタリングの結果を基に、インシデントのグラフを色分けしてみました。同じ色の三角形が同じクラスタに属します。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*nnhR-6L3YfvoZ79Pwp30Ag.png" src="https://cdn-images-1.medium.com/max/1200/1*nnhR-6L3YfvoZ79Pwp30Ag.png"><br>
<strong>図10：私たちのアルゴリズムでクラスタリングしたインシデント</strong></p><p><strong>図5</strong>でお見せした通り、環状線を端から端まで走るのにかかる時間は、およそ1時間です。インシデントのプロットに合う線を描くと、図5に非常に近い線が引けます。これは”悪さをする列車”は1台だということを強く示唆しています。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*AUOm7I91XXyVCi5wWc7TFw.png" src="https://cdn-images-1.medium.com/max/1200/1*AUOm7I91XXyVCi5wWc7TFw.png"><br>
<strong>図11：クラスタリングしたインシデントの時間から、干渉に関係している列車は1台の可能性が高いことが分かる</strong></p><p>また観察結果から、未確認の”悪さをする列車”自体は散布図に現れず、信号関連の問題を抱えていないようだと分かりました。</p><p>解明に向かっていると確信を持てたので、さらに調査を行うことにしました。</p><p>日没後、”悪さをする列車”を特定するために、キム・チュアン車両基地へ行きました。その日はSMRTがデータを抽出する時間を必要としたため、列車のログを詳しく調査できませんでした。そのため、昔ながらの方法で該当する列車を特定することにしました。インシデントが発生した時間に各駅を発着する列車の映像記録を見直したのです。</p><p>午前3時に、チームは第一容疑者を見つけました。それはPV46という、2015年から稼働している列車でした。</p><p>11月6日（日曜日）にLTAとSMRTは、PV46が問題の原因かを検証するため、オフピークの時間帯にPV46を走らせました。私たちの仮説は当たりでした。PV46が、近くを走る列車同士の通信を遮断し、緊急ブレーキを作動させていたのです。検証を行った日のPV46が走るより前の時間に、同じようなインシデントは発生していませんでした。</p><p>11月7日（月曜日）、チームはPV46の過去の位置データを処理し、8月から11月に起こったインシデントの95パーセント以上が私たちの仮説で説明できると結論付けました。残りのインシデントは、通常の状態で時々発生する信号の消失が原因と思われます。</p><p>9月1日など、特定の日にパターンがはっきりと現れました。PV46が運行している時間帯およびその前後に障害が起こっていることが簡単に見て取れます。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/1200/1*LoBiYQBBVqRynqUSmyY9lA.png" src="https://cdn-images-1.medium.com/max/1200/1*LoBiYQBBVqRynqUSmyY9lA.png"></p><p>最終的にLTAとSMRTは、11月11日の<a href="https://www.lta.gov.sg/apps/news/page.aspx?c=2&amp;id=89defe38-427b-4cfe-b69d-4e35ca7d0f64" rel="nofollow" title="" class="ext-link">合同のプレスリリース</a>で、調査結果を一般に公表しました。</p><p>私たちが調査を始めた頃、私と私の同僚は、LTA、SMRT、DSTAの職員が数多く参加する合同調査チームにとって興味深いパターンを見つけたいと思っていました。SMRTとLTAから提供されたインシデントログはきちんと整理されていたため、データをインポート、分析する前のクリーニングが最小限で済み、幸先のいいスタートを切ることができました。また、PV46のハードウェアの問題を確認したLTAやDSTAによる効果的な追跡調査も素晴らしかったです。</p><p>データサイエンスの観点から考えると、各インシデントがとても近い場所で発生したことは幸運でした。そのおかげで、かなり短い期間で問題と原因の両方を確認することができました。もっとインシデントが孤立していたらジグザグのパターンは分かりにくく、謎を解くための時間とデータがさらに必要となったでしょう</p><p>もちろん一番うれしいのは、通勤時に、また安心して環状線を使えるようになったことです。</p><p><em>注意：ここに書かれているコードは、環状線のインシデントを解明するために、実際にSMRTのデータで作業していた2016年11月5日に書かれました。非効率なコードもあると思われます。私たちが使用したJupyter Notebookのコピーは<a href="https://github.com/datagovsg-blog/circle-line-analytics" rel="nofollow" title="" class="ext-link">こちら</a>からダウンロードできます。</em></p><p><em>Daniel Sim、Lee Shangqian、Clarence NgはGovTechのデータサイエンス部門で働くデータサイエンティストです。</em></p>
