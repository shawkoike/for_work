try { return } finally {} （2016/09/26） by Ke Pi次のプログラムを実行すると、何の値が表示されるか分かりますか？上の質問に回答する前に、次の問題には答えられるでしょうか？もし答えが分からなければ、どうぞこのまま読み進めてください。Oracle Javaチュートリアルに、tryブロック内にreturn文があり、さらにfinallyブロックも存在する特殊なケースの説明があります。上記はtryブロック内にreturn文、break文、continue文のいずれがあっても、finallyが常に実行されると説明しています。一部の例外は、JVMの終了やtry finallyブロックを実行するスレッドの中断です。これはつまり、tryブロック内でSystem.exit(0)を呼び出すと、finallyブロックは実行されないことを意味します。それでは、上述のコードの出力は何になるのでしょうか。答えは3ではなく2です。なぜでしょう。JVMの仕様にその答えがあります。return ++xが実行されると、JVMは++xの値を一時変数へ格納し、finallyブロックを実行し続けます。finallyが実行されたあと、一時変数に格納されている値がメソッドの呼び出し元へ返されるはずです。よって出力は3ではなく2になります。Test.classのjavapの出力も以下のようになります。
コマンドの実行順序は以下のとおりです。1つ注意しておきたいことはもしfinallyブロックにもreturn文があった場合、メソッドの呼び出し元へ返されるのはfinallyブロックの戻り値になるということです。というのは、仕様ではtryのreturnが無視され、tryとfinallyとの両方でreturn文がある場合finallyのreturnが戻ってきた値になるからです。参照:http://www.cnblogs.com/averey/p/4379646.html（中国語サイト）
