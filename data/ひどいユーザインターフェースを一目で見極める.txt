<p><a href="http://www.hadermann.be/blog/134/recognising-a-bad-user-interface-at-first-glance/" rel="nofollow" title="" class="ext-link">Recognising a Bad User Interface at First Glance</a> （2015-07-03） by <a href="https://twitter.com/PHadermann" rel="nofollow" title="" class="ext-link">Piet Hadermann</a></p><p><img width="788" height="591" src="http://www.hadermann.be/blog/wp-content/uploads/2015/07/bad_vending_ui-788x591.jpg" class="attachment-post-image wp-post-image" alt="bad_vending_ui"></p><p><a href="http://www.hadermann.be/blog/121/enterprise-software-acquisition-whats-missing/" rel="nofollow" title="" class="ext-link">前のブログ記事</a>を書いた時、「訓練された目ならば、不親切なソフトウェアを結構な頻度で簡単に見抜けるようになる」ということに気づきました。</p><p>それは初対面の人に第一印象を抱くのに似ています。私たちは初めて会った人の印象を判断するのに<a href="http://psych.princeton.edu/psychology/research/todorov/pdf/Willis&amp;Todorov-PsychScience.pdf" rel="nofollow" title="" class="ext-link">コンマ1秒もかからないそうです</a>。</p><p>人を判断するのとは違い、ユーザインターフェースの良しあしを判断することは、私たちが（今はまだ）本能的に行っていることではありません。しかし、たった数分で、もしくはもっと早く、ユーザインターフェースがじっくり考えられて作られたものか、ちょっとした思い付きで作られたものかどうかを判断することは可能です。</p><p>どうして判断がついたのかや、どんな警告サインが出ていたのかについては確証がなかったため、私は注意を払い、メモを取ることにしました。</p><p>以下は私が気付いたことです。</p><p>これはユーザの言葉ではなく、むしろプログラマが考えつく言葉です。</p><p>私は先日、イベントオーガナイズ用のソフトウェアをトライアルしてみました。ビジターや参加者は時に”ユーザ”と呼ばれていて、私をひどく混乱させました（ビジターではないユーザやログインを、後から付け加えることもできました）。</p><p>私の勤める企業では、かつて新しいウィザードのようなプロセスのプロトタイプを作りました。同じ人物を表現する3つの異なる言葉を使用したいくつかのスクリーンから成り立っていました。<strong>トラッカー、カードホルダー、スターター</strong>です（言うまでもなく、これは商品化される前に修正されました。この話をすると『続・夕陽のガンマン』という映画のことを思い出してしまうのですが、何故なんでしょう？　）。</p><p>プロセスがどのように機能するか分かっている時は、まったく気づかないでしょう。しかし、初めてこのソフトウェアに直面した時、この3つの言葉が同じ人物か、別々の役割を持った異なる人物について話しているかどうか、疑問に思うかもしれません。誰が知るところでしょうか？</p><p>自分のユーザを混乱させたくはありません。そこでホールウェイテストが役立ちます。</p><p>もし、経験の少ない非技術畑の人にユーザインターフェースのデザインを頼むとしたら、大抵の場合、Excelでデザインされたようなものが出来上がるでしょう。Excelはほとんどの人が知っている制約のないアプリケーションです。”実際の”ソフトウェアとして使えるようになる前に、ソフトウェアの多くはExcelシートから取りかかっています。</p><p>一方で、開発者は全てを自分たちのなじみのあるユーザインターフェースとして見なすコツを知っています。すなわち開発用IDEです。</p><p><img class="alignnone size-full wp-image-142" src="http://www.hadermann.be/blog/wp-content/uploads/2015/07/eclipse-ide_sm.jpg" alt="eclipse-ide_sm" width="800" height="584"></p><p>すでに意味するところが分かっているのであれば、既存のアイコンイメージは理にかなっているように見えます。しかし、初めてアイコンを見たときは、何を意味するのか手がかりを持っていません。どうしても必要でない限り、アイコンの代わりに言葉を使ってください。たとえアイコンの方がよく見えるとしてもです。</p><p><img class="alignnone size-full wp-image-148" src="http://www.hadermann.be/blog/wp-content/uploads/2015/07/mmore22.png" alt="undefined icons UI" width="638" height="331"></p><p>（プログラマが書いたものです）</p><p><img class="alignnone size-full wp-image-138" src="http://www.hadermann.be/blog/wp-content/uploads/2015/07/pointlesserror.png" alt="Pointless error dialog" width="432" height="181"><br>
<small><em>訳注：不正な値です。許容値のみ入力してください。</em></small></p><p>入力欄に不正な値を入れるか、入力必須項目を空欄にして、エラーメッセージを確認してみましょう。</p><p>（エラーメッセージを読まずに）どこにエラーがあるのか、すぐに分かりますか？　それとも、「全ての必須項目を入力してください」、「入力内容が正しくありません」といった包括的なメッセージが表示されてしまいますか？</p><p>更にひどいのは、データベースのエラーメッセージが表示されるケースでしょう。または、エラーは何も表示されずに、知らぬ間にデータが失われていた、なんてこともあるかもしれません。</p><p>「もしXであれば、YとZを入力してください。もしXでないなら、Zだけを入力し、Zが1でない場合はYも入力してください」</p><p>他の国の事は分かりませんが、このような説明を見ると、ベルギーで所得税の申告書を記入している気分になります。</p><p>これは、ステップやコードの追加を控えることで”利口”ぶるプログラマの特徴を、実によく表していますね。このようなものが品質監査を通ってはいけません。顧客にとって負担になるだけでなく、サービスデスクに不要な問い合わせが殺到する原因にもなります。</p><p>はるか昔（実際には20世紀）、私はこの種の説明を含む”メッセージ実装ガイド”（MIG）に基づいて、EDIソフトウェアを開発していました。当時は、たくさんの入力項目と、ケースごとの入力必須項目を示すMIGの説明を表示するだけで、ユーザにとって分かりやすく改善しようとは考えていませんでした。そんな調子で再検討をしないのが、私たちのやり方だったのです。失敗から学ぶ能力はあって良かったと今は思います。</p><p><img class="wp-image-137 size-full" src="http://www.hadermann.be/blog/wp-content/uploads/2015/07/mig2.png" alt="Message Implementation Guide" width="723" height="102"><br>
<em><small>訳注：<br>
通常Bring Parcels（BPNとBPI）において、重量と容積の両方、またはいずれか一方は不要である。<br>
輸送時は、総重量と総容量の両方、またはいずれか一方のみが有効である。<br>
特殊素材への義務付けがある場合に限り、危険物に対して純重量を使用する。</small></em></p><p><em>EDIメッセージ実装ガイドより引用</em></p><p>この不合理さが更に当たり前になっていくのを感じたのは、一式のフォームで、類似性のある2種類のメッセージ（データ構造）を”実装”するのが賢明だろうという意見が出た時です。</p><p>このように手間を省いている時点で開発者は、混乱してサポートに電話をかけるユーザのことなど全く考慮していません。</p><p>例として「<strong>2015-06-29 15:44:21 EST</strong>」を挙げましょう。おそらくこれは、ソフトウェアに使われている言語やフレームワークの種類によらず、ほぼデフォルトに設定されている未フォーマットの出力です。</p><p>この表記は15:44やJun-29 15:44（ヨーロッパとアメリカのユーザには分かります）とすれば十分かもしれません。</p><p>場合によっては、より人間味のある「1時間以内」、「昨日」、「来週」といった相対表記にすると、もっと良くなるでしょう。</p><p>Tabキーでの移動順序が論理的でなく、キーボードによるショートカットが設定されていないと、全ての操作をマウスで行わなければいけません。</p><p>これは、マウスが発明された頃からユーザを悩ませてきました。</p><p><strong>「本当に文書を印刷しますか？」</strong></p><p>上記のメッセージボックスが表示され、続けて印刷ダイアログが開くユーザインターフェースがありますが、印刷ダイアログでも操作をキャンセルすることは可能です。</p><p>誤って印刷するということは、最初の段階で許可が必要なほど悪い事なのでしょうか？</p><p>少し前にCRMのようなアプリケーションを使う機会がありました。</p><p>連絡先のフォームを保存せずに閉じようとすると、<strong>「本当に保存せずに終了しますか？」</strong>というダイアログが表示されました。</p><p>また、勤務先のフォームを保存せずに閉じようとすると、<strong>「終了前に変更を保存しますか？」</strong>というダイアログが表示されました。</p><p>「はい」をクリックすると、その結果が2つのダイアログで異なることは明らかです。</p><p>初期状態の”きれい”なインストレーションやアカウントには、使い始めるための説明がありません。</p><p>ユーザが最初に何をしなければいけないのかを示すべきです。</p><p>「まだ連絡先が登録されていないので、”連絡先を追加”をクリックして1つ目の連絡先を追加してください」<br>
「初めてのご利用ですね。チュートリアルをご希望の場合は<u>こちらをクリックしてください</u>」</p><p>このようにすれば、まず何をしたらいいのかが分かります。</p><p>不必要な分割線やグループ分けのボックスが使われている場合、これらが減れば、もっと見やすくなるはずです。同じボックスに格納してグループ分けするよりも、位置でグループ分けする方が便利でしょう。</p><p><strong>ひどいユーザインターフェースを扱っていることを、もっと簡単に知る方法をご存知ですか？</strong><br>
<strong>コメント欄に投稿して教えてください！</strong></p><p>私が以前、勤めていた企業では、とても長いメールをユーザに送っていました。そのため、「メールを貰ったんだけど、内容を説明してくれる？」と、電話でユーザが問い合わせをしてくることがよくありました。</p><p>メールに書かれていない内容について問い合わせがあると、その答えを追加してメールのテンプレートを変更することもありました。正しく、論理的な対処法のようですが、実際にはどうでしょう？</p><p>メールが長くなりすぎて読むのが大変だと思う人がいなければ、素晴らしい対処法でしょう。</p><p>また、顧客が電話をしてきた時、サポートチームはソフトウェア内で使用されている用語で説明していました。「申し訳ありません。まだバリデーションが”アンバリファイド”の状態です」といった具合です。残念ですがほとんどの場合、顧客にとってこの説明は無意味です。顧客は、何が”バリデーション”で、なぜ”アンバリファイド”なのかが分かりません。そしてサポートチームのメンバーはイライラしてきます。なぜなら、”愚かなユーザ”に繰り返し同じことを説明しなければならないからです。</p><p>ユーザインターフェースをフレンドリーにすることは、繰り返しを伴うプロセスです。頻発する問題を修正または解明できるよう、サポートリクエストの確認を常時行うべきです。</p><p><em>皆さんは賛成ですか？　反対ですか？　ひどいユーザインターフェースかどうか、もっと簡単に分かる方法をご存知ですか？<br>
コメント欄に投稿して教えてください！</em></p><p><a href="http://hadermann.us1.list-manage.com/subscribe?u=52463f122bd97d7c3bc872e6f&amp;id=3cda40507b" rel="nofollow" title="" class="ext-link">こちら</a>で私のメーリングリストに登録して、更に面白く、洞察に満ち、有益な（役に立たない場合も）投稿をお楽しみください！</p><p>トップの<a href="https://www.flickr.com/photos/rdolishny/2760207306" rel="nofollow" title="" class="ext-link">写真</a>は<a href="https://www.flickr.com/photos/rdolishny/" rel="nofollow" title="" class="ext-link">rdolishny</a>氏が撮影した作品で、クリエイティブ・コモンズ・ライセンスのCC BY-NC 2.0と定められています。</p>
