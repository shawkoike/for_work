<p><a href="https://shkspr.mobi/blog/2014/11/why-i-vertically-align-my-code-and-you-should-too/" rel="nofollow" title="" class="ext-link">Why I vertically align my code (and you should too!)</a> （2014/11/29） by <a href="https://shkspr.mobi/blog/" rel="nofollow" title="" class="ext-link">Terence Eden</a></p><p>先週、<a href="https://news.ycombinator.com/item?id=8661740" rel="nofollow" title="" class="ext-link">Hacker News上で興味深い議論が行われました</a>。テーマは<a href="https://www.kernel.org/doc/Documentation/CodingStyle" rel="nofollow" title="" class="ext-link">Linux Kernelのコーディングスタイル</a>についてです。</p><p>議論の中で私は、<a href="https://news.ycombinator.com/item?id=8662276" rel="nofollow" title="" class="ext-link">コーディングで垂直方向にそろえるインデントをとるべきか</a>というささやかな聖戦を仕掛けました。私は全面的に賛成です。理由を説明しましょう。</p><p>簡単な例を挙げてみます。</p><p>次のようにすると、もっと読みやすくなります。</p><p>ちょっと見ただけで、「bob_age」がおかしいと分かるでしょう。また、目視であちこち探さなくても、全ての値が整数であることが簡単に確認できます。</p><p>この考え方は<a href="http://programmers.stackexchange.com/questions/30029/vertical-alignment-yea-or-nay" rel="nofollow" title="" class="ext-link">一般的に</a><a href="http://www.zeyalabs.ch/posts/2013/vertical-alignment-sucks/" rel="nofollow" title="" class="ext-link">共有</a>されているわけではありません。ですので、なぜ<a href="http://www.andrewewhite.net/wordpress/2010/09/24/writing-beautiful-code-vertical-alignment-coding-style/" rel="nofollow" title="" class="ext-link">多くの</a><a href="http://francoishill.fr/aligning-patterns-in-code/" rel="nofollow" title="" class="ext-link">人たち</a>がこれを有効なスタイルガイドと考えるのか私なりに説明してみようと思います。</p><p>プログラミング作業の90％は問題の解決に費やされ、<a href="http://ja.wikipedia.org/wiki/90%E5%AF%BE90%E3%81%AE%E6%B3%95%E5%89%87" rel="nofollow" title="" class="ext-link">残りの90％は</a>その解決方法の理解に費やされます。</p><p>コードを読むことは散文を読むこととさほど違いはありません。どちらの場合も書き手に期待するのは、選んだ言語を主題と無関係に使って冗長にせずに、論旨を明確に説明し、ごく一般的な文法スタイルを順守することです。</p><p>実際に、Kernelのコーディングスタイルは、このことを重視しています。変数の名付け方は、コーディングで何を実現するのかと同じくらい重要です。</p><p>次のコードについて考えてみましょう。</p><p>もしコードベースを深く理解していたとしても、さほど読みやすいとは言えないコードですね。</p><p>名前の付け方やスペースの入れ方、さらにキャピタライゼーションルールをよく考えて適用することで、私たちのコードはかなり読みやすくなりました。つまり、私たちのコードを引き継ぐ人がいたとしても、解読作業にあまり時間をとられることなく、内容の理解に時間をかけられるでしょう。</p><p>昔からよくある炎上と同じように、等幅フォントとプロポーショナルフォントの間には、どちらも同じくらい情熱的な支持者がいます。</p><p>コーディングには<a href="https://code.google.com/p/i3project/wiki/Fonts" rel="nofollow" title="" class="ext-link">プロポーショナル</a><a href="http://nickgravgaard.com/elastictabstops/news/programming-fonts/" rel="nofollow" title="" class="ext-link">フォント</a>が<a href="http://www.slant.co/topics/67/~what-are-the-best-programming-fonts" rel="nofollow" title="" class="ext-link">最適</a>だと言う愚かな人もいるでしょう。しかしそんな野蛮人たちは相手にしないでください。<br>
また、等幅フォントに違和感を与えようとする人もいるでしょう。彼らは<a href="http://blog.codinghorror.com/revisiting-programming-fonts/" rel="nofollow" title="" class="ext-link">プロポーショナル</a><a href="http://programmers.stackexchange.com/questions/5473/does-anyone-prefer-proportional-fonts" rel="nofollow" title="" class="ext-link">フォント</a>が優れたコードを作ると<a href="https://news.ycombinator.com/item?id=4623781" rel="nofollow" title="" class="ext-link">純粋</a>に主張しているからです。しかしそれも、軽薄で哀れな精神です。</p><p>結局のところ、読みやすさに行き着きます。どんな表現なら、コードを最も理解しやすいでしょうか？　それは、IDEの文字のカラー定義です。つまりあなたは一目で「foo」が関数なのか、定数なのか、変数なのか、もしくはコメントなのか分かります。コードの中でそのブロックが何なのかをすぐに理解できることは、どんなことでも素晴らしいことなのです！</p><p>スプレッドシートの人気が高いのはそれが理由です。列によってそろっているので、読みやすくなります。上から下へ列に沿って素早く目視で見ても、もし他と著しく異なる行があれば、気づくことができるでしょう。</p><p>興味深いことに、Hacker Newsでの議論で私が直面した大きな批判は、垂直方向にそろえるインデントが有用かどうかではありませんでした。私たちが普段使っているツールがいかに貧弱かについてだったのです。</p><p>そして…</p><p>上記に挙げた意見は、ある状況においては正当だと言えますが、言いかえると、より良いツールが必要だということを示しているのではないでしょうか。</p><p>今、私は、<a href="http://nickgravgaard.com/elastictabstops/" rel="nofollow" title="" class="ext-link">Elastic Tabstops</a>という、コードブロックのインデントを自動的にとるアイデアを思い出しました。</p><p><img src="https://shkspr.mobi/blog/wp-content/uploads/2014/11/columnblocks_coloured.gif" alt="By Nick Gravgaard" width="393" height="255" class="size-full wp-image-20089"></p><p>Nick Gravgaard作</p><p>ツールでは簡単にこの方法を適用することができます。このような退屈で反復的な仕事をするためにコンピュータが存在しているのであり、コードが更に読みやすくなることを考えれば、そこでCPUサイクルをどんなに”浪費”したとしても安いものでしょう。</p><p>垂直方向にインデントをそろえて、コードを読みやすくすることについては<a href="https://github.com/torvalds/linux/blob/9a3c4145af32125c5ee39c0272662b47307a8323/arch/mips/include/asm/octeon/cvmx-bootmem.h" rel="nofollow" title="" class="ext-link">Linux</a> <a href="https://github.com/torvalds/linux/blob/c6c9161d064d30e78904f3affe5184487493e0fc/arch/x86/kernel/cpu/common.c#L103" rel="nofollow" title="" class="ext-link">Kernel</a>を参照すると<a href="https://github.com/torvalds/linux/blob/9a3c4145af32125c5ee39c0272662b47307a8323/net/wireless/wext-proc.c#L135" rel="nofollow" title="" class="ext-link">多数</a>の<a href="https://github.com/torvalds/linux/blob/cba3b00deab5a8564d61ec18e61ba6ba82203299/include/uapi/sound/asound.h" rel="nofollow" title="" class="ext-link">例</a>を見つけることができます。</p><p>垂直方向にそろえるインデントは、あらゆる状況で有効なわけではありませんが、データの評価を迅速に行う上での可読性は、そろえない場合からすると比較にならないほど高くなります。</p><p>コーディングは、自分自身の考えを表現する創造的な方法です。表現したアイデアを難しく見せてしまうようなツールであるのなら、インデントではなく、ツール自体を改善すべきでしょう。</p>
