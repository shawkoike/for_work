<p><a href="http://varianceexplained.org/r/year_data_scientist/" rel="nofollow" title="" class="ext-link">One year as a Data Scientist at Stack Overflow</a> （2016-06-20） by <a href="http://twitter.com/drob" rel="nofollow" title="" class="ext-link">David Robinson</a></p><p>2013年1月のある日、気が付くと私はインターネットで時間を無駄遣いしていました。</p><p>これは、残念な発見でした。博士課程の2年半は、みんな忙しくなります。私もそうでした。酵母遺伝学の研究発表が控えていましたし、ニューヨーク大学との共同研究の論文は数カ月遅れていました。しかも学部での研究が残っていて、それはさらに滞っていました。また、プライベートも忙しく、イスラエル旅行から帰国してブラジルの柔術とジョギングを再開したばかりでした。</p><p>しかし、そんな日々の中で、<a href="http://stats.stackexchange.com/questions/47771/what-is-the-intuition-behind-beta-distribution" rel="nofollow" title="" class="ext-link">知らない人からのベータ分布に関する質問</a>に答えて時間を無駄にしていたのです。質問はCross Validatedというサイトに寄せられたものでした。これは開発者向けのQ&amp;Aサイト「Stack Overflow」の統計学版姉妹サイトです。その時までの約1年間、私はStack Overflowでは積極的に回答していましたが、Cross Validatedでの回答はそこまで頻繁ではありませんでした。しかし確かに、私はそうやって過ごして、時間を無駄にするのが<em>好きだった</em>ようです。</p><p>当時の私は、野球の各種記録からベータ分布を説明する、素晴らしいアイディアを持っていました。この回答については、<a href="http://varianceexplained.org/statistics/beta_distribution_and_baseball/" rel="nofollow" title="" class="ext-link">こちらの投稿</a>と、<a href="http://varianceexplained.org/r/beta_binomial_baseball/" rel="nofollow" title="" class="ext-link">こちらのシリーズ</a>で紹介しています。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/07/image.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/07/image.png" alt="image" width="667" height="318" class="alignleft size-full wp-image-7451"></a></p><p>私は博士課程において、誇れる研究を数多く行いました。記憶に残らないようなことや、重要ではないことは、さらにたくさん行っています。キャリアへの影響という観点で考えると、サイトで回答することが私にとって一番楽しい作業でした。</p><p>この前の木曜日（6月16日）は、私がデータサイエンティストとしてStack Overflowで働くようになって、ちょうど1周年となる日でした。</p><p>私は働き始める1カ月前に博士課程を終えました。そこから技術系の会社に勤めるという変化は私にとって大きな挑戦でした。ほんの数カ月前まで、計算生物学という分野の学術的な研究を続けようと考えていたのです。博士号取得後のフェローシップの申請を始めていて、”企業”の求人に応募することなんて考えてもいませんでした。</p><p>何が私の気持ちを変えたのでしょうか。始まりは2015年の1月です。Jason Punyonがベータ分布に関する（2年前の）私の投稿を見つけました。</p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p><p>この時点で、私は研究者としての道を歩み始めていることをかなり確信していました。しかし、Stack Exchangeのオフィスをこの目で確かめ、その製品を作り出す人々と出会う機会を逃したくはありませんでした。私が自分の考えを変えるためには基本的にオフィスを一度、訪問するだけで十分でした。そして面接の2、3週間後に採用の話をもらい、それを受けました。</p><p>人々はWeb開発者が何をするのかを知っています。しかし、データサイエンティストは何をするのでしょうか？　（<a href="http://www.wsj.com/articles/what-data-scientists-do-all-day-at-work-1457921541" rel="nofollow" title="" class="ext-link">私だけがこう質問されているわけではありません</a>）。</p><p>私が取り組んでいるプロジェクトは、以下に示すものだけではありませんが、これらのプロジェクトで私が担当していることがどんなものかを感じていただけるでしょう。</p><p>私たちの製品のどこで機械学習が使われているかという最たる例は、<a href="https://kevinmontrose.com/2015/02/04/providence-matching-people-to-jobs/" rel="nofollow" title="" class="ext-link">Providenceです。これは、ユーザとユーザが興味を持ちそうな仕事をマッチングさせるシステムです</a>。（例えばStack Overflowのサイトに、主にPythonやJavaScriptについての質問を参照しに訪れていれば、最終的には広告欄にPython のWeb開発の仕事が表示されることになります）。これらの機械学習アルゴリズムを設計し、改善し、実装するために、私はデータチームでエンジニアたち（<a href="https://kevinmontrose.com/" rel="nofollow" title="" class="ext-link">Kevin Montrose</a>と<a href="http://jasonpunyon.com/" rel="nofollow" title="" class="ext-link">Jason Punyon</a>と<a href="http://stackoverflow.com/users/178082/nick-larsen" rel="nofollow" title="" class="ext-link">Nick Larsen</a>）と一緒に働いています。（<a href="http://jasonpunyon.com/blog/2015/02/10/providence-architecture-and-performance/" rel="nofollow" title="" class="ext-link">私が参加する前に構築されたシステムのアーキテクチャがもういくつかあります</a>）。例えば、地理的にユーザと近い場所での仕事と、技術的な観点からふさわしいと思われる仕事との間で最適なバランスをとるように作業を進めていきました。また、同じ広告を繰り返し見せるよりも、いろいろなものが表示されることを保証するようにしました。</p><p>このプロセスの多くは、A/Bテストの設計と分析、特にクリック率（CTR）を改善するためにターゲティングアルゴリズムや広告のデザイン、その他の要因を変えることに対する分析を伴うものです。私が思っていたよりも、このプロセスは統計的により興味深いものです。ある時には、私が生体実験を解析するために用いていた手法の新しい使い方を示してくれました。また別のある時には、新しい統計的手法を学ぶきっかけを与えてくれました。事実、<a href="http://varianceexplained.org/r/beta_binomial_baseball/" rel="nofollow" title="" class="ext-link">ベイズ法を野球の打撃統計に適用するという私のシリーズ</a>の多くは、実は、私が広告キャンペーン全体でCTRを分析するために使った手法の、すぐそれと分かるバージョンなのです。</p><p>私はもう研究機関の科学者ではありません。しかし、それは私がデータから結論を導き出すことに興味を持っていないということではありません。何百万もの質問とユーザ、日々の訪問者が共存するソフトウェア開発のエコシステムを概観する視点をStack Overflowは持っています。その全てのデータから何を学べるのでしょう？</p><p>第一に、タグが一緒に使用される方法を見ることにより、自然な技術的クラスタを見つけることができます<sup id="fnref:1"><a href="#fn:1" class="footnote-ref">1</a></sup>。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/07/image1.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/07/image1.png" alt="image" width="2304" height="1920" class="alignleft size-full wp-image-7453"></a></p><p>この手法では、全て手動で注記をつけることなく、自動的にフレームワークとパッケージを高水準言語とこれらが属しているクラスタに分類できます。</p><p>しかし実際に表しているのは、特定のプログラミングの質問に関してタグがどういった組み合わせで付けられているか、だけであって、同じプロジェクトに対して、どのようにタグが使われているかではありません（例えばC#とSQLサーバというタグは同じ質問に常に付けられているわけではありませんが、同じテクノロジスタックのパートとして、よく一緒に付けられています）。そのために、もう1つのデータソースとStack Overflowのキャリアプロフィールを見ることになり、同じ開発者によってどのテクノロジが用いられる傾向があるかを確認することになります。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/07/image2.jpeg"><img src="http://postd.cc/wp/wp-content/uploads/2016/07/image2.jpeg" alt="image" width="1024" height="768" class="alignleft size-full wp-image-7454"></a></p><p>私は”テクノロジ・エコシステム”ではなく、厳密なカテゴリよる、このタグ分けの仕方を気に入っています。この種の理解はプログラミング技術に限られたことではありません。Stack Exchangeネットワークは広大な範囲のQ&amp;Aを含んでいます。このコミュニティが同じアクティブメンバーを持つ傾向があるかを見ることによって、それぞれのサイトがどのように相互に関係付けられるかのネットワークを同じように作り上げることができます。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/07/image2.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/07/image2.png" alt="image" width="1120" height="746" class="alignleft size-full wp-image-7455"></a></p><p>（私が行ったのはネットワークだけではありません。一見して面白いようなものの一例として挙げています）。</p><p>なぜ、このような分析に時間を割くのでしょう？　それは時に機能の拡張に直接役立つからです。例えば定量的にテクノロジのクラスタを理解することで、Providenceのターゲティングを運用する<a href="https://kevinmontrose.com/2015/01/27/providence-machine-learning-at-stack-exchange/" rel="nofollow" title="" class="ext-link">開発者の型モデル</a>を改良することができるのです。他の視点では、ビジネス面で価値があります。私は以前、営業、マーケティング、コミュニティチームと一緒に働き、彼らのデータを読み解き、決定を下す支援をしたことがあります。</p><p>そしてまた本質的に私はこの手の情報を学び、視覚化することにとても興味をそそられます。仕事を楽しくしてくれるものの1つです。ここでの2年目のプランの1つとして、公にされているより多くの分析結果を共有したいと考えています。以前の記事で、<a href="http://varianceexplained.org/r/polarizing-technologies/" rel="nofollow" title="" class="ext-link">どのテクノロジについて意見が割れやすいかということについて触れました</a>が、またすぐに同一の項目について多くの記事をシェアしたいと思っています。</p><p>Rを使ってデータに関する面白い事柄を学ぶのが好きです。しかし私の長期的な目標としては、エンジニアにとってRを用いたデータ分析を簡単にすることです。入社した当初は、社内でRを使ったのは私が初めてでしたが、年が経つにつれ、使うエンジニアが増えてきました。Rはデータを直接やりとりし、興味を引かれる疑問に答えるには<em>実に優れた方法</em>です。（優秀なソフトウェアエンジニアが折れ線グラフを作成するためにExcelを使ったときはがっかりしました）。</p><p>目標に向かって、”1回限り”の分析スクリプトではなくて、あらゆる問題に採用できる、信頼できるツールやフレームワークを構築することに目を向けてきました（<a href="http://multithreaded.stitchfix.com/blog/2016/03/16/engineers-shouldnt-write-etl/" rel="nofollow" title="" class="ext-link">StitchFixにJeff Magnussonが投稿した、これら一般的な挑戦のいくつかについて素晴らしい記事</a>があります）。私のアプローチはRの内部パッケージを構築することで、<a href="https://medium.com/airbnb-engineering/using-r-packages-and-education-to-scale-data-science-at-airbnb-906faa58e12d#.nd6f8ay5i" rel="nofollow" title="" class="ext-link">AirBnbの手法</a>に似ています（もっとも私たちのデータチームは彼らに比べれば、年数も浅く規模も小さいですが）。これらの<strong>内部パッケージ</strong>は、さまざまな安全面とインフラストラクチャーの問題をユーザに目に見える形で提示することを含めて、データベースとinternal APIの分析についてクエリすることができます。</p><p>またRのチュートリアルを構築し、”搭載された”マテリアルを書くことも含まれます。例としては、データベースのクエリに内部の<strong>sqlstackr</strong>パッケージを導入した<a href="http://rpubs.com/dgrtwo/190325" rel="nofollow" title="" class="ext-link">チュートリアルを公表しました</a>。これは<sup id="fnref:2"><a href="#fn:2" class="footnote-ref">2</a></sup> 一般的なdplyr/tidyr/ggplot2の導入を兼務し、兼務することによってdplyrチュートリアルと開発者を結びつけるよりも、より有効であると分かりました（なぜなら、このデータは間違いなく私の同僚たちが興味を持つに違いないからです！　）私の希望としてはデータチームが成熟し、Rについて学ぶエンジニアが増えていくにつれ、このパッケージとガイドのエコシステムが本当の意味で内部のデータサイエンスプラットフォームに拡大していってほしいと思います。</p><p>よく好んで使われるデータサイエンティストの定義があります。</p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p><p>これは好意的に言っているバージョンではありますが、悩ましいのは逆もしかりであることです。大学院の<a href="http://www.genomine.org/" rel="nofollow" title="" class="ext-link">私の研究室</a>では、私よりも他の人たちのほうが統計について知っていました。そして新しい職場では、私よりも同僚たちのほうがソフトウェアエンジニアリングについて知っています。では、どのように移行してきたのでしょうか。</p><p><a href="https://zedshaw.com/archive/programmers-need-to-learn-statistics-or-i-will-kill-them-all/" rel="nofollow" title="" class="ext-link">“Programmers Need To Learn Statistics”（プログラマは統計学を学ぶべき）という主張については、仰々しい記事が山ほど出ています</a>。私が、同僚よりも統計学的な経験とトレーニングを積んでいることは確かです（またとりあえず社内初の博士でもあります）。しかし、そのことが仕事に支障を及ぼしていると感じたことはありません。</p><p>ひとつの理由は、多くの重要な分野において、プログラマと統計学のギャップは埋まりつつあることに気付いてきたことです。これまでに出会ったA/Bテストを解析する開発者たちは、既に、効果量と信頼区間の重要性や、p値ハッキングと複数仮説に基づく検定の危険性にも気付いていました。特にデータチームは、実施基準を普及させようと努力していました。慣れるのにより時間がかかったギャップは、「線形回帰よりもポアソン回帰を使う」、あるいは「対数スケールを使うべき時を知る」といった分野に多かったようです。</p><p>さらに重要なのは、私が統計学に関する件を持ち出すたび、開発者たちが非常に熱心に耳を傾け、学ぼうとしているのを知ったことです。今のところ、職場において信頼関係を築き上げられていると感じています。この経験は、開発者を過剰な自信だけで突っ走るものとして描く<a href="https://zedshaw.com/archive/programmers-need-to-learn-statistics-or-i-will-kill-them-all/" rel="nofollow" title="" class="ext-link">“Programmers Need To Learn Statistics”</a>のような記事とは相いれない例のひとつです。この点において、私たちのエンジニアリング部門が例外的にうまくいっているにすぎない可能性もありますが（他社からひどい話をたくさん聞いてきました）、統計の重要性が広く認識されるにつれ、ソフトウェア開発業界の姿勢がこの6年間で変わったのだ、と言うこともできるでしょう。</p><p>他者から統計について学べたのは、大学院だからこそできた得難いことでした。私は自分よりも知識のある人たちに囲まれており、研究室のミーティングやセミナーでは余りあるほど有用な統計理論や方法論に触れることができました。また、もし間違いを犯しても誰かが助けてくれるという安心感もありました。現在は、統計学を学びたければ自発的に行わねばならず、また自身の仕事に細心の注意を払う必要があります。例えばもしレポートで不適切な統計的仮説を使ったとしても、誰からも指摘されない可能性が高いからです。</p><p>これまでずっとプログラミングの実践に関心を持ち続け、長期に渡ってGitHubを使い、PythonやRなどのオープンソースプロジェクトに寄与してきましたが、テック企業への参加はまさにある種のシフトでした。私は物心ついて以来Macユーザで、この数年はRに全ての時間を捧げてきました。Stack OverflowはMicrosoftのテクノロジ、特にC#、ASP.NET、そしてSQL Serverで構築されていて、私が加わるまでは社内にRの経験者はいませんでした。<a href="http://varianceexplained.org/r/polarizing-technologies/" rel="nofollow" title="" class="ext-link">言語戦争のある一面にこだわるわけではありませんが</a>、その変化が自分にとってどのような意味を持つのか不安でした。</p><p>しかしこれもまた大した問題ではないのが明白になり、さらにMacとRだけで会社に多大なる貢献ができることも分かってきました。<a href="https://github.com/imanuelcostigan/RSQLServer" rel="nofollow" title="" class="ext-link">RSQLServer</a>と<a href="http://jtds.sourceforge.net/index.html" rel="nofollow" title="" class="ext-link">jTDSドライバ</a>の開発者に負うところも大きいです。彼らのお陰で、私は容易にRStudioからデータベースを照会することができます。Visual Studioを立ち上げたParallels Desktopのウィンドウを常に開いていますが、ほとんどの場合、その必要もない状況です。時々、コードをプッシュすることもありますが（たいてい広告ターゲットの実験に関するもの）、特に摩擦の原因にはなっていません。フロントエンドWebデザインとサイト信頼性エンジニアリングを含め、ソフトウェアエンジニアリングにおいて同僚に比べると<em>非常に</em>知識が限られている分野はたくさんありますが、多くの企業と同様、結局はそれらの懸案に関わることはありません。</p><p><strong>生物学の研究をやめたこと。</strong>恐らく、これが最も気をもんだ変化と言えるでしょう。8年間（学部時代のほとんどの時間を含む）、私は生物学を中心に研究してきたのです。正直に言うと、数カ月間を費やして他の問題に取り組んで初めて、<strong>自分が決して生物学の問いにそこまで熱意を感じていなかった</strong>ことに気付いたのです。</p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script><br>
<em>訳：<br>
「<a href="https://twitter.com/drob" rel="nofollow" title="" class="ext-link">@drob</a> <a href="https://twitter.com/JennyBryan" rel="nofollow" title="" class="ext-link">@JennyBryan</a> <a href="https://twitter.com/noamross" rel="nofollow" title="" class="ext-link">@noamross</a> <a href="https://twitter.com/hspter" rel="nofollow" title="" class="ext-link">@hspter</a> 6日後に、僕もバイオの次のフェーズに加わるよ！」<br>
「<a href="https://twitter.com/daattali" rel="nofollow" title="" class="ext-link">@daattali</a> <a href="https://twitter.com/JennyBryan" rel="nofollow" title="" class="ext-link">@JennyBryan</a> <a href="https://twitter.com/noamross" rel="nofollow" title="" class="ext-link">@noamross</a> <a href="https://twitter.com/hspter" rel="nofollow" title="" class="ext-link">@hspter</a><br>
僕『かなり妙でしかも長い夢を見たんだ。夢の中で、僕はRNAについて考えていた』<br>
妻『それ夢じゃないわよ、博士課程のことでしょ』」</em></p><p>生物学を勉強すると、コンピュータや統計学についての課題がたくさん出てきます。そして、バイオインフォマティクスという分野では面白い動きがたくさん起こっているんです。しかし生物学のデータの分析をやめると、結局は自分自身を解析するための知識や興味が無かったのだ、ということになってしまうでしょう。例えば、刺激への反応として100個の遺伝子の発現が変化したら…といった解析です。（何年も酵母のゲノムについて研究した後でさえ、遺伝子名で認識できる遺伝子は、手で数えられる程しかありません）対して、私は長年のStack Overflowユーザであり、ソフトウェア開発のエコシステムの状況にも、広く興味を持っています。ですから上述したネットワーク図のように、分析結果を見れば意味のあるものかどうかすぐに分かります。自分が本当に興味を持っているデータを扱うということは、これまでと<em>違う</em>と感じます。</p><p><strong>文章を書くこと：</strong>これはその価値に今まで気付いていませんでしたが、私の武器です。学位を取るために、たくさんの文章を書きました。主に学術誌の論文や博士論文です。そして実は、その手のフォーマルな文章を書くことを<em>かなり大げさ</em>に感じます。この1年間、私の書く文章は内部向けのレポートや書類やブログ投稿の記事でしたので、カジュアルな口語体で書くようになりました。（どれでもいいのでこのブログ記事のどれかと、<a href="http://arks.princeton.edu/ark:/88435/dsp01hd76s238c" rel="nofollow" title="" class="ext-link">私の博士論文</a>の文章を比べてみてください）発表を目指している研究がいくつかあるのに、この理由で、学術論文のための文章を書くマインドセットに戻るのが<em>とても難しい</em>です。</p><p>私のユーモアのセンスはちょっと変わっています。私のツイートには架空の「Dev」がよく登場して道化役をしてくれます。エンジニアの文化や私の知らない文化を風刺しているんです。</p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p><p>分からない方のために言っておきますが、この一連のツイートは露骨なウソなんです。まず初めに、こういったやり取りは実際には起こっていません。しかしもっと重要なのは、ツイートの登場人物は、私の同僚の開発者を象徴していることは全くないということです。この会社の人たちはみんな、頭が良くて有能で思いやりもあります。これは、この職場の気に入っている部分の一つです。</p><p>職場のいいところをリストにすると長くなります（きっと間違いなく、データチームと広告サーバチームの全メンバーが入ります）ので、少しだけ例を挙げてみます。<a href="http://jasonpunyon.com/" rel="nofollow" title="" class="ext-link">Jason Punyon</a>は、私のベータ分布についてのブログ記事を最初に見つけた人で、開発者です。Jasonは優秀なエンジニアで、この会社にいる6年間で培った製品知識は膨大な量で、しかも有益です。私が本当に感銘を受けたのは、データを大切に扱うことと、ユーザを大切に扱うことを両立しているところです。</p><p>数カ月前、私はある実験をしました。求人広告に載っている給与額と、実際の報酬額とを比較し（この実験については、また今度別のブログ記事に書きます）、社内で結果を共有しました。私はただ共有することがうれしかったんです。けれどJasonは結果を受けて、アクションを起こしました。雇う側の人たちみんな（我が社も含みます）に、給料の情報を提供するよう求め始めたのです。彼は、自分自身の選択や会社の意思決定のための材料として、データを真剣に見ています。また、開発者たちのことを、人としても自社製品のユーザとしても大切に思っているので、待遇の情報を前もって知る権利があると考えたのです。私は彼と同じ会社で働けることを誇りに思います。</p><p>私が感銘を受けた人は、エンジニア部門以外にもたくさんいます。ですから、<a href="http://meta.stackexchange.com/questions/99338/who-are-the-community-team-and-what-do-they-do" rel="nofollow" title="" class="ext-link">コミュニティチーム</a>と一緒に仕事をするのは特にうれしいです。例えば、<a href="https://blog.stackoverflow.com/2015/06/pivoting-into-a-new-career-please-welcome-taryn-pratt-bluefooted-community-manager/" rel="nofollow" title="" class="ext-link">Taryn Pratt</a>（別名<a href="http://stackoverflow.com/users/426671/bluefeet" rel="nofollow" title="" class="ext-link">bluefeet</a>）は、私より数カ月早くチームに参加しました。私はここで仕事をする前、Stack Overflowのコミュニティに回答を投稿していましたが、Tarynの貢献とは<em>比べ物になりません</em>。彼女は、長年熱心に回答し、モデレータも務めました。そして、その間に、3,500以上の質問に答え、22,000を超えるhelpfulのフラグを立てたのです。これは驚くべき数です。</p><p>Tarynは、ここでは開発者ではありませんが、素晴らしい技術経験とスキルを持っています（コミュニティのマネージャのほとんどがそうです）。そして、彼女は、Stack Overflowのコミュニティで、こういったスキル、特にSQL関連の質問によく回答しています。その中で、彼女は最近Rを学び始めました。ですから、そうしたQ&amp;A活動に対して統計的かつデータ主導型のメソッドを適用して、Q&amp;A活動のパターン解析やその理解もできるはずです。彼女やチームの他のメンバたちの力によって、データサイエンスがコミュニティで役立つ様子を見ると、とても興奮します。</p><p>私がここで働き始めて間もなく、Jasonのツイートの裏で、社内で私を雇うと良いのではという話が思い付きで始まったと聞きました。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/07/d_4.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/07/d_4.png" alt="d_4" width="530" height="168" class="alignleft size-full wp-image-7461"></a><br>
<em>注釈：おっと、こいつを雇ったらどうだろう？</em></p><p>今、この仕事に携われていることを本当にラッキーだと思っています。そういう事情を知ると、さらにうれしく感じます。私の就職は、恐らく、予想だにしなかった偶然の産物どころではなく、その経験からアドバイスできるようなことは見つかりません。しかし、大学院生にアドバイスを送るとしたら、私が思い付くのはこれです。<strong>成果の公開は、時間の無駄ではない。</strong></p><p>大学院在学中、私は自分の論文を発表するのに必死でした。学位を取るのに必要なことでしたし、私のキャリアを左右する唯一のものだと思い込んでいたからです。結局、私は、自分の専門分野で博士号を取るために、大体平均的な数の論文を発表しました（<a href="http://varianceexplained.org/about/" rel="nofollow" title="" class="ext-link">ここ</a>で確認していただけます）。私としてはそれで満足でしたが、正直言いますと、発表数がもっと少なかったり、全くなかったりしたら、私の人生はどうなっていたのか分からず、別物になっていたことでしょう。しかし、確かに言えることは、ベータ分布についての投稿をしていなければ、私の人生は違っていたでしょうし、Stack Overflowで回答することがなければ、もっと違う人生になっていたでしょう。</p><p>学術論文は、研究成果を発表する1つの方法です。しかし、それが唯一ではありません。というのも、学術論文は査読に時間がかかり、提出時に”完璧である”ことが求められます。学術論文が研究成果を公にする<em>唯一の</em>方法とする態度は危険であり、だからこそ、優れた学術研究の多くが長年放置されたり、<em>論文とは言えない</em>として（恐らく私のブログ記事は全て、学術論文としての提出の基準を満たしていないでしょう）、完全に抹殺されたりしているのだと思います。ですから、私が言いたいのは、何か面白いものを持っているけれども論文とは言えない場合、ブログの投稿やStack Overflowでの回答、あるいはGitHubのオープンソースプロジェクトとして書けばいいんです。<em>とにかく、公開してください。</em></p><p>冒頭に言ったように、私は、ベータ分布に関する質問に答えておいて本当に良かったと思います。それによって製品に関わる作業をする機会を得て、私のプログラミングの知識が増え、生産性が向上しました。製品を構築する人々と一緒に作業をしますが、彼らからは、今日までずっと感銘を受けています。ここでの1年は、私が望める限りの最高の仕事でした。</p><p>いや、ほぼ最高の。</p><p><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></p>
