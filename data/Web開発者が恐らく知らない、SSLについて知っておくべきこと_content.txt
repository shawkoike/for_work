What web developers should know about SSL but probably don't. （2015-12-21） by Mike MacCana
この記事は、高速なEV SSLプロバイダであるCertSimpleによるものです。2015年、Web開発者は以前よりもSSLに関する理解を深めています。そうしたWeb開発者たちがHacker Newsを読むなら知っておくべきことを以下に挙げてみます。その他はどうでしょうか。我々の顧客から寄せられる最も多い質問について、回答を紹介していきましょう。SSL Labsには表示されないため、これが最も多く出てきます。例えばChromeで次のようなメッセージが出されるのです。“接続は古い暗号スイートにより暗号化されています”この場合は、WebサーバのconfigファイルにCBCではなくGCMを設定する必要があります。これは非常に簡単です。ほとんどのWebサーバに最適な設定をMozilla SSL Config Generatorが教えてくれます。configファイルをアップデートし、Webサーバを再起動すれば、問題は解決されるでしょう。以下のことを行った場合を考えてみましょう。こうして、異なる鍵ペアに属しながら同じ名前がついた大量のファイルを持つことになります。すると、Webサーバが何か以下のような内容のメッセージを発します。“エラー：公開鍵証明書と秘密鍵が合致しません”これは、あなたが複数の鍵ペアを作り、そのうちのある一つの鍵ペアの秘密鍵を、また別の鍵ペアの証明書と合わせようとしている、ということを意味しているのです。証明書ファイルが秘密鍵と一致するかどうかを確認するには、modulusをチェックすればよいでしょう。modulusが同じであれば、秘密鍵と証明書が一致するということになります。つまり、それらがペアになっているということです。modulusが異なっていれば、ファイルはペアではなく、それぞれ別に作られたものということです。ジオロケーションを使いますか？　WebRTCは？　最近のブラウザでは、セキュリティに敏感なHTML5の機能のためSSLを必要としています。ローカルホストに無効なhttps://を設定している場合、SSLの警告を介してクリックばかりすることに大変な時間を費やすことになるでしょう。でも、そんなことをしなくてもよくなる、いいニュースがあります。お使いのMacに信頼できるローカルホストをセットアップするだけなら数分でできます。1024ビットのRSAは安全でないと考えられています。あなたが見るほぼ全てのWebサイトは2048ビットのRSAを使用しています。では、なぜもうひと頑張りして4096ビットのRSA証明書を取得しないのでしょうか。その答えは、余計な負荷がかかるため、ブラウザとあなたのサイト間でのSSLの応答確認が遅くなることがあるからです。この計測は、Chromeのデベロッパーツールを使えば簡単に行うことができます。さらに、Geoffrey ThomasがHacker Newsで指摘しているように、あなたの中間CA証明書は2048ビットのRSA証明書である可能性が高いです。「2048ビットのRSAは、十分に暗号強度が高いとはいえない」と考えるならば、2048ビットの中間CA証明書も攻撃され、偽の証明書を発行するために利用される可能性があります（HPKPは別として）。暗号強度を懸念するならば、RSAではなくECDSA証明書を試してみてください。ECDSAはRSAよりもCPU使用率を抑えながら、非常に高い強度を持っています。256ビットのECCが3072ビットのRSAと同等なのです。ECCのサポートについて見ても、2015年にはWindows Vista以降、OS X 10.9、Android 3、iOS 7のブラウザがECCに対応しているという、驚くほど良いものです。問題としては、残念ながらHeroku、AWS CloudFrontがまだECCに対応していません。PKIとSSLに関しては多くのファイル形式がありますが、今日、ほとんどのサーバソフトウェアは以下の2つだけを使用しています。PEMPKCS12以下の方法により、これらの形式は互いに簡単に変換することができます。
