<p><a href="http://colah.github.io/posts/2015-09-Visual-Information/" rel="nofollow" title="" class="ext-link">Visual Information Theory</a> （2015-10-14） by <a href="http://colah.github.io/about.html" rel="nofollow" title="" class="ext-link">Christopher Olah</a></p><p><script type="text/x-mathjax-config">MathJax.Hub.Config({ tex2jax: { inlineMath: [['$','$'], ['\\(','\\)'],['\\[','\\]']], processEscapes: true  },  CommonHTML: { matchFontHeight: false }});</script><br>
<script async src="https://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS_CHTML"></script></p><p>情報理論の非直感的な点として、小数のビットがあるということが挙げられます。少しおかしな気もしますが、例えば0.5ビットの存在にどんな意味があるのでしょうか。</p><p>簡単な答えは次のとおりです。多くの場合、私たちが重視するのは特定のメッセージの長さではなくメッセージの平均的な長さです。送信メッセージの半分が1ビットで残りの半分が2ビットの場合、平均すると1.5ビットになります。こうして見ると、平均値が小数を含むのはおかしなことでも何でもありません。</p><p>しかし実際には、その答えは問題の核心を避けています。多くの場合、コードワードの最適な長さは小数ですが、それはどういうことなのでしょうか。</p><p>具体的に説明します。あるイベント<span class="math">\(a\)</span>が71％の確率で発生し、<span class="math">\(b\)</span>が29％の確率で発生するような確率分布を考えてみてください。</p><p><img src="http://colah.github.io/posts/2015-09-Visual-Information/img/halfbit-ab.png" alt="" data-disqus-identifier="/posts/2015-09-Visual-Information/disqussion-199"><br>
<span class="math">\(a\)</span>を表すのに最適なコードは0.5ビットで、<span class="math">\(b\)</span>は1.7ビットとなります。これらのコードワードを単一で送信するのは単純に無理な話で、送る場合はビットを整数に丸めて平均1ビットにしなければなりません。</p><p>しかし、複数のメッセージを同時に送る場合、もっと効率をよくすることが可能です。この分布から2つのイベントを送ることを考えてみましょう。個々のイベントを別々に送ると2ビットが必要になりますが、もっといい方法はあるでしょうか。</p><p><img src="http://colah.github.io/posts/2015-09-Visual-Information/img/halfbit-ab2.png" alt="" data-disqus-identifier="/posts/2015-09-Visual-Information/disqussion-200"><br>
送る頻度は<span class="math">\(aa\)</span>が50％、<span class="math">\(ab\)</span>と<span class="math">\(ba\)</span>が21％、そして<span class="math">\(bb\)</span>が8％です。ここでも、理想的なコードは大半が小数のビットです。</p><p><img src="http://colah.github.io/posts/2015-09-Visual-Information/img/halfbit-ab-idealcode.png" alt="" data-disqus-identifier="/posts/2015-09-Visual-Information/disqussion-201"><br>
コードワード長を丸めると、次のようになります。</p><p><img src="http://colah.github.io/posts/2015-09-Visual-Information/img/halfbit-ab-code.png" alt="" data-disqus-identifier="/posts/2015-09-Visual-Information/disqussion-202"><br>
コードの平均メッセージ長は1.8ビットです。個別に送った時の2ビットよりも少ない結果となりました。別の見方で考えると、それぞれのイベントで平均して0.9ビットを送っていることになります。もし同時に送るイベント数が増えれば、ビット数はまだ小さくなるでしょう。<span class="math">\(n\)</span>が無限大に近づくほど、コードを丸めることに起因するオーバーヘッドはゼロに近づき、コードワード当たりのビット数はエントロピーに近づきます。</p><p>さらに、<span class="math">\(a\)</span>の理想的なコードワード長は0.5ビットで、<span class="math">\(aa\)</span>の理想的なコードワード長は1ビットでした。理想的なコードワードは小数のビットであっても加算されます。つまり、多くのイベントを同時に送れば、長さは増えるのです。</p><p>小数の情報ビットがあるということには、たとえ実際のコードが整数しか扱えないとしても、現実的な意味があることが分かっていただけたでしょうか。</p><p>（実際に一般で使われているのは、異なる領域で効果的な特定の符号スキームです。<a href="https://ja.wikipedia.org/wiki/%E3%83%8F%E3%83%95%E3%83%9E%E3%83%B3%E7%AC%A6%E5%8F%B7" rel="nofollow" title="" class="ext-link">ハフマン符号</a>は、基本的にここで述べたのと同じタイプのコードですが、小数ビットの扱いに長けてはおらず、エントロピー限界に近づくためには、上で行ったようにシンボルをグループ化するか、もっと複雑なトリックを使わなくてはなりません。これに対して<a href="https://ja.wikipedia.org/wiki/%E7%AE%97%E8%A1%93%E7%AC%A6%E5%8F%B7" rel="nofollow" title="" class="ext-link">算術符号</a>は小数ビットをうまく扱い、徐々に最適になるようにします。）</p><p>最小ビットで送りたいと思う場合、上記の考えは基本的なものです。データの圧縮を気に掛けるなら、情報理論はその問題の核心に迫ることができますし、それにより基礎的で正しい抽象化が得られます。しかし、そうでない場合、つまりデータの圧縮を気にするとかでない場合―情報理論とは好奇心以上のものにはならないのでしょうか？</p><p>情報理論を元にしたアイデアは、例えば機械学習、量子力学、遺伝学、熱力学、さらにはギャンブルまで、多くの文脈において見ることができます。しかし、これらの分野の人たちは、通常、情報を圧縮したいという理由で情報理論に関心を持つことはありません。彼らが情報理論に関心を持つのは、情報理論が彼らの活動分野に大きな関係を持っているからです。量子もつれは、エントロピーで説明することができます。<sup id="fnref:9"><a href="#fn:9" class="footnote-ref">1</a></sup>統計力学と熱力学の多くの結果は、未知のことについて最大エントロピーを仮定することによって導き出すことが可能です。<sup id="fnref:10"><a href="#fn:10" class="footnote-ref">2</a></sup>ギャンブラーの勝敗はカルバック・ライブラー情報量、特に反復的な想定でのケースに直接的な関係があります。<sup id="fnref:11"><a href="#fn:11" class="footnote-ref">3</a></sup></p><p>こうした多くの分野で活用されている理由は、私たちが表現したいと思う多くの事物に対して、情報理論が具体的で原理的な形式を提供しているからです。情報理論によって、私たちは「不確定性」「2つの信念がどのように異なっているか」「ある問いに対する一つの答えにより、別の問いについて何がわかるか」などを測定・表現する方法を得ることができるのです。これらはつまり、確率の散漫さや確率分布間の距離、2つの変数の依存度などです。こうしたことを実現できる方法が他にあるでしょうか。もちろんあることはあるでしょう。しかし情報理論の考え方は明快で、その性質は良好であり原則に基づいた起源を有しています。そして、そこから導き出されるものは、ある場合には私たちがまさに関心を持っていたことであり、別の場合には、この乱雑な世界の中での有効な代理の尺度なのです。</p><p>私の一番得意な分野は機械学習なので、それに関連して少しお話します。機械学習における一般的なタスクは分類です。例えば写真を見て犬か猫を予測するとしましょう。この予測において、私たちのモデルが「画像は80％の割合で犬、20％の割合で猫」と答えたとします。正しいのは犬だったとして、80％の確率とはどの程度、いい答えだったのでしょうか。また、85％と答えていた場合、それは80％の時に比べどの程度、優れていたのでしょうか。</p><p>この問題は非常に重要です。なぜならモデルを最適化するためには、その善し悪しを示す見解が必要だからです。では、一体何を最適化すべきなのでしょうか。正しい答えは、そのモデルが使われる状況（最多の推測が正しければいいのか、正確な答えの確率が重要なのか、明確な間違いがどれほど好ましくないのか）に大きく依存するため1つではありません。あるいはほとんどの場合、正しい答えさえ知ることはできないでしょう。というのも対象の関心事を形式化するために、そのモデルがどのくらい適切な形で使われるかを私たちは知ることができないからです。その結果、交差エントロピーこそが一番の関心事になるような状況が生じてきますが、必ずしもそういった状況だけとは限りません。もっと言えば、何が関心事であるかを確実に対象化できないことも多々あり、そういった場合にも交差エントロピーは代理の尺度になります。<sup id="fnref:12"><a href="#fn:12" class="footnote-ref">4</a></sup></p><p>情報は、私たちが世界を考えるための新しい強力なフレームワークを提供してくれます。それが時には直面した問題を完全に解決することもあるし、完全ではないにしろ、有効に機能する時もあるでしょう。この記事では、情報理論の表面を軽くなぞっただけで、主要なテーマである誤り訂正符号などについては触れていませんが、情報理論というものが、特に身構える必要のない素晴らしい題材であることが分かっていただければ幸いです。</p><p><em>今後、記事を書く時の参考にさせていただきたいので、ぜひ<a href="https://docs.google.com/forms/d/1zaMvi-yL04GEtS7RnGplZ9TDGO5965GLlDdd50y2zNI/viewform?usp=send_form" rel="nofollow" title="" class="ext-link">フィードバックのフォーム</a>に記入してください。</em></p><p>Claude Shannonが書いた情報理論についての最初の論文、「<a href="http://worrydream.com/refs/Shannon%20-%20A%20Mathematical%20Theory%20of%20Communication.pdf" rel="nofollow" title="" class="ext-link">A Mathematical Theory of Communication（通信の数学的理論）</a>」は非常に分かりやすいです（これは初期の情報理論の論文における反復パターンのようです。時代なのかページ数の不足なのか、それともベル研究所の文化なのかは分かりません）。</p><p>Cover &amp; Thomasの「Elements of Information Theory（情報理論要素）」は標準的な参考文献で、私には非常に参考になりました。</p><p>この記事に対して多くの時間を割いて信じられないほど詳細かつ広範なコメントを提供してくれた<a href="https://github.com/danmane" rel="nofollow" title="" class="ext-link">Dan Mané</a>、<a href="https://www.cs.cmu.edu/~dga/" rel="nofollow" title="" class="ext-link">David Andersen</a>、<a href="http://obsessionwithregression.blogspot.com/" rel="nofollow" title="" class="ext-link">Emma Pierson</a>、Dario Amodeiに感謝の意を表します。同じく<a href="http://michaelnielsen.org/" rel="nofollow" title="" class="ext-link">Michael Nielsen</a>、<a href="http://research.google.com/pubs/GregCorrado.html" rel="nofollow" title="" class="ext-link">Greg Corrado</a>、<a href="http://www.iro.umontreal.ca/~bengioy/yoshua_en/index.html" rel="nofollow" title="" class="ext-link">Yoshua Bengio</a>、<a href="https://aaroncourville.wordpress.com/" rel="nofollow" title="" class="ext-link">Aaron Courville</a>、<a href="http://www.nickbeckstead.com/" rel="nofollow" title="" class="ext-link">Nick Beckstead</a>、<a href="http://research.google.com/pubs/JonathonShlens.html" rel="nofollow" title="" class="ext-link">Jon Shlens</a>、Andrew Dai、<a href="http://research.google.com/pubs/ChristianHoward.html" rel="nofollow" title="" class="ext-link">Christian Howard</a>、<a href="http://www.bewitched.com/" rel="nofollow" title="" class="ext-link">Martin Wattenberg</a>のコメントにも感謝します。</p><p>この記事のアイデアは、私が最初に担当したニューラルネットワークの2つのセミナーシリーズが試験台として機能することでより強固なものとなりました。</p><p>最後に誤字脱字を指摘してくださった読者の皆さん、特にConnor Zwick、Kai Arulkumaran、Jonathan Heusser、Otavio Good、そして匿名でコメントをくれた方に感謝します。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/10/d_4pics.jpg"><img src="http://postd.cc/wp/wp-content/uploads/2016/10/d_4pics.jpg" alt="d_4pics" width="1108" height="355" class="alignleft size-full wp-image-8291"></a><br>
<em>注釈：<br>
<a href="http://colah.github.io/posts/2014-07-Understanding-Convolutions/" rel="nofollow" title="" class="ext-link">Understanding Convolutions（畳み込みを理解する）</a><br>
<a href="http://colah.github.io/posts/2014-12-Groups-Convolution/" rel="nofollow" title="" class="ext-link">Groups &amp; Group Convolutions（グループとグループの畳み込み）</a><br>
<a href="http://colah.github.io/posts/2014-03-NN-Manifolds-Topology/" rel="nofollow" title="" class="ext-link">Neural Networks, Manifolds, and Topology（ニューラルネットワーク、マニホールド、およびトポロジー）</a><br>
<a href="http://colah.github.io/posts/2015-01-Visualizing-Representations/" rel="nofollow" title="" class="ext-link">Visualizing Representations（表現の可視化）<br>
Deep Learning and Human Beings（深いレベルの学習と人間）</a></em></p>
