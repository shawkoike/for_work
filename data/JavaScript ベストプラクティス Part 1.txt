<p><a href="http://www.thinkful.com/learn/javascript-best-practices-1/#Allow-for-Configuration-and-Translation" rel="nofollow" title="" class="ext-link">Javascript BEST PRACTICES PART 1</a> (2015-1-9) by <a href="http://www.thinkful.com/" rel="nofollow" title="" class="ext-link">Thinkful</a></p><p>ベストプラクティス パート1</p><p>2つのパートに分けてお届けする「ベストプラクティス」のパート1では、MozillaのWebエバンジェリストである<a href="http://www.slideshare.net/cheilmann/javascript-best-practices-1041724" rel="nofollow" title="" class="ext-link">Christian Heilmannが提供する人気のスライドショー</a>から内容を抜粋しています。JavaScriptにはひどく扱いにくい特徴がいくつかありますが、それはこれまで以上にソフトウェア開発において重要になっています。この「ベストプラクティス」ではより読みやすく、効率の良いコードを書く手助けとなるサンプルコードやその使用例を紹介していきます。</p><p>もしWeb開発についてもっと学びたいと思うのであれば、私たちが提供している<a href="http://wow.thinkful.com/courses/learn-web-development-online/?utm_source=tf_js_best_practices_guide_1&amp;utm_medium=tf_course_intro&amp;utm_campaign=tf_guides" rel="nofollow" title="" class="ext-link">フロントエンドWeb開発コース</a>、もしくは<a href="http://wow.thinkful.com/courses/learn-angularjs-online/?utm_source=tf_js_best_practices_guide_1&amp;utm_medium=tf_course_intro&amp;utm_campaign=tf_guides" rel="nofollow" title="" class="ext-link">AngularJSコース</a>を覗いてみてください。</p><p>変数名や関数名は簡単で理解しやすく短いものにしましょう。</p><p>悪い変数名1：</p><p>悪い変数名2：</p><p>変数名や関数名で値を説明しないようにしましょう。</p><p>国によっては理解されない変数名：</p><p>どこの国でも理解される変数名：</p><p>コードは物語です。簡単についていける筋書きを書きましょう。</p><p>グローバル変数の使用はあまり好ましくありません。</p><p>理由： 自分が書いたページの後に別のJavaScriptが追加されることで、コードが上書きされる危険がある。</p><p>回避策： クロージャやモジュールパターンを使用する。</p><p>発生する問題： 全ての変数をグローバル変数とすることでどこからでもアクセス可能になる。そのためアクセスが抑制されず、ページ内に書いたあらゆるコードが上書き可能になる。</p><p>オブジェクトリテラル： 全てが抑制され、オブジェクト名を通してのみアクセスすることができる。</p><p>発生する問題： モジュール名が繰り返されるので、長くてうんざりするようなコードになる。</p><p>モジュールパターン： グローバル変数とそうでない変数を明確にする必要があり、それらの構文の切り替えを行う。</p><p>発生する問題： モジュール名が繰り返されるので、違う構文を内部の関数で使用することになる。</p><p>リビーリングモジュールパターン： 矛盾のない構文を保ち、グローバル変数とうまく組み合わせて使用する。</p><p>ブラウザはJavaScriptパーサに対して、とても適応性が高いものになっています。しかし、あいまいなコーディングスタイルでは別の環境に変更したり、別の開発者に渡したりする際に痛い目を見ることでしょう。正確なコードは安全なコードです。</p><p>コードが正確であるか確認： <a href="http://www.jslint.com/" rel="nofollow" title="" class="ext-link">http://www.jslint.com/</a></p><p>必要だと思われるコメントだけを書き、経緯を全て伝える必要はありません。</p><p>コメントを入れる際に//は使わないようにしましょう。/**/を使用した方が、改行を削除した場合でもエラーが発生しないので、より安全です。</p><p>コメントを使ってデバッグをする際のちょっとした技を紹介します。</p><p>コメントはHTMLであってもJavaScriptであっても、エンドユーザが見るものではありません。<br>
開発に使用するコードは開発者のみが必要とするものと知りましょう。</p><p>JavaScriptは、計算、変換、外部ソース（Ajax）へのアクセス、そしてインターフェイス（イベントハンドラ）の振る舞いを定義するのに効率の良いスクリプト言語です。これら以外の機能を使用する場合は、それに特化した技術を使用するべきです。</p><p>例：</p><p>フィールドが空欄の場合はクラスを“mandatory”と定義し、そのフィールド全体を赤枠で囲う。</p><p>2か月もすると、すべてのスタイルは、会社の新しいスタイルガイドに沿わなければならなくなります。例えば、ボーダーは使用しない、エラーは要素の横にアイコンとしてアラートを表示するなどです。</p><p>見た目の感じでJavaScriptのコードを変更すべきではありません。</p><p>CSSのインヘリタンスを使うことで、たくさんの要素を繰り返さなくてもよくなります。</p><p>ショートカット記号を使わない場合</p><p>ショートカット記号を使った場合</p><p>ショートカット記号を使わない場合</p><p>ショートカット記号を使った場合</p><p>ショートカット記号を使わない場合</p><p>ショートカット記号を使った場合</p><p>1つの関数であらゆることができれば、こんなに簡単なことはないですし、魅力的でもあります。しかし、機能を拡張しようとした場合、いくつかの関数に同じ作業をしなくてはならないことに気付くことでしょう。</p><p>これを防ぐには、あらゆる状況に対応できる関数を書くのではなく、特定のタスクを実行するヘルパー関数を小分けにして書く事です。</p><p>そうすることで、後から主要機能を拡張するAPIを作成するためにリビーリングモジュールパターンを使う際、これらの関数を提示することもできるのです。</p><p>良いコードというのは、主要部分を書き換えることなく簡単に構築できるコードです。</p><p>DOMの生成は遅いうえに高額でもあります。</p><p>JavaScriptには依存しているが、JavaScriptが無効の時に得ることができる要素は、ユーザにとって役に立ちません。</p><p>このコードには、ラベルやCSSクラス、ID、プリセットが含まれます。</p><p>これらをコンフィギュレーションオブジェクトに置いたり、パブリックしたりすることによって、管理がたやすくなり、カスタマイズが可能となります。</p><p>例：</p><p>このセクションでは、最良な変数名の付け方やコメントの仕方、そしてコード管理に関するヒントを紹介してきました。パート2では、ループやネスティングなどの有効的な使い方を紹介していきます。</p><p><a href="http://www.thinkful.com/learn/javascript-best-practices-2/" rel="nofollow" title="" class="ext-link">JavaScript ベストプラクティス パート2</a></p><p>このガイドを気に入っていただけたようであれば、<a href="http://www.thinkful.com/learn/intro-to-jquery?utm_source=tf_js_best_practices_guide_1&amp;utm_medium=tf_relevant_guide&amp;utm_campaign=tf_guides" rel="nofollow" title="" class="ext-link">jQuery入門ガイド</a>もご覧になってみてください。また、Web開発についてもっと学びたいようであれば、<a href="http://wow.thinkful.com/courses/learn-web-development-online/?utm_source=tf_js_best_practices_guide_1&amp;utm_medium=tf_course_intro&amp;utm_campaign=tf_guides" rel="nofollow" title="" class="ext-link">フロントエンドWeb開発コース</a>や<a href="http://wow.thinkful.com/courses/learn-angularjs-online/?utm_source=tf_js_best_practices_guide_1&amp;utm_medium=tf_course_intro&amp;utm_campaign=tf_guides" rel="nofollow" title="" class="ext-link">AngularJS コース</a>のオンラインコースを受講されることをお勧めします。</p>
