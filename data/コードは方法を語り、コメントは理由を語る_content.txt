Code Tells You How, Comments Tell You Why （2006-12-18） by Jeff Atwood私はコードにコメントを書く際の哲学について書いた投稿の中で、必要のないコメントこそが、最も優れたコメントだと書きました。この点についてもう少し説明させてください。まず、コードはコメントに頼らなくても理解できるようにできるだけ簡潔にする必要があります。コードだけではどうしても分かりにくい箇所のみ、コメントを書き込むようにしましょう。これを念頭に置いて作業することで、読者を常に意識しながら、コードが書けるようになります。1985年に出版された名著『計算機プログラムの構造と解釈』の、「第一版への前文」にも、この点について単刀直入に書かれています。Donald E. Knuthも1984年に出版したエッセー『文芸的プログラミング』（PDF）の中で、同様のことを書いています。自分ではない他のプログラマが最初に確認し、実際のコンパイラ処理を実行するようなプログラムを書く場合、より多くのコメントで補足しておきたくなるものですが、実際はそのほとんどが不要なものです。こちらのブログでは、コメントをちょっとした補足として使うという好例が紹介されています。コメントを書く必要がなくなるように、コードをリファクタリングしたりシンプルにしたりするチャンスはいくらでもあります。とはいえ、コードの中だけですべてを説明するにはどうしても限界があります。どんなにシンプルかつ簡潔な分かりやすいコードだったとしても、それを完全に自己文書化することは不可能です。コメントがコードそのものに取って代わることは決してありません。Jef Raskinの記事を確認してみてください。あるデベロッパにとっては、完璧かつ明確なものであっても、背景を知らない他のデベロッパにとっては、理解し難いものです。コメントに関するアドバイスを熟考してみてください。では、次のコードをPerlファイルに書き込むのは、どのくらい難しいでしょうか。実際は、全く難しくありません。プログラムがどう動くのかを伝えるのがコードで、なぜそれが動くのかを伝えるのがコメントです。どちらの場合でも、同僚のデベロッパを惑わすようなことはしないでください。インドア派。Stack Exchange and Discourseの共同創設者。お断り： 自分でも何を話しているのかよく分かっていません。私についてはhttp://twitter.com/codinghorrorをチェックしてください。
