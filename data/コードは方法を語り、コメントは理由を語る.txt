<p><a href="http://blog.codinghorror.com/code-tells-you-how-comments-tell-you-why/" rel="nofollow" title="" class="ext-link">Code Tells You How, Comments Tell You Why</a> （2006-12-18） by <a href="https://twitter.com/codinghorror" rel="nofollow" title="" class="ext-link">Jeff Atwood</a></p><p>私は<a href="http://blog.codinghorror.com/when-good-comments-go-bad/" rel="nofollow" title="" class="ext-link">コードにコメントを書く際の哲学について書いた投稿</a>の中で、<strong>必要のないコメントこそが、最も優れたコメントだ</strong>と書きました。この点についてもう少し説明させてください。まず、コードはコメントに頼らなくても理解できるようにできるだけ簡潔にする必要があります。コードだけではどうしても分かりにくい箇所のみ、コメントを書き込むようにしましょう。</p><p>これを念頭に置いて作業することで、読者を常に意識しながら、コードが書けるようになります。1985年に出版された名著『<a href="http://mitpress.mit.edu/sicp/full-text/book/book-Z-H-7.html" rel="nofollow" title="" class="ext-link">計算機プログラムの構造と解釈</a>』の、「第一版への前文」にも、この点について単刀直入に書かれています。</p><p>Donald E. Knuthも1984年に出版したエッセー『<a href="http://www-cs-faculty.stanford.edu/~uno/lp.html" rel="nofollow" title="" class="ext-link">文芸的プログラミング</a>』（<a href="http://www.literateprogramming.com/knuthweb.pdf" rel="nofollow" title="" class="ext-link">PDF</a>）の中で、同様のことを書いています。</p><p>自分ではない他のプログラマが最初に確認し、実際のコンパイラ処理を実行するようなプログラムを書く場合、より多くのコメントで補足しておきたくなるものですが、実際はそのほとんどが不要なものです。こちらのブログでは、<a href="http://sd.jtimothyking.com/2006/12/15/does-bad-writing-reflect-poor-programming-skills/" rel="nofollow" title="" class="ext-link">コメントをちょっとした補足として使う</a>という好例が紹介されています。</p><p>コメントを書く必要がなくなるように、コードをリファクタリングしたりシンプルにしたりするチャンスはいくらでもあります。とはいえ、コードの中だけですべてを説明するにはどうしても限界があります。</p><p>どんなにシンプルかつ簡潔な分かりやすいコードだったとしても、それを完全に自己文書化することは不可能です。<strong>コメントがコードそのものに取って代わることは決してありません。</strong><a href="http://acmqueue.com/modules.php?name=Content&amp;pa=showpage&amp;pid=290&amp;page=2" rel="nofollow" title="" class="ext-link">Jef Raskin</a>の記事を確認してみてください。</p><p>あるデベロッパにとっては、完璧かつ明確なものであっても、背景を知らない他のデベロッパにとっては、理解し難いものです。<a href="http://everything2.com/index.pl?node_id=1709851&amp;displaytype=printable" rel="nofollow" title="" class="ext-link">コメントに関するアドバイス</a>を熟考してみてください。</p><p>では、次のコードをPerlファイルに書き込むのは、どのくらい難しいでしょうか。</p><p>実際は、全く難しくありません。プログラムがどう動くのかを伝えるのがコードで、なぜそれが動くのかを伝えるのがコメントです。どちらの場合でも、同僚のデベロッパを惑わすようなことはしないでください。</p><p>インドア派。Stack Exchange and Discourseの共同創設者。お断り： 自分でも何を話しているのかよく分かっていません。私については<a href="http://twitter.com/codinghorror" rel="nofollow" title="" class="ext-link">http://twitter.com/codinghorror</a>をチェックしてください。</p>
