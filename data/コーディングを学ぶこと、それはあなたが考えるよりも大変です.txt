<p><a href="http://mikehadlow.blogspot.com.eg/2015/12/learn-to-code-its-harder-than-you-think.html" rel="nofollow" title="" class="ext-link">Learn To Code, It's Harder Than You Think</a> (2015-12-04) by <a href="https://twitter.com/mikehadlow" rel="nofollow" title="" class="ext-link">Mike Hadlow</a></p><p><em>要約：全ての根拠が示しているのは、「プログラミングには高い適性を要求されますが、適性を持った人間はわずかしかいない」ということです。最近の流行の短期でコーディングを学べるコースは、デマカセを売り付け、プロのプログラマのスキル不足解消に何ら力になってないのです。</em></p><p><em>これはイギリスからの観点での記事です。私はこの事象について、とりわけソフトウェア開発者の社会的地位に関しては、他の地域決してこの通りではないと思っています。</em></p><p>メディアが共通して取り上げるテーマは、スキルのあるプログラマの不足です（”プログラマ”も”コーダ”も”ソフトウェア開発者”も、ここでは全て同じものを意図し、区別せずに使用しています）。このコーディング技術のギャップには解決の糸口が見えない心配が多くあります。要は”明日の高品質な仕事”を担う候補者を生み出すことに失敗しているということです。例えば、<a href="http://www.telegraph.co.uk/education/educationnews/10985961/Britain-faces-growing-shortage-of-digital-skills.html" rel="nofollow" title="" class="ext-link">The Telegraph</a>のこの記事を参照してください。</p><p>大半の解説者はこの問題を、適切なトレーニングの不足とみなしています。教育機関からは十分なプログラマが育っていません。例えば<a href="http://www.theguardian.com/politics/2015/may/23/yvette-cooper-labour-leadership-general-election" rel="nofollow" title="" class="ext-link">The Guardian</a>で労働党のYvette Cooper上院議員は以下のように述べています。</p><p>メディアで一般的に信じられているのが、コーディングの学習を始めるには高い壁があるということです。<a href="http://www.theguardian.com/technology/2015/jul/26/founders-coders-coding-free-training-london" rel="nofollow" title="" class="ext-link">以下はこの迷信を顕著に表すthe Guardianに掲載されていた記事です</a>。</p><p>「学習を始めるためには高い障壁があること、敷居の低いトレーニングが不足しているということは、裕福な家庭と教養のあるエリートだけが高給の仕事に就きやすいということを意味する」というコンセンサスがあるようです。現在は与えられていない教育やトレーニングが受けやすいものになりさえすれば、プログラミングが適切なキャリアになり得るたくさんの人々がいる、ということを含意しています。</p><p>これを受けて、プログラミングを学生に奨励する一連の構想があります。イギリス政府は2014年に” Year of Code “キャンペーンを開始しました。</p><p><img title="year-of-code" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="year-of-code" src="http://lh3.googleusercontent.com/-hJj8g5cJbeY/VmGU9drDdYI/AAAAAAAAZo4/9BpEHggnwZE/year-of-code5.png?imgmax=800" width="789" height="440"></p><p>“今年はコーディングを始めよう、あなたが思うより簡単です”というメッセージです。実際にYear of Codeキャンペーンの総監督であるLottie Dexter氏は、<a href="https://www.youtube.com/watch?v=e3q3KxX82tY" rel="nofollow" title="" class="ext-link">Newsnight のインタビュー</a>で”スキルは1日で習得できる”と言っています。Code.orgは”コンピュータサイエンス教育の参加拡大に尽力する非営利団体”で、団体のWebサイトでは”Code.orgはコーディングが難しいという難しいという思い込みを覆すお手伝いをします。”とうたっています。</p><p><img title="hour-of-code" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="hour-of-code" src="http://lh3.googleusercontent.com/-9pled3yHiRY/VmGU-Fhug_I/AAAAAAAAZo8/d4eyyjn-zXk/hour-of-code5.png?imgmax=800" width="336" height="259"><br>
<em>訳注：イギリスの8,198,056人がHOUR of CODEを試しています。<br>
誰でも学べます。</em><br>
しかし、本当にコーディングを学んで高給の仕事に就くことはそれほど簡単なのでしょうか？　誰でもコードを学ぶことができるというのは本当でしょうか？　道行く人々を連れてきて、短期の授業を受けさせ、プロのプログラマを育てるというのは可能なのでしょうか。</p><p>もっと伝統的な格式のある教育はどうでしょうか？　大学でプログラマのトレーニングを受けるというのはどうなのでしょうか？</p><p>スキル不足が問題なら、コンピュータサイエンス専攻の卒業生には高い就職率が望めるはずです。しかしながら、実際は違うようです。The Higher Education Statistics Agencyは、「コンピュータサイエンス専攻の卒業生は”全卒業生の中でも最も就職率が低いという、いただけない栄誉”を得た」と<a href="http://www.software.ac.uk/blog/2013-10-31-whats-wrong-computer-scientists" rel="nofollow" title="" class="ext-link">伝えています</a>。これはどういうことでしょう。いろいろと聞いたところによれば、学生が持っているスキルと雇用主が学生に期待するスキルの間にギャップがあるようです。あるいははっきり言ってしまえば、3年間のコンピュータサイエンスの教育だけではコーディングはできるようになりません。匿名の大学講師の書いた<a href="http://www.software.ac.uk/blog/2013-10-31-whats-wrong-computer-scientists" rel="nofollow" title="" class="ext-link">記事</a>のコメントには、いくつか興味深い洞察がなされています。</p><p><a href="http://blog.codinghorror.com/separating-programming-sheep-from-non-programming-goats/" rel="nofollow" title="" class="ext-link">他の調査でも、同様の結果が出ています</a>。どんなプログラミングのコースでも、コードを書ける人とそうでない人が“2峰性”の分布になります。</p><p>ここでは、学位レベルのコンピュータコースについて話していることを思い出してください。彼らは、大学でコンピュータサイエンスを学ぶべく入学を許可された学生です。ある程度は、自分で選択したはずです。もしもプログラミングコースの落第率が、学部学生の中でそれほど大きいなら、一般的な人、つまり”コーディングを学ぶ”短期コースが引きつけようとしている人たちの中ではさらに大きいはずです。この問題を、反対の側面から見てみましょう。成功しているプロフェッショナルなソフトウェア開発者に、どのようにコーディングを学んだのか尋ねてみましょう。彼らは皆、高額なコーディング専門の学校出身だと期待するかもしれません。しかし、そうではないようです。ここにあるのは、<a href="http://stackoverflow.com/research/developer-survey-2015" rel="nofollow" title="" class="ext-link">Stack Overflow が行った、開発者に関する調査</a>の2015年の結果です。これは世界的な調査だということを頭に置いてください。でも、この結果はイギリスにとっても有用でしょう。</p><p><img title="SO-dev-survey" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="SO-dev-survey" src="http://lh3.googleusercontent.com/-HMfxjAci5VU/VmGU-SG1PZI/AAAAAAAAZpE/PneaVvh0WDo/SO-dev-survey5.png?imgmax=800" width="494" height="519"><br>
<em>訳<br>
独学　41.8％<br>
コンピュータサイエンス（あるいは関連した分野）の学士　37.7％<br>
オンザジョブトレーニング　36.7％<br>
コンピュータサイエンス（あるいは関連した分野）の修士　18.4％<br>
オンラインのクラス　17.8％<br>
コンピュータサイエンス（あるいは関連した分野）の大学の科目を履修　16.7％<br>
業界の認可プログラム　6.1％<br>
その他　4.3％<br>
集中的なコーディングの”ブートキャンプ”あるいは夜間学校　3.5％<br>
コンピュータサイエンス（あるいは関連した分野）の博士　2.2％<br>
メンターシッププログラム　1.0％</em></p><p>コンピュータサイエンス、あるいは関連した分野の学位を持っている人は3分の1ほどにとどまり、最も大きなグループである42％近くが独学でした。私はこの問題について、小規模で科学的根拠のない独自の調査を行いました。毎月.NETの開発者とブライトンでミーティングをする際に聞いてみたところ、独学派が多数であるという結果がより顕著に出ました。また面白半分に、Twitterでも投票を行いました。</p><p><img title="mh-self-taught-twitter-pol" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="mh-self-taught-twitter-pol" src="http://lh3.googleusercontent.com/-mfp_JGXdgpI/VmGU-90EobI/AAAAAAAAZpM/FBWCSq8zZQY/mh-self-taught-twitter-pol5.png?imgmax=800" width="583" height="270"><br>
<em>訳：<br>
あなたは独学のプログラマですか？<br>
</em></p><p>76％の人が、独学だと答えています。さらに興味深いのは、この投票についたコメントです。典型的なのは、次のようなものです。</p><p><img title="self-taught-tweet" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="self-taught-tweet" src="http://lh3.googleusercontent.com/-jv02VqaG0Ns/VmGU_dmWRnI/AAAAAAAAZpU/xTDu1l8nRyY/self-taught-tweet5.png?imgmax=800" width="601" height="100"><br>
<em>注釈<br>
僕はCSの学位を持っていますが、それでも95％は独学です。少なくとも、自分が使っている分野に関しては。</em></p><p>CSの学位を持っているプログラマでさえ、大部分は独学だと主張しています。他の人は、答えるのが難しい質問だと不満を漏らしています。というのも、この業界の変化の率を考えれば、学習をやめることはないからです。ですから、ある時点では正式なトレーニングを受けたとしても、それだけで職業上の成功を得ることはできないのです。どんな正式なコースも、プログラマのキャリアを定義する、継続的な学びの小さな1要素にすぎません。</p><p>私たちは、非常に奇妙な、そして予想もしなかった状況に置かれました。プログラマのための正式な教育はあまりうまく機能していないようで、プログラマとして成功している人の大半は独学だというのです。職業上の成功につながるような教育が必要でない人もいて、彼らは皆、利用したい人は誰でも利用できるオンライン上にあるリソースの広大な海から、自分の仕事を学べる能力を持っているようです。その一方で、何年も正式なトレーニングを積んだとしても、コーディングを学ぶことができない人もいるようです。</p><p>これは、この記事の冒頭での議論に疑問を投げかけます。もし現在のプロフェッショナルなソフトウェア開発者の大半が独学で学んだのなら、障壁など存在するのでしょうか？　インターネットに接続できる人なら誰でも、適性があればコーディングを学べるはずです。</p><p>この根拠は、非常に明白な結論を示しています。2種類の人間がいるのです。プログラミングをそれほど苦痛に感じず、楽しんで学ぶことができる人、そしてどんなに素晴らしい教え方でも学べない人です。Yvette Cooperや”Year of code”あるいは”Hour of code”を支持する人は、見て見ぬフリをしています。プログラミングには非常に高い適性が求められるということを認めたくないのです。”誰でも学べる”ようなものではなく、簡単でもなく、でも適性のある人にとってはまあ簡単なものです。厳しい事実として、ほとんどの人は、高い基準に達するのは不可能だということに気付くのです。</p><p>もし、プログラミングに高いレベルの適性が求められると認めれば、”コードを学ぼう”という動きを取り巻く誇大広告を他の職業(高い適性が要求される、より確立された職業)と比べるのも楽しいものです。「プログラマ」や「コーディング」を「医師」や「エンジニア」、「建築家」、「数学者」に置き換えてみましょう。</p><p>*　数学は1日で習得できます。<br>
* 今年は外科手術を始めよう。あなたが思うより、簡単です<br>
*　skyscraper.orgは、建築は難しいという謎を解くための手助けをします。<br>
* 鉱山労働者の子息、令嬢は皆、弁護士になるための勉強をすべきである。</p><p>私の友人、Andrew Cherryは、これを上手くまとめています。</p><p><img title="free-training-ac" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="free-training-ac" src="http://lh3.googleusercontent.com/-rLIbl-y8C3I/VmGU_6kFZ_I/AAAAAAAAZpc/f4B671WdGG8/free-training-ac5.png?imgmax=800" width="544" height="95"><br>
<em>訳：<br>
どんな業界/職業が、余暇を犠牲にしてまで、その分野に参入したいと思っている人向けに無料の/オープン形式のトレーニングを提供してるの？　興味がある。</em></p><p>答え：ただ1つ、ソフトウェア開発のみです。医師になりたい人は、医学部に7年間通うしかありません。</p><p>その適性を受け入れるのは、プログラミングのキャリアで成功するためには重要なことで、私たちは”不足の”問題に異なる角度からアプローチできます。才能のある人に、高い適性が求められる他の分野ではなく、プログラミングを選択するように説得できるか聞き出すこともできます。問題は、このような人はキャリアパスにおいてかなりの選択肢があるということです。そしてこれから説明するように、プログラミングにはいくつものネガティブな社会的、職業上の性質があり、そのために彼らはこれを選択しなくなるのです。</p><p>ソフトウェア開発は、とても魅力的な職業であることは間違いありません。高給で流動性が高い職業で、常に新しいことに挑戦するタイプの仕事であり、やりがいがあります。ただ、イメージ的に問題があります。私はそのことを、1990年代に初めて経験しました。当時私は社会科学の学士課程にいて（そうです、私は独学タイプのプログラマの1人です）、私たち文科系の学生は、学内で、コンピュータサイエンスの学生を見下していました。彼らはキャンパスの中でも一番格好の悪い学生で、多くは、服装のセンスのない男子学生でした。哀れみと嫌悪感を抜きで彼らのことを考えることはありませんでした。学士課程の終わり頃、私は同じく社会科学を学んでいたガールフレンドに、プログラミングの職業を選択するかもしれないと話しました。彼女は、「まあ、なんてムダなことをするの。どうしてプログラミングなんかしたいの？　」と叫んだのです。イギリスにおいて、中流階級の人々が集まっている場で、いきなり次のように尋ねたとします。例えば、薬剤関係、法曹関係、建築家、あるいは会計士のような職業と、ソフトウェア開発の仕事を比較してもらうのです。きっと人々は、ソフトウェア開発の社会的ステータスは低いと評価するでしょう。ビジネスにおいてでさえ、少なくとも、より伝統的なビジネスにおいて、ソフトウェア開発は低級な仕事で、若手や、中間管理職としての能力が劣る人にお似合いの、比較的単調で平凡な職業と見なされているのです。あいにくなことに、”コーディングを学ぶのは簡単です”とうたっているコースは全て、ソフトウェア開発はまともな職業ではないという認識を助長しているだけなのです。</p><p>ソフトウェア開発に関しては他にも問題はあります。前述した、入門の障壁が低いということの裏返しにあたることです。つまり、プロフェッショナルになるための十分に確立された入門の道筋が無いということです。試しに、Googleで”医者になる方法”とか”弁護士になる方法”と検索してみてください。</p><p><img title="how-to-become-a-doctor" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="how-to-become-a-doctor" src="http://lh3.googleusercontent.com/-fGbKGuDRJHg/VmGVBDTBcVI/AAAAAAAAZpo/93vDR3MH11c/how-to-become-a-doctor5.png?imgmax=800" width="654" height="365"><br>
<em>訳：<br>
医者になる方法<br>
ソース：アメリカ労働統計局（BLS）；求人（2015年8月）<br>
1. ステップ1：学士号を取得する。<br>
2. ステップ2：医学大学院進学適性テストを受ける。<br>
3. ステップ3：医学部に入学する。<br>
4. ステップ4：研修医を修了する。<br>
5. ステップ5：医師免許を取得する。</em></p><p>一般に広く認識されているプロの資格には、しっかりと確立された一連のステップがあります。このステップを全て修了すれば、プロの一員として認められるのです。医者の資格を得るのは簡単だと言っているのではありませんが、その方法にはほとんど疑問の余地はありません。それでは次に、Googleで”ソフトウェア開発者になる方法”と検索してみましょう。すると、<a href="http://www.theguardian.com/careers/careers-blog/how-to-become-a-software-developer" rel="nofollow" title="" class="ext-link">例えばこのような検索結果が得られます</a>。”プログラミング言語を学ぶ”とか”オープンソースのプロジェクトにコントリビュートする”とか”地元のプログラミンググループに参加する”など、あいまいでありきたりな内容ばかりです。明確なキャリアパスは無く、いつプロになれるのか、なったとしたら将来、給料の高い仕事を得られるのかといったことについて、何の保証もありません。</p><p><img title="Yes, I made this up, but it makes the point. :)" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="Yes, I made this up, but it makes the point. :)" src="http://lh3.googleusercontent.com/-E701QWCMvOY/VmGVBZ_ysqI/AAAAAAAAZps/FFs4u8EOnI8/how-to-become-a-software-developer11.png?imgmax=800" width="665" height="256"><br>
<em>訳：<br>
“ソフトウェア開発者になる方法”<br>
自力で頑張りましょう。幸運を祈ります。</em></p><p>では次に、学校で良い成績を収め、高い知性を求められる課題を比較的簡単にこなすような高い適性を持った人材に対して、ある選択肢を与えてみます。最初の選択肢としては、例えば、薬剤関連の職業などはどうでしょう。あらかじめ明確に示されたステップをこなし、厳しい基準の試験を順調にパスし、最後には地位が高くて高給の仕事を手に入れるのです。そしてもう1つの選択肢はこんな職業です。学校ではなく独学しますが、それが正確に何なのかは分かりません。下働きのような地位の低い仕事に就き、ただひたすら、より多くのことを学びます。何とかそれをこなして徐々に出世します。それでも将来的に高給が得られる保証はありません。その上、世間の誰もが、必死に取り組んでいるあなたを社会の底辺にいる人だと考えるのです。あなたならどちらの職業を選択しますか？</p><p>ソフトウェア開発は、既存のプロフェッショナルな職業の例にならい、高い壁を乗り越えなければ業界に入れないような、プロとしての資格を確立できるでしょうか？　現在、ある試みがなされています。英国コンピュータ協会（BCS）は、”公認のIT機関”を自称し、プロの資格と基準の確立を目指しています。問題は、ソフトウェア業界に全く相手にされていないということです。たとえソフトウェア業界に、この専門職団体の存在を真剣に受け入れてもらえたとしても、プロの資格があるかどうかをどうやってテストしますか？　試験には何を出題しますか？　プログラミングには確立された方式などほとんどありませんし、主流になりそうなものが現れても、驚異的に速い変化のペースによって、それはすぐに土台から壊されてしまいます。オブジェクト指向プログラミングの例を挙げましょう。2000年代には、オブジェクト指向プログラミングは、企業向けプログラミングにおける基盤的技術の地位を確立したと思われていました。しかし今では、私を含めて多くの人が、この潮流は20年間に渡って本流から逸れていたものであり、そのほとんどが間違いだったと考えています。プログラミングの標準や資格は、現行の方式とともに、どれだけ速く最新のものに置き換わっていくのでしょうか。現状は、それでも速さが足りないと思います。</p><p>しかし、本稿での私の主な論点は、プログラミングは高い適性が求められ、一握りの人だけが成功の域に達することができる類のものである、という言論を確立することでした。もしプロの資格認証の主眼が、コーディングできない人を除外することならば、テストの内容が流行遅れであることや、業界の最新の方式と無関係であることは問題でしょうか？　暫定的な認証制度では、LISPで、ある程度本格的なプログラムを完成させることが含まれるでしょうか？　プログラマにとって<a href="https://ja.wikipedia.org/wiki/%E3%82%AC%E3%83%A9%E3%82%B9%E7%8E%89%E6%BC%94%E6%88%AF" rel="nofollow" title="" class="ext-link">ガラス玉演戯</a>のようなものでしょうか？　ポイントは、対象者がコーディングできるかどうかという点になるでしょう。現在の流行が何なのかということは、後で学べます。それでも依然として残る問題は、この認証制度を業界にどのように認めさせるかということです。</p><p>そうした試みの一方で、私たちはデマカセを伝えるのをやめるべきです。プログラミングは簡単ではなく、難しいものです。将来、高給を得られる仕事に就けるレベルのコーディングを、たったの数週間で学ぶことなど絶対にできません。どんなに訓練を受けようが、ほとんどの人が、コーディングを習得することが全くできません。コーディングの速習コースをいくら作っても、技術不足の現状や、技術が低くて給料も低いという問題、失業といった問題に対して何の解決にもならないのではないかと思います。コーディングには人工的な壁があるというふりをするのをやめて、本当の壁は、生まれ持った才能であるということを受け入れましょう。その代わりに、ソフトウェア業界の社会的地位の向上を目指しましょう。いずれにせよ、この動きはゆっくりと始まっていると思います。そして、才能ある若者が、他のプロフェッショナルな職業と比べてもソフトウェア開発が有望な選択肢だと真剣に考えられるように、働きかけていきましょう。</p>
