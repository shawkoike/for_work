<p><a href="http://jcarlosnorte.com/security/2016/02/21/date-leak-gzip-tor.html" rel="nofollow" title="" class="ext-link">HTTP GZIP Compression remote date and time leak</a> （2016-02-21） by Jose Carlos Norte<br>
<strong>Jose Carlos Norte</strong></p><p>起業家、思考家、アジャイル派、テクノロジーオタク、コンピュータプログラマ、I.T.セキュリティエキスパート、フリーオープンソースソフトウェアサポーター。</p><p><em><a href="https://www.torproject.org/" rel="nofollow" title="" class="ext-link">Tor</a></em>は、ボランティアネットワークが運営している、匿名でインターネットが利用できるサービスです。通常、Torは、追跡されたり特定されたりすることなくWebブラウジングするために利用されます。</p><p>あまり知られていないTorのサービスの特徴の1つは、Torにおいて<em><a href="https://www.torproject.org/docs/hidden-services.html.en" rel="nofollow" title="" class="ext-link">秘匿サービス</a></em>として知られているものを提供する能力です。秘匿サービスは、基本的にTorネットワークを通じてサービスを提供するサーバです。Torを考えたときに最初に思い浮かぶものは、匿名でのWebブラウジングでしょう。しかし、ハクティビストや反体制派の人々にとっては、特定されることなくWebブラウジングできるだけでなく、簡単に追跡されたり閉鎖されたりすることなしにWebページを提供できる点が、非常に便利なのです。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/03/torlogo.png"><img src="http://postd.cc/wp/wp-content/uploads/2016/03/torlogo.png" alt="torlogo" width="333" height="252" class="alignnone size-full wp-image-6301"></a></p><p>Torネットワークにおいては、Torネットワークの利用者だけがアクセスできる数千の「秘匿サービス」があります。これにより、幅広い話題の禁じられた情報にアクセスすることが可能になります。これらのサイトは、example.onionのようなトップレベルドメイン.onionが付いた秘密のDNSアドレスを持っています。.onionで終わるサイトは、簡単に追跡したり閉鎖したりできません。また、オーナーは、簡単に特定されません。</p><p>秘匿サービスのセットアップで最も複雑な作業の1つは、サーバの真のIPアドレス情報が漏れないWebサーバの設定です。サイトが複雑であればあるほど、何があってもサービス情報が漏れない本当の秘匿サービスのセットアップは、より困難になります。</p><p>過去数年間、FBIは、なりすましや情報漏えい、ブラウザの脆弱性を利用して、ある複数の秘匿サービスを特定し、閉鎖することに成功しました。最も有名な例は、<em><a href="https://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%AB%E3%82%AF%E3%83%AD%E3%83%BC%E3%83%89_(%E3%82%B5%E3%82%A4%E3%83%88)" rel="nofollow" title="" class="ext-link">シルクロード</a></em>です。これは、Torの中に隠れた有名な闇市場で、ここで薬物の類が販売されていました。</p><p>もちろん、秘匿サービスの裏で、管理者たちは、サービスを提供しているサーバの物理的場所についての情報や、秘匿サービスのオーナーの特定に結び付く情報が漏れないよう、最善を尽くしています。</p><p>HTTPプロトコルによって、クライアントは、圧縮能力をサーバに知らせることができます。クライアントとサーバが同じ圧縮フォーマットをサポートしている場合、サーバは、帯域幅と時間をセーブするために、HTTPレスポンスを圧縮することができます。全ての主なWebサーバとブラウザは圧縮をサポートしています。<em><a href="https://en.wikipedia.org/wiki/HTTP_compression" rel="nofollow" title="" class="ext-link">HTTP圧縮</a></em>で使われる最も一般的なフォーマットは、<em><a href="http://www.gzip.org/" rel="nofollow" title="" class="ext-link">gzip</a></em>と<em><a href="http://zlib.net/" rel="nofollow" title="" class="ext-link">deflate</a></em>です。</p><p>gzipは比較的高速で、正確な圧縮比での圧縮が可能な、データ圧縮フォーマットです。</p><p>圧縮フォーマットとして、gzipは圧縮データにデータヘッダが含まれるよう指定します。このヘッダには、圧縮データの情報、データを圧縮したオペレーティングシステムの他、最も重要な情報、<strong>データが圧縮された日付</strong>が協定世界時（UTC）にのっとって記録されています。</p><p><a href="http://www.forensicswiki.org/wiki/Gzip" rel="nofollow" title="" class="ext-link">Forensics Wiki</a>を見ると、ヘッダは次の通りです。</p><p>よって、このヘッダがgzip圧縮データに付いていれば、適当なWebサーバにgzip圧縮リクエストを出し、gzip圧縮レスポンスを待って、バイト数が0x1f 0x8bで始まっているかどうかということと、正確な圧縮日を確認できるのです。</p><p><a href="http://postd.cc/wp/wp-content/uploads/2016/03/timezone.jpg"><img src="http://postd.cc/wp/wp-content/uploads/2016/03/timezone.jpg" alt="timezone" width="550" height="385" class="alignnone size-full wp-image-6300"></a></p><p>一般的なWebサーバでは、これは非常に限定的なシナリオにおいてのみ有用です。なぜなら、サーバの地理的な位置はいずれにしても隠されず、これもまた隠されていないサーバIPアドレスが分かればすぐに特定されるからです。しかし、<strong>秘匿サービス</strong>では、サーバの時間帯に関する情報は、サーバが稼働している可能性のある国を特定するのに非常に役立ちます。</p><p>gzipの仕様を見れば、ファイル更新時間のヘッダフィールドには、ローカル時刻ではなく、世界時を使用すべきことは明確です。しかし、多くのサイトが世界時の代わりにローカル時刻を送信しています。どうもMicrosoft Windows内の欠陥が原因<strong>かもしれない</strong>、と思えるのですが、どの機能が仕様に沿わず、ローカル時刻をリークしているのかをはっきりさせるには、さらなる調査が必要です。これは当然<strong>Torのせいではありませんし、Torのプロトコルのバグでもありません。</strong>また、<strong>gzipの仕様の問題でもないのです。</strong>ある動作のせいです。ベンダーたちによって間違って実装され、多くのWebサーバにおいて初期設定のままのHTTPプロトコルで使えるようになってしまった、gzipフォーマットのあいまいな機能が原因なのです。</p><p>良いニュースは、多くのWebサーバでは、gzipの日付フィールドを’0’で埋めるようあらかじめ設定されていることです。理由は分かりませんが、おそらくパフォーマンスの観点からでしょう。少しリサーチをしてみたところ、Webサーバの約10％がHTTPレスポンスをgzipで圧縮する際に遠隔日時をリークしていることが分かりました。また、ヘッダに遠隔日時を内包する数少ないサーバも、ローカル時間の代わりに世界時を使うことをしていないのです。</p><p>しかし、ローカル時刻ではなく世界時を送信している、つまりファイル更新時間をゼロで埋めず正しく世界時を送信する場合でさえ問題があります。正しい世界時を送信すると、クロックスキュー攻撃による特定がされやすくなるのです。<a href="http://sec.cs.ucl.ac.uk/users/smurdoch/papers/ccs06hotornot.pdf" rel="nofollow" title="" class="ext-link">Murdoch, 2006</a>による以前の報告を読んでみてください。</p><p>このシナリオでは、正しいgzipの実行で提供される世界時は、攻撃開始のための別のサイドチャネルでしかありません。</p><p>gzip圧縮HTTPレスポンスに遠隔日時が含まれていればそれを取得する、小さなPHPスクリプトをcurl（コマンドライン）を使って開発しました。HTTPレスポンスの圧縮ができ、かつgzipヘッダの’date’フィールドにゼロではない正確な日付を埋め込むWebサーバでのみ機能します。</p><p>いくつかのサーバでテストしたところ、日付がgzipヘッダに送られたのは<strong>instagram.com</strong>、<strong>reddit.com</strong>、それから<strong>bing.com</strong>でした。この例では、<strong>reddit.com</strong>と<strong>instagram.com</strong>は仕様通り、世界時を送信しました。<strong>bing.com</strong>が送ったのはローカル時刻でした。</p><p>もちろんプライバシーの懸念があるので、どの秘匿サービスが遠隔日時をリークしているかについて情報提供はしません。</p><p>使用例：</p><p>この例では、3つのサーバ全て、gzipヘッダの中に時刻を含んでいますが、<strong>reddit.comとinstagram.com</strong>は世界時を、<strong>bing.com</strong>はローカル時刻を送っています。</p><p>コンセプトの証明はこちらで。<br>
<a href="https://github.com/jcarlosn/gzip-http-time" rel="nofollow" title="" class="ext-link">https://github.com/jcarlosn/gzip-http-time</a></p><p>Torプロトコルそのものが、複数の伝達のためにgzipを使っています。しかし、Tor-onionsメーリングリストでWison-Brownが述べているようにこの件は既に知られていることで、Tor開発の際に考慮に入れられていました。</p><p>Tor自体には、内部でgzip圧縮を使ってディレクトリドキュメントを圧縮しているものの、そのことによる問題はありません。秘匿サービスとクライアントはディレクトリドキュメントを生成したり、再圧縮したりしないので、影響を受けることは絶対にないのです。Torのオーソリティは多数決により、圧縮の初期化にgzipヘッダにゼロを設定するdeflateInit2を使っています。下記はzlib.hのdeflateInit2ドキュメンテーションの引用です。</p><p>これに関する全ての会話は、<em><strong><a href="https://lists.torproject.org/pipermail/tor-onions/2016-February/000081.html" rel="nofollow" title="" class="ext-link">tor-onions</a></strong></em>メーリングリストで見られます。</p><p>この潜在的な問題を見つけた時から、それが遠隔であってもTorユーザのプライバシーに影響を及ぼすのではと心配でした。この問題の原因と、gzipの仕様が世界時を指定しているのに、いくつかのサーバがローカル時刻を送っているのはなぜなのか、少々理解し難かったです。この気付きをシェアしたばかりで混乱していた頃でさえ、誰にも言わず自分だけで影響を理解しようとするより、オープンに議論したほうが建設的だと考えていました。onion Torメーリングリストに連絡を取り（実際そうしました）、この記事を拡散して注意を喚起し、これが問題になり得るのか理解する助けを得ることが自分の責任だと思ったのです。</p><p>議論に加わり、本件に関する追加情報を集め、この問題が及ぼす可能性のある影響を明確にする手助けをしてくれたHDM、brlewisとHenryk Plotzに感謝します。</p><p><strong>最終更新：　2016年2月22日 8:50:16 PM UTC。数ヶ所の誤り訂正とコメント欄からの情報追記。</strong></p>
