awesome-bits by Keon Kim精選したビット演算の一覧および技です。
Keon Kimが管理しています。お気軽にプルリクエストを送ってください。JavaScriptでは35%処速が速くなります。下記に挙げるのは、平方根の逆数を高速で求める方法に触発されてできた手法です。これらのほとんどは独自の手法です。浮動小数点をビット配列に変換（unsigned uint32_t）注意：共用体を介した型のプルーニングはC++で定義されていませんので、代わりにstd::memcpyを使ってください。frexpは値を2のn乗で分解するため、man, exp = frexp(x)はman * 2exp = x and 0.5 &lt;= man &lt; 1になります。注意：frexpを使用するとman+125によって最後の8ビットを上書きして仮数の最初の16ビットを格納するため、最大2から16の相対誤差を持ちます。注意：代わりに上記のi2f関数と2i関数を使用しています。Wikipediaの記載を参照してください。導出については、こちらのブログ記事をご覧ください。注意：0x5c416のバイアスは この方法を用いるために設定されたものです。exp = -0.5を代入する場合、このバイアスは平方根の逆数を高速で求める方法の定和である0x5f3759dfになります。この方法の導出についてはこちらの一連のスライドをご覧ください。一連のnの数値の幾何平均はそれらの積のn乗根です。導出についてはこちらをご覧ください。注意：0x66774のバイアス項はこの方法を用いるために設定されたものです。最後にln(2)を掛けているのは、この方法のその他の部分でlog2(x)関数を計算しているためです。導出はこちらをご覧ください。注意：ここでの0x38aa22のバイアス項は、基数の乗法スケールに対応します。特に、2Z= eのようなZに対応します。導出はこちらをご覧ください。注釈：対象がすでに小文字であっても、結果は常に小文字です。注釈：対象がすでに大文字であっても結果は常に大文字です。注釈：結果は1から26の範囲です。大文字か小文字かは重要ではありません。注意：英語以外の文字を使用すると、正しい結果は得られません。
