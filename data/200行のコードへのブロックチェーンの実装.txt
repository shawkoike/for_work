<p><a href="https://medium.com/@lhartikk/a-blockchain-in-200-lines-of-code-963cc1cc0e54" rel="nofollow" title="" class="ext-link">A blockchain in 200 lines of code</a> （2017-3-04） by <a href="https://medium.com/@lhartikk" rel="nofollow" title="" class="ext-link">Lauri Hartikka</a></p><p><a href="https://ja.wikipedia.org/wiki/%E3%83%96%E3%83%AD%E3%83%83%E3%82%AF%E3%83%81%E3%82%A7%E3%83%BC%E3%83%B3" rel="nofollow" title="" class="ext-link">ブロックチェーン</a>の基本的な概念は非常にシンプルです。分散型データベースで、順序付けられたレコードのリストが連続的に増加していきます。しかしシンプルとは言え、ブロックチェーンやそれを使うことで解決しようとしている問題について話をする際に、頭を悩まされることがよくあります。これは、<a href="https://ja.wikipedia.org/wiki/%E3%83%93%E3%83%83%E3%83%88%E3%82%B3%E3%82%A4%E3%83%B3" rel="nofollow" title="" class="ext-link">ビットコイン</a>や<a href="https://ja.wikipedia.org/wiki/%E3%82%A4%E3%83%BC%E3%82%B5%E3%83%AA%E3%82%A2%E3%83%A0" rel="nofollow" title="" class="ext-link">イーサリアム</a>といった、一般にもよく知られているブロックチェーンベースのプロジェクトでよく聞かれる話です。「ブロックチェーン」は、<a href="https://en.bitcoin.it/wiki/Transaction" rel="nofollow" title="" class="ext-link">取引</a>や<a href="https://en.wikipedia.org/wiki/Smart_contract" rel="nofollow" title="" class="ext-link">スマートコントラクト</a>、または<a href="https://ja.wikipedia.org/wiki/%E6%9A%97%E5%8F%B7%E9%80%9A%E8%B2%A8" rel="nofollow" title="" class="ext-link">暗号通貨</a>といったコンセプトと強い結びつきがあります。</p><p>そのため、本来シンプルであるべきブロックチェーンの理解がより困難になってしまっています。抜け目のないソースコードであれば尚更です。<br>
そこで、<a href="https://github.com/lhartikk/naivechain" rel="nofollow" title="" class="ext-link">NaiveChain</a>という、200行のJavascripitに実装した、非常にシンプルなブロックチェーンを紹介したいと思います。</p><p>まず行うべき作業は、ブロックの構造を決めることです。可能な限りシンプルにするため、最低限必要となる、インデックス、タイムスタンプ、データ、ハッシュ値、そして1つ前のブロックのハッシュ値のみを構造に含めます。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/900/1*pbyFH4U5sO27UE1EjnImoA.png" src="https://cdn-images-1.medium.com/max/900/1*pbyFH4U5sO27UE1EjnImoA.png"><br>
チェーンの安全性を維持するために、ブロックの中には、1つ前のブロックのハッシュ値が含まれていなくてはなりません。</p><p>ブロックはデータの安全性を確保するため、ハッシュ化されている必要があり、SHA-256によって、ブロック内のコンテントが引き継がれます。ここには回答すべき<a href="https://en.wikipedia.org/wiki/Proof-of-work_system" rel="nofollow" title="" class="ext-link">プルーフ・オブ・ワーク</a>の問題はないので、このハッシュは「<a href="https://en.bitcoin.it/wiki/Mining" rel="nofollow" title="" class="ext-link">マイニング</a>」とは何の関係もないということを覚えておいてください。</p><p>ブロックを生成するには、1つ前のブロックのハッシュ値を知っていなければならず、その上で、その他、必要なコンテンツ（インデックス、ハッシュ値、データ、タイムスタンプ）を作成します。ブロックデータは、エンドユーザによって提供されます。</p><p>ブロックチェーンを保存するには、インメモリのJavascriptの配列が使用されます。ブロックチェーンの最初のブロックは常に「ジェネシスブロック」と呼ばれ、ハードコーディングされています。</p><p>いかなる場合でも、ブロックもしくはブロックのチェーンが安全性を満たしているか確認しなければなりません。特に他のノードから新しいブロックを受け取ったときや、承認すべきかどうかの決断をしなければならないときは尚更です。</p><p>どんな場合でも、チェーンには明確なブロックのセットが1つでなくてはなりません。矛盾する点（例えば、2つのノードがどちらもブロック番号72を生成している）があった場合、ブロックの数が多いチェーンを選択します。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/900/1*KM7WYPiZwxyfDL6Eb66QIg.png" src="https://cdn-images-1.medium.com/max/900/1*KM7WYPiZwxyfDL6Eb66QIg.png"><br>
注釈：<em>当初の矛盾点、解決済み、最長チェーンが優位</em></p><p>ノードに不可欠なのは、ブロックチェーンを他のノードと共有、また同期する点です。以下は、ネットワークが常に同期されるために必要なルールです。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/900/1*sz2iVHdWBdtwNl3npeLddQ.png" src="https://cdn-images-1.medium.com/max/900/1*sz2iVHdWBdtwNl3npeLddQ.png"><br>
(上から下、左から右の順)<br>
注釈：<br>
<em>ノード1はノード2と連結し、同期する<br>
最新のブロックにクエリを行う<br>
最新のブロックを送信する<br>
全てのブロックに対してクエリを行う<br>
全てのブロックを送信する</em></p><p><em>ノード1がブロックを生成し、送信する<br>
最新のブロックを送信する<br>
最新のブロックを送信する<br>
最新のブロックを送信する</em></p><p>ノードが表示されているプロトコルに従う際の一般的な連絡の流れ。</p><p>自動的にピアを発見するプロトコルは使用されていないので、ピアの場所（URL）は手動で追加しなくてはなりません。</p><p>何らかの方法で、ユーザはノードを制御する必要があります。これはHTTPサーバを設定することで可能です。</p><p>以下の方法で、ユーザはノードとの情報交換が可能となります。</p><p>ノードを制御する最も単純な方法は、cURLなどを使用することです。</p><p>curl http://localhost:3001/blocks</p><p>ノードは、2つのWebサーバを露出することに注意してください。1つは、ノードを制御するためのユーザ向けのサーバ（HTTPサーバ）、もう1つは、ノード同士のピア・ツー・ピア連絡用サーバ（Websocket HTTPサーバ）です。</p><p><img class="progressiveMedia-image js-progressiveMedia-image" data-src="https://cdn-images-1.medium.com/max/900/1*BMc5ZcrrH1IRtAx1dOG7DQ.png" src="https://cdn-images-1.medium.com/max/900/1*BMc5ZcrrH1IRtAx1dOG7DQ.png"><br>
（上から下、左から右の順）<br>
注釈：<br>
<em>ブロックチェーン<br>
HTTPインターフェース、ノードの制御用<br>
Websocketインターフェース、他のノードとのP2P連絡用</em></p><p>NaiveChainの主なコンポーネント</p><p>NavieChainは、デモンストレーションおよび学習目的で作成されました。このブロックチェーンには「<a href="https://en.bitcoin.it/wiki/Mining" rel="nofollow" title="" class="ext-link">マイニング</a>」アルゴリズム（<a href="https://en.wikipedia.org/wiki/Proof-of-work_system" rel="nofollow" title="" class="ext-link">プルーフ・オブ・ワーク</a>の<a href="https://en.wikipedia.org/wiki/Proof-of-stake" rel="nofollow" title="" class="ext-link">プルーフ・オブ・ステーク</a>）は含まれていないので、パブリックネットワークで使用することはできませんが、ブロックチェーンを動かすための基本的な機能は実装されています。</p><p>技術的な詳細を知りたい方は、<a href="https://github.com/lhartikk/naivechain" rel="nofollow" title="" class="ext-link">GitHubレポジトリ</a>をご覧ください。</p>
